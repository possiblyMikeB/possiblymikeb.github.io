{"config":{"lang":["en"],"separator":"[\\s\\-]+","pipeline":["stopWordFilter"]},"docs":[{"location":"","title":"About Us","text":"<p>The Research Computing group inside Davidson College's Technology &amp; Innovation department is tasked with operating, supporting, and facilitating the use of advanced cyberinfrastructure for research and instruction. Our primary objective is furthering the academic mission of Davidson College by</p> <ul> <li> <p>Enabling faculty research and furthering the scope of undergraduate research experiences.</p> </li> <li> <p>Improving student educational outcomes by enabling the use of advanced computing infrastructure for instruction, such as JupyterHub and Galaxy Services.</p> </li> <li> <p>Providing and maintaining trusted cyberinfrastructure to support publicly funded Faculty and Student activities.</p> </li> </ul>"},{"location":"#quick-links","title":"Quick Links","text":""},{"location":"badges/","title":"Badges","text":""},{"location":"badges/#markdown-examples-for-editing-remove","title":"Markdown Examples For Editing (REMOVE)","text":"<p>Note</p> <p>This should look different</p> <p>Question</p> <p>Would it be better to love, live or laugh?</p> <p>Quick Launch</p> <p>blahs blah; is this real or just fantasy?</p> <ul> <li><code>mkdocs new [dir-name]</code> - Create a new project.</li> <li><code>mkdocs serve</code> - Start the live-reloading docs server.</li> <li><code>mkdocs build</code> - Build the documentation site.</li> <li><code>mkdocs -h</code> - Print help message and exit.</li> </ul>"},{"location":"badges/#project-layout","title":"Project layout","text":"<pre><code>mkdocs.yml    # The configuration file.\ndocs/\n    index.md  # The documentation homepage.\n    ...       # Other markdown pages, images and other files.\n</code></pre> <p>Tip</p> <p>Keep an eye on your quota usage.</p>"},{"location":"docs/intro/","title":"First Steps","text":""},{"location":"docs/policy/","title":"Usage Policy","text":""},{"location":"docs/storage/","title":"Storage","text":""},{"location":"docs/software/modules/","title":"Modules and EasyBuild","text":"<p>Davidson College Research Computing Department manages the software installed in the cluster nodes using EasyBuild framework. This framework allows users to use environment modules, which in return allows access to software the Research Computing Department provides on cluster nodes. Using software made available by environment modules is more consistent and reliable as it provides an isolated software installation utilizing both compilers and libraries needed to build them. </p>"},{"location":"docs/software/modules/#module-command","title":"Module Command","text":"<p>EasyBuild allows access to the environment modules as Lmod modules. You can access these modules using the <code>module</code> command. </p>"},{"location":"docs/software/modules/#retrieving-available-modules","title":"Retrieving Available Modules","text":"<p>In order to list available modules, use <code>module avail</code> command. In addition to listing available modules, you can see certain tags next to the module names. The <code>(L)</code> tag is for loaded modules, and the <code>(D)</code> tag is for default version of a module. </p> <p>Example</p> <p>On JupyterLab or on compute nodes, you can open a terminal window and run <code>module avail</code> command to list available modules. </p> <p>When a new JupyterLab session is started, it loads certain modules by default. Here is an example output:</p> <pre><code>----------------------------- /opt/pub/modules/generic/Core -------------------------------\nBison/3.8.2                    Go/1.22.1                        foss/2020b\nCERTMgr/3.0.3                  Java/11.0.2                      foss/2021a\nCFSSL/1.6.0                    Java/11.0.20                     foss/2022a           (D)\nEasyBuild/4.8.1                Mathematica/13.2.1               iimpi/2022a \nFastQC/0.11.9-Java-11          MinIO-Client                     imkl/2021.4.0\nGCCcore/10.3.0                 Miniconda3/24.3.0-0      (L)     intel/2021a\nGCCcore/11.3.0        (L,D)    NVHPC/21.2                       intel/2022a \n(...)\n</code></pre> <p>In this output the meaning of the tags are as follows: -Miniconda3 module with version 24.3.0-0 (shortened as Miniconda3/24.3.0-0) is loaded, -foss/2022a is the default version for foss module, and -GCCcore/11.3.0 module is the default version when GCCcore module is loaded, and this module is currently loaded.</p>"},{"location":"docs/software/modules/#searching-for-modules","title":"Searching for Modules","text":"<p>Loading a module can require other modules to be loaded first. In order to check if a module is available to be used and which other modules needs to be loaded, run <code>module spider [module-name]</code> command</p> <p>Example</p> <p><code>PyTorch-bundle</code> module requires <code>GCC</code> and <code>OpenMPI</code> modules to be loaded beforehand. This can be checked by <code>module spider PyTorch-bundle</code> command. A snippet of the output can be as follows:</p> <pre><code>(...)\n-----------------------------------------------------------------------------------------\nPyTorch-bundle: PyTorch-bundle/1.12.1-CUDA-11.7.0\n-----------------------------------------------------------------------------------------\nDescription:\n  PyTorch with compatible versions of official Torch extensions.\n\nYou will need to load all module(s) on any one of the lines below before the \n\"PyTorch-bundle/1.12.1-CUDA-11.7.0\" module is available to load.\n\n  GCC/11.3.0  OpenMPI/4.1.4\n(...)\n</code></pre> <p>Based on the output of the command, GCC/11.3.0 and OpenMPI/4.1.4 modules need to be loaded. Run the following command to load PyTorch module: <code>module load GCC/11.3.0 OpenMPI/4.1.4 PyTorch</code>. This command will load the modules in the listed order. </p> <p>You can verify PyTorch module running by listing the available devices:</p> <pre><code>anscott:gpu0:~$ module purge                               ## Unload all of the modules\nanscott:gpu0:~$ module load GCC OpenMPI PyTorch-bundle     ## Load the modules in the hierarchical order\nanscott:gpu0:~$ module load IPython                        ## Load iPython module to test pytorch\n\nanscott:gpu0:~$ salloc --gpus 1                            ## Allocate a GPU to be used\nsalloc: Granted job allocation 247278\nsalloc: Waiting for resource configuration\nsalloc: Nodes gpu0 are ready for job\n\nbash-4.4$ ipython                                          ## Start iPython session\n\nPython 3.10.4 (main, May 13 2024, 00:59:34) [GCC 11.3.0]\nType 'copyright', 'credits' or 'license' for more information\nIPython 8.14.0 -- An enhanced Interactive Python. Type '?' for help.\n\nIn [1]: import torch                                       ## Import PyTorch library\nIn [2]: torch.cuda.is_available()                          ## Check if there are any GPUs available\nOut[2]: True\n\nIn [3]: torch.cuda.device_count()                          ## Check the number of GPUs available\nOut[3]: 1\n</code></pre> <p>Warning</p> <p>Different versions of the same module can have different dependencies. This is why certain modules can require the version number to be specified when using the spider command. </p>"},{"location":"docs/software/modules/#loadingunloading-modules","title":"Loading/Unloading Modules","text":"<p>Building software can require a series of compilers and libraries, called <code>dependency chain</code>. In order to load a software, you must enable the dependencies it requires at first, only then it will be available to be loaded. Use <code>module load [module-name]</code> to load modules, and <code>module unload [module-name]</code> to unload modules.</p> <p>Tip</p> <p>It can be easier to use the <code>Tab</code> button to use the autocomplete functionality of the commandline interface. For instance, you can use this functionality to list the available versions of a package. Press on <code>Tab</code> twice after you type <code>module load Julia</code> into your terminal, and it will display all of the versions available for the module Julia. </p> <pre><code>anscott:gpu0:~$ module load Julia            ## Press Tab twice for autocomplete\nJulia        Julia/1.7.0  Julia/1.7.2  Julia/1.8.5  Julia/1.9.3\n</code></pre> <p>Note</p> <p>Use <code>module purge</code> to unload all of the loaded modules.</p>"},{"location":"docs/software/modules/#getting-information-about-modules","title":"Getting Information about Modules","text":"<p>If you would like to get more information regarding a module, use <code>module help [module-name]</code> command.</p> <p>Example</p> <p>If you would like to learn more about the module <code>PyTorch</code>, you can use the <code>module help PyTorch</code> command.</p> <pre><code>----------------------- Module Specific Help for \"PyTorch/1.12.1\" --------------------------\n\nDescription\n===========\nTensors and Dynamic neural networks in Python with strong GPU acceleration.\nPyTorch is a deep learning framework that puts Python first.\n\nMore information \n================\n - Homepage: https://pytorch.org/\n</code></pre>"},{"location":"docs/software/modules/#collections","title":"Collections","text":"<p>When you are working on a project, loading each module repedeately can be cumbersome. In order to save the modules you currently have loaded, you can save them as a collection. Collections are only available to individual users, and they persist through sessions. </p>"},{"location":"docs/software/modules/#creating-collections","title":"Creating Collections","text":"<p>To save the current modules, you can use the <code>module save [collection-name]</code> command. </p> <p>Note</p> <p>Good to start with module purge when you are starting a new session. </p> <p>Example</p> <p>Loading <code>TensorFlow/2.11.0-CUDA-11.7.0</code> requires <code>GCC</code> and <code>OpenMPI</code> modules to be loaded first. Once you load the modules you want, you can save them as a collection named 'tensor-modules'.</p> <pre><code>anscott:gpu0:~$ module purge\nanscott:gpu0:~$ module load GCC OpenMPI TensorFlow/2.11.0-CUDA-11.7.0\n\nanscott:gpu0:~$ module save tensor-modules\nSaved current collection of modules to: \"tensor-modules\"\n</code></pre> <p>Now, newly created tensor-modules collection can be restored in a future session, which only loads GCC, OpenMPI and TensorFlow modules. </p>"},{"location":"docs/software/modules/#listing-collections","title":"Listing Collections","text":"<p>To list collections you have created, you can use the <code>module savelist</code> command.</p> <p>Example</p> <pre><code>anscott:gpu0:~$ module savelist\nNamed collection list :\n  1) tensor-modules\n</code></pre>"},{"location":"docs/software/modules/#listing-contents-of-a-collection","title":"Listing Contents of a Collection","text":"<p>To list which modules are being used in a collection, you can use the <code>module describe [collection-name]</code> command.</p> <p>Example</p> <p>In order to list the modules loaded in the collection created in the previous example, use the <code>module describe tensor-modules</code> command.</p> <pre><code>anscott:gpu0:~$ module describe tensor-modules\nCollection \"tensor-modules\" contains: \n   1)  GCCcore/11.3.0        15) ncurses/6.3             29) double-conversion/3.2.0 \n   2)  binutils/2.38         16) libreadline/8.1.2       30) flatbuffers/2.0.7\n   3)  GCC                   17) SQLite/3.38.3           31) giflib/5.2.1\n   4)  slurm/22.05.11        18) GMP/6.2.1               32) ICU/71.1\n   5)  PMIx/4.1.2            19) libffi/3.4.2            33) JsonCpp/1.9.5\n   6)  UCX/1.12.1            20) OpenSSL/1.1             34) NASM/2.15.05\n   7)  UCC/1.0.0             21) Python/3.10.4           35) libjpeg-turbo/2.1.3\n   8)  libfabric/1.15.1      22) pybind11/2.9.2          36) LMDB/0.9.29\n   9)  OpenMPI               23) SciPy-bundle/2022.05    37) nsync/1.25.0\n   10) OpenBLAS/0.3.20       24) Szip/2.1.1              38) protobuf/3.19.4\n   11) FlexiBLAS/3.2.0       25) HDF5/1.12.2             39) protobuf-python/3.19.4\n   12) FFTW/3.3.10           26) h5py/3.7.0              40) snappy/1.1.9\n   13) FFTW.MPI/3.3.10       27) cURL/7.83.0             41) networkx/2.8.4\n   14) ScaLAPACK/2.2.0-fb    28) dill/0.3.6              42) TensorFlow/2.11.0\n</code></pre>"},{"location":"docs/software/modules/#restoring-collections","title":"Restoring Collections","text":"<p>To load a collection, you can use the <code>module restore [collection-name]</code> command.</p> <p>Example</p> <p>In order to load the collection created in the previous example, use the <code>module restore tensor-modules</code> command.</p> <pre><code>anscott:gpu0:~$ module restore tensor-modules\nRestoring modules from user's tensor-modules\n</code></pre>"},{"location":"docs/software/modules/#deleting-a-collection","title":"Deleting a Collection","text":"<p>To delete a collection, you can use the <code>module disable [collection-name]</code> command.</p> <p>Example</p> <p>In order to delete the collection created in the previous example, use the <code>module disable tensor-modules</code> command.</p> <pre><code>anscott:gpu0:~$ module disable tensor-modules\nDisabling tensor-modules collection by renaming with a \"~\"\n</code></pre>"},{"location":"docs/software/modules/#further-reading","title":"Further Reading","text":"<ul> <li>You can read more on how to use module command using the <code>man module</code> command. </li> <li>Using module and conda to manage packages can result in overwriting the same environment variables. If you activate an environment with conda first, and then load a module with module, then module will take precedence as it may overwrite the environment variables. </li> <li>If you need a new module to be installed, contact ti@davidson.edu.</li> </ul>"},{"location":"docs/software/policy/","title":"Software","text":""},{"location":"docs/software/policy/#user-level","title":"User Level","text":""},{"location":"docs/software/policy/#site-managed","title":"Site-Managed","text":""},{"location":"docs/software/policy/#install-request","title":"Install Request","text":""},{"location":"docs/software/policy/#availability","title":"Availability","text":""},{"location":"docs/software/policy/#updates","title":"Updates","text":""},{"location":"docs/software/policy/#retention","title":"Retention","text":""},{"location":"docs/software/catalog/","title":"List of supported software","text":"<p>(quick links: a - b - c - d - e - f - g - h - i - j - l - m - n - o - p - q - r - s - t - u - v - w - x - y - z)</p> <p>EasyBuild supports 340 different software packages (incl. toolchains, bundles):</p> <ul> <li>a<ul> <li>Abseil</li> <li>aiohttp</li> <li>ant</li> <li>ANTLR</li> <li>Armadillo</li> <li>arpack-ng</li> <li>Arrow</li> <li>arrow-R</li> <li>at-spi2-atk</li> <li>at-spi2-core</li> <li>ATK</li> <li>Autoconf</li> <li>Automake</li> <li>Autotools</li> </ul> </li> <li>b<ul> <li>BamTools</li> <li>Bazel</li> <li>BeautifulSoup</li> <li>BEDTools</li> <li>binutils</li> <li>Biopython</li> <li>Bison</li> <li>BLIS</li> <li>bokeh</li> <li>Boost</li> <li>Brotli</li> <li>Brunsli</li> <li>buildenv</li> </ul> </li> <li>c<ul> <li>CaDiCaL</li> <li>cairo</li> <li>canu</li> <li>Catch2</li> <li>CERTMgr</li> <li>cffi</li> <li>CFITSIO</li> <li>CFSSL</li> <li>Check</li> <li>Clang</li> <li>CLHEP</li> <li>CMake</li> <li>code-cli</li> <li>code-server</li> <li>configurable-http-proxy</li> <li>CPLEX</li> <li>cppy</li> <li>cryptography</li> <li>CUDA</li> <li>CUDAcore</li> <li>cuDNN</li> <li>cURL</li> <li>cutadapt</li> <li>Cython</li> </ul> </li> <li>d<ul> <li>dask</li> <li>DavidsonCourse</li> <li>DavidsonJupyter</li> <li>DB</li> <li>DBeaver-Enterprise</li> <li>deepTools</li> <li>dill</li> <li>double-conversion</li> <li>Doxygen</li> </ul> </li> <li>e<ul> <li>EasyBuild</li> <li>Eigen</li> <li>Emacs</li> <li>etcd</li> <li>expecttest</li> </ul> </li> <li>f<ul> <li>FastQC</li> <li>FFmpeg</li> <li>ffnvcodec</li> <li>FFTW</li> <li>FFTW.MPI</li> <li>FLAC</li> <li>flatbuffers</li> <li>FlexiBLAS</li> <li>flit</li> <li>FLTK</li> <li>fontconfig</li> <li>foss</li> <li>freeglut</li> <li>freetype</li> <li>FriBidi</li> </ul> </li> <li>g<ul> <li>Gaussian</li> <li>GaussView</li> <li>gawk</li> <li>GCC</li> <li>GCCcore</li> <li>gcccuda</li> <li>GDAL</li> <li>Gdk-Pixbuf</li> <li>GDRCopy</li> <li>Geant4</li> <li>Geant4-data</li> <li>GEOS</li> <li>gettext</li> <li>gfbf</li> <li>Ghostscript</li> <li>giflib</li> <li>GL2PS</li> <li>GLib</li> <li>GLPK</li> <li>GMP</li> <li>gnuplot</li> <li>Go</li> <li>GObject-Introspection</li> <li>gompi</li> <li>googletest</li> <li>gperf</li> <li>gperftools</li> <li>Graphene</li> <li>GraphicsMagick</li> <li>graphite2</li> <li>GSL</li> <li>GST-plugins-bad</li> <li>GST-plugins-base</li> <li>GStreamer</li> <li>GTK2</li> <li>GTK3</li> <li>GTK4</li> <li>Gurobi</li> </ul> </li> <li>h<ul> <li>h5py</li> <li>HarfBuzz</li> <li>hatchling</li> <li>HDF</li> <li>HDF5</li> <li>help2man</li> <li>Highway</li> <li>hypothesis</li> </ul> </li> <li>i<ul> <li>ICU</li> <li>iimpi</li> <li>imageio</li> <li>ImageMagick</li> <li>Imath</li> <li>imkl</li> <li>imkl-FFTW</li> <li>impi</li> <li>intel</li> <li>intel-compilers</li> <li>intltool</li> <li>Ipopt</li> <li>IPython</li> <li>IRkernel</li> <li>ISA-L</li> </ul> </li> <li>j<ul> <li>JasPer</li> <li>Java</li> <li>jbigkit</li> <li>Jellyfish</li> <li>json-c</li> <li>JsonCpp</li> <li>Julia</li> <li>Jupyter-bundle</li> <li>jupyter-contrib-nbextensions</li> <li>jupyter-matlab-proxy</li> <li>jupyter-resource-usage</li> <li>jupyter-server</li> <li>jupyter-server-proxy</li> <li>JupyterHub</li> <li>JupyterLab</li> <li>jupyterlmod</li> <li>JupyterNotebook</li> </ul> </li> <li>l<ul> <li>LAME</li> <li>LAPACK</li> <li>Leptonica</li> <li>LERC</li> <li>libarchive</li> <li>libcerf</li> <li>libdeflate</li> <li>libepoxy</li> <li>libfabric</li> <li>libffi</li> <li>libgd</li> <li>libgeotiff</li> <li>libgit2</li> <li>libiconv</li> <li>libjpeg-turbo</li> <li>libogg</li> <li>libopus</li> <li>libreadline</li> <li>libsndfile</li> <li>libsodium</li> <li>LibTIFF</li> <li>libtirpc</li> <li>libtool</li> <li>libunwind</li> <li>libvorbis</li> <li>libwebp</li> <li>libyaml</li> <li>LittleCMS</li> <li>LLVM</li> <li>LMDB</li> <li>Lua</li> <li>lxml</li> </ul> </li> <li>m<ul> <li>magma</li> <li>makeinfo</li> <li>Mako</li> <li>Mamba</li> <li>Mathematica</li> <li>MATLAB</li> <li>matlab-proxy</li> <li>matplotlib</li> <li>maturin</li> <li>Meson</li> <li>meson-python</li> <li>METIS</li> <li>Miniconda3</li> <li>MinIO</li> <li>MinIO-Client</li> <li>MPFR</li> <li>MUSCLE</li> </ul> </li> <li>n<ul> <li>NASM</li> <li>nbclassic</li> <li>NCCL</li> <li>ncurses</li> <li>netCDF</li> <li>NetLogo</li> <li>networkx</li> <li>Ninja</li> <li>nlohmann_json</li> <li>NLopt</li> <li>nodejs</li> <li>NSPR</li> <li>NSS</li> <li>nsync</li> <li>NVHPC</li> </ul> </li> <li>o<ul> <li>OAuth2-Proxy</li> <li>Octave</li> <li>OpenBLAS</li> <li>OpenCV</li> <li>OpenEXR</li> <li>OpenJPEG</li> <li>OpenMPI</li> <li>OpenPGM</li> <li>OpenSSL</li> </ul> </li> <li>p<ul> <li>Pango</li> <li>patchelf</li> <li>PCRE</li> <li>PCRE2</li> <li>Perl</li> <li>pgAdmin4</li> <li>pigz</li> <li>Pillow</li> <li>Pillow-SIMD</li> <li>pixman</li> <li>pkg-config</li> <li>pkgconf</li> <li>pkgconfig</li> <li>plotly.py</li> <li>PMIx</li> <li>pocl</li> <li>poetry</li> <li>poppler</li> <li>PostgreSQL</li> <li>PROJ</li> <li>Prometheus</li> <li>Prometheus-Alertmanager</li> <li>Prometheus-BlackBoxExporter</li> <li>Prometheus-NodeExporter</li> <li>protobuf</li> <li>protobuf-python</li> <li>pyBigWig</li> <li>pybind11</li> <li>PyCairo</li> <li>PycURL</li> <li>PyGObject</li> <li>Pysam</li> <li>PySCIPOpt</li> <li>PySlurm</li> <li>pytesseract</li> <li>Python</li> <li>Python-bundle</li> <li>Python-bundle-PyPI</li> <li>python-isal</li> <li>PyTorch</li> <li>PyTorch-bundle</li> <li>PyYAML</li> <li>PyZMQ</li> </ul> </li> <li>q<ul> <li>Qhull</li> <li>qrupdate</li> <li>Qt5</li> <li>Quarto</li> </ul> </li> <li>r<ul> <li>R</li> <li>R-bundle-Bioconductor</li> <li>R-bundle-CRAN</li> <li>R-bundle-Davidson</li> <li>RapidJSON</li> <li>rclone</li> <li>RE2</li> <li>re2c</li> <li>RStudio-Server</li> <li>Ruby</li> <li>Rust</li> </ul> </li> <li>s<ul> <li>SAMtools</li> <li>ScaLAPACK</li> <li>scikit-bio</li> <li>scikit-build</li> <li>scikit-image</li> <li>scikit-learn</li> <li>SCIP</li> <li>SCIP-Suite</li> <li>SciPy-bundle</li> <li>SentencePiece</li> <li>setuptools-rust</li> <li>snappy</li> <li>SOCI</li> <li>SoPlex</li> <li>Spack</li> <li>SQLite</li> <li>Stata</li> <li>SuiteSparse</li> <li>SUNDIALS</li> <li>SVG</li> <li>SWIG</li> <li>Szip</li> </ul> </li> <li>t<ul> <li>tbb</li> <li>tensorboard</li> <li>TensorFlow</li> <li>tesseract</li> <li>texlive</li> <li>Tk</li> <li>Tkinter</li> <li>tornado</li> <li>tqdm</li> <li>TurboVNC</li> </ul> </li> <li>u<ul> <li>UCC</li> <li>UCX</li> <li>UCX-CUDA</li> <li>UDUNITS</li> <li>utf8proc</li> </ul> </li> <li>v<ul> <li>virtualenv</li> <li>VirtualGL</li> </ul> </li> <li>w<ul> <li>Wayland</li> </ul> </li> <li>x<ul> <li>X11</li> <li>x264</li> <li>x265</li> <li>Xerces-C++</li> <li>xorg-macros</li> <li>xprop</li> </ul> </li> <li>y<ul> <li>yaml-cpp</li> <li>Yasm</li> </ul> </li> <li>z<ul> <li>Z3</li> <li>ZeroMQ</li> <li>ZIMPL</li> </ul> </li> </ul> <p>(quick links: a - b - c - d - e - f - g - h - i - j - l - m - n - o - p - q - r - s - t - u - v - w - x - y - z)</p>","boost":0.5},{"location":"docs/software/catalog/a/","title":"List of supported software (a)","text":"<p>(quick links: (all) - a - b - c - d - e - f - g - h - i - j - l - m - n - o - p - q - r - s - t - u - v - w - x - y - z)</p> <ul> <li>Abseil</li> <li>aiohttp</li> <li>ant</li> <li>ANTLR</li> <li>Armadillo</li> <li>arpack-ng</li> <li>Arrow</li> <li>arrow-R</li> <li>at-spi2-atk</li> <li>at-spi2-core</li> <li>ATK</li> <li>Autoconf</li> <li>Automake</li> <li>Autotools</li> </ul> <p>(quick links: (all) - a - b - c - d - e - f - g - h - i - j - l - m - n - o - p - q - r - s - t - u - v - w - x - y - z)</p>","boost":0.5},{"location":"docs/software/catalog/a/ANTLR/","title":"ANTLR","text":"<p>ANTLR, ANother Tool for Language Recognition, (formerly PCCTS)  is a language tool that provides a framework for constructing recognizers,  compilers, and translators from grammatical descriptions containing  Java, C#, C++, or Python actions.</p> <p>homepage: https://www.antlr2.org/</p> version versionsuffix toolchain <code>2.7.7</code> <code>-Java-11</code> <code>GCCcore/10.2.0</code> <code>2.7.7</code> <code>-Java-11</code> <code>GCCcore/11.3.0</code> <p>(quick links: (all) - a - b - c - d - e - f - g - h - i - j - l - m - n - o - p - q - r - s - t - u - v - w - x - y - z)</p>","boost":0.5},{"location":"docs/software/catalog/a/ATK/","title":"ATK","text":"<p>ATK provides the set of accessibility interfaces that are implemented by other  toolkits and applications. Using the ATK interfaces, accessibility tools have  full access to view and control running applications.</p> <p>homepage: https://developer.gnome.org/atk/</p> version toolchain <code>2.38.0</code> <code>GCCcore/11.3.0</code> <code>2.38.0</code> <code>GCCcore/12.3.0</code> <p>(quick links: (all) - a - b - c - d - e - f - g - h - i - j - l - m - n - o - p - q - r - s - t - u - v - w - x - y - z)</p>","boost":0.5},{"location":"docs/software/catalog/a/Abseil/","title":"Abseil","text":"<p>Abseil is an open-source collection of C++ library code designed to augment the C++ standard library. The Abseil library code is collected from Google's own C++ code base, has been extensively tested and used in production, and is the same code we depend on in our daily coding lives.</p> <p>homepage: https://abseil.io/</p> version toolchain <code>20230125.3</code> <code>GCCcore/12.3.0</code> <code>20240116.1</code> <code>GCCcore/12.3.0</code> <p>(quick links: (all) - a - b - c - d - e - f - g - h - i - j - l - m - n - o - p - q - r - s - t - u - v - w - x - y - z)</p>","boost":0.5},{"location":"docs/software/catalog/a/Armadillo/","title":"Armadillo","text":"<p>Armadillo is an open-source C++ linear algebra library (matrix maths) aiming towards  a good balance between speed and ease of use. Integer, floating point and complex numbers are supported,  as well as a subset of trigonometric and statistics functions.</p> <p>homepage: https://arma.sourceforge.net/</p> version toolchain <code>11.4.3</code> <code>foss/2022a</code> <code>12.6.2</code> <code>foss/2023a</code> <code>12.8.0</code> <code>foss/2023a</code> <p>(quick links: (all) - a - b - c - d - e - f - g - h - i - j - l - m - n - o - p - q - r - s - t - u - v - w - x - y - z)</p>","boost":0.5},{"location":"docs/software/catalog/a/Arrow/","title":"Arrow","text":"<p>Apache Arrow (incl. PyArrow Python bindings), a cross-language development platform  for in-memory data.</p> <p>homepage: https://arrow.apache.org</p> version toolchain <code>14.0.1</code> <code>gfbf/2023a</code> <code>16.1.0</code> <code>gfbf/2023a</code> <code>8.0.0</code> <code>foss/2022a</code> <p>(quick links: (all) - a - b - c - d - e - f - g - h - i - j - l - m - n - o - p - q - r - s - t - u - v - w - x - y - z)</p>","boost":0.5},{"location":"docs/software/catalog/a/Autoconf/","title":"Autoconf","text":"<p>Autoconf is an extensible package of M4 macros that produce shell scripts  to automatically configure software source code packages. These scripts can  adapt the packages to many kinds of UNIX-like systems without manual user  intervention. Autoconf creates a configuration script for a package from a  template file that lists the operating system features that the package can  use, in the form of M4 macro calls.</p> <p>homepage: https://www.gnu.org/software/autoconf/</p> version toolchain <code>2.69</code> <code>GCCcore/10.2.0</code> <code>2.69</code> <code>GCCcore/11.3.0</code> <code>2.71</code> <code>GCCcore/10.3.0</code> <code>2.71</code> <code>GCCcore/11.3.0</code> <code>2.71</code> <code>GCCcore/12.3.0</code> <p>(quick links: (all) - a - b - c - d - e - f - g - h - i - j - l - m - n - o - p - q - r - s - t - u - v - w - x - y - z)</p>","boost":0.5},{"location":"docs/software/catalog/a/Automake/","title":"Automake","text":"<p>Automake: GNU Standards-compliant Makefile generator</p> <p>homepage: https://www.gnu.org/software/automake/automake.html</p> version toolchain <code>1.16.2</code> <code>GCCcore/10.2.0</code> <code>1.16.2</code> <code>GCCcore/11.3.0</code> <code>1.16.3</code> <code>GCCcore/10.3.0</code> <code>1.16.5</code> <code>GCCcore/11.3.0</code> <code>1.16.5</code> <code>GCCcore/12.3.0</code> <p>(quick links: (all) - a - b - c - d - e - f - g - h - i - j - l - m - n - o - p - q - r - s - t - u - v - w - x - y - z)</p>","boost":0.5},{"location":"docs/software/catalog/a/Autotools/","title":"Autotools","text":"<p>This bundle collect the standard GNU build tools: Autoconf, Automake  and libtool</p> <p>homepage: https://autotools.io</p> version toolchain <code>20200321</code> <code>GCCcore/10.2.0</code> <code>20200321</code> <code>GCCcore/11.3.0</code> <code>20210128</code> <code>GCCcore/10.3.0</code> <code>20220317</code> <code>GCCcore/11.3.0</code> <code>20220317</code> <code>GCCcore/12.3.0</code> <p>(quick links: (all) - a - b - c - d - e - f - g - h - i - j - l - m - n - o - p - q - r - s - t - u - v - w - x - y - z)</p>","boost":0.5},{"location":"docs/software/catalog/a/aiohttp/","title":"aiohttp","text":"<p>Asynchronous HTTP client/server framework for asyncio and Python.</p> <p>homepage: https://github.com/aio-libs/aiohttp</p> version toolchain <code>3.8.3</code> <code>GCCcore/11.3.0</code> <code>3.8.5</code> <code>GCCcore/11.3.0</code> <p>(quick links: (all) - a - b - c - d - e - f - g - h - i - j - l - m - n - o - p - q - r - s - t - u - v - w - x - y - z)</p>","boost":0.5},{"location":"docs/software/catalog/a/ant/","title":"ant","text":"<p>Apache Ant is a Java library and command-line tool whose mission is to drive processes described in  build files as targets and extension points dependent upon each other. The main known usage of Ant is the build of  Java applications.</p> <p>homepage: https://ant.apache.org/</p> version versionsuffix toolchain <code>1.10.12</code> <code>-Java-11</code> <code>system</code> <p>(quick links: (all) - a - b - c - d - e - f - g - h - i - j - l - m - n - o - p - q - r - s - t - u - v - w - x - y - z)</p>","boost":0.5},{"location":"docs/software/catalog/a/arpack-ng/","title":"arpack-ng","text":"<p>ARPACK is a collection of Fortran77 subroutines designed to solve large scale eigenvalue problems.</p> <p>homepage: https://github.com/opencollab/arpack-ng</p> version toolchain <code>3.8.0</code> <code>foss/2020b</code> <code>3.8.0</code> <code>foss/2022a</code> <code>3.9.0</code> <code>foss/2023a</code> <p>(quick links: (all) - a - b - c - d - e - f - g - h - i - j - l - m - n - o - p - q - r - s - t - u - v - w - x - y - z)</p>","boost":0.5},{"location":"docs/software/catalog/a/arrow-R/","title":"arrow-R","text":"<p>R interface to the Apache Arrow C++ library</p> <p>homepage: https://cran.r-project.org/web/packages/arrow</p> version versionsuffix toolchain <code>14.0.1</code> <code>-R-4.3.2</code> <code>foss/2023a</code> <code>8.0.0</code> <code>-R-4.2.1</code> <code>foss/2022a</code> <p>(quick links: (all) - a - b - c - d - e - f - g - h - i - j - l - m - n - o - p - q - r - s - t - u - v - w - x - y - z)</p>","boost":0.5},{"location":"docs/software/catalog/a/at-spi2-atk/","title":"at-spi2-atk","text":"<p>AT-SPI 2 toolkit bridge</p> <p>homepage: https://wiki.gnome.org/Accessibility</p> version toolchain <code>2.38.0</code> <code>GCCcore/11.3.0</code> <code>2.38.0</code> <code>GCCcore/12.3.0</code> <p>(quick links: (all) - a - b - c - d - e - f - g - h - i - j - l - m - n - o - p - q - r - s - t - u - v - w - x - y - z)</p>","boost":0.5},{"location":"docs/software/catalog/a/at-spi2-core/","title":"at-spi2-core","text":"<p>Assistive Technology Service Provider Interface.</p> <p>homepage: https://wiki.gnome.org/Accessibility</p> version toolchain <code>2.44.1</code> <code>GCCcore/11.3.0</code> <code>2.49.91</code> <code>GCCcore/12.3.0</code> <p>(quick links: (all) - a - b - c - d - e - f - g - h - i - j - l - m - n - o - p - q - r - s - t - u - v - w - x - y - z)</p>","boost":0.5},{"location":"docs/software/catalog/b/","title":"List of supported software (b)","text":"<p>(quick links: (all) - a - b - c - d - e - f - g - h - i - j - l - m - n - o - p - q - r - s - t - u - v - w - x - y - z)</p> <ul> <li>BamTools</li> <li>Bazel</li> <li>BeautifulSoup</li> <li>BEDTools</li> <li>binutils</li> <li>Biopython</li> <li>Bison</li> <li>BLIS</li> <li>bokeh</li> <li>Boost</li> <li>Brotli</li> <li>Brunsli</li> <li>buildenv</li> </ul> <p>(quick links: (all) - a - b - c - d - e - f - g - h - i - j - l - m - n - o - p - q - r - s - t - u - v - w - x - y - z)</p>","boost":0.5},{"location":"docs/software/catalog/b/BEDTools/","title":"BEDTools","text":"<p>BEDTools: a powerful toolset for genome arithmetic. The BEDTools utilities allow one to address common genomics tasks such as finding feature overlaps and computing coverage. The utilities are largely based on four widely-used file formats: BED, GFF/GTF, VCF, and SAM/BAM.</p> <p>homepage: https://bedtools.readthedocs.io/</p> version toolchain <code>2.30.0</code> <code>GCC/11.3.0</code> <p>(quick links: (all) - a - b - c - d - e - f - g - h - i - j - l - m - n - o - p - q - r - s - t - u - v - w - x - y - z)</p>","boost":0.5},{"location":"docs/software/catalog/b/BLIS/","title":"BLIS","text":"<p>BLIS is a portable software framework for instantiating high-performance BLAS-like dense linear algebra libraries.</p> <p>homepage: https://github.com/flame/blis/</p> version toolchain <code>0.8.1</code> <code>GCC/10.3.0</code> <code>0.9.0</code> <code>GCC/11.3.0</code> <code>0.9.0</code> <code>GCC/12.3.0</code> <p>(quick links: (all) - a - b - c - d - e - f - g - h - i - j - l - m - n - o - p - q - r - s - t - u - v - w - x - y - z)</p>","boost":0.5},{"location":"docs/software/catalog/b/BamTools/","title":"BamTools","text":"<p>BamTools provides both a programmer's API and an end-user's toolkit for handling BAM files.</p> <p>homepage: https://github.com/pezmaster31/bamtools</p> version toolchain <code>2.5.1</code> <code>GCC/10.2.0</code> <code>2.5.2</code> <code>GCC/11.3.0</code> <p>(quick links: (all) - a - b - c - d - e - f - g - h - i - j - l - m - n - o - p - q - r - s - t - u - v - w - x - y - z)</p>","boost":0.5},{"location":"docs/software/catalog/b/Bazel/","title":"Bazel","text":"<p>Bazel is a build tool that builds code quickly and reliably. It is used to build the majority of Google's software.</p> <p>homepage: https://bazel.io/</p> version toolchain <code>5.1.1</code> <code>GCCcore/11.3.0</code> <p>(quick links: (all) - a - b - c - d - e - f - g - h - i - j - l - m - n - o - p - q - r - s - t - u - v - w - x - y - z)</p>","boost":0.5},{"location":"docs/software/catalog/b/BeautifulSoup/","title":"BeautifulSoup","text":"<p>Beautiful Soup is a Python library designed for quick turnaround projects like screen-scraping.</p> <p>homepage: https://www.crummy.com/software/BeautifulSoup</p> version toolchain <code>4.10.0</code> <code>GCCcore/11.3.0</code> <code>4.12.2</code> <code>GCCcore/11.3.0</code> <p>(quick links: (all) - a - b - c - d - e - f - g - h - i - j - l - m - n - o - p - q - r - s - t - u - v - w - x - y - z)</p>","boost":0.5},{"location":"docs/software/catalog/b/Biopython/","title":"Biopython","text":"<p>Biopython is a set of freely available tools for biological  computation written in Python by an international team of developers. It is  a distributed collaborative effort to develop Python libraries and  applications which address the needs of current and future work in  bioinformatics.</p> <p>homepage: https://www.biopython.org</p> version toolchain <code>1.79</code> <code>foss/2022a</code> <p>(quick links: (all) - a - b - c - d - e - f - g - h - i - j - l - m - n - o - p - q - r - s - t - u - v - w - x - y - z)</p>","boost":0.5},{"location":"docs/software/catalog/b/Bison/","title":"Bison","text":"<p>Bison is a general-purpose parser generator that converts an annotated context-free grammar  into a deterministic LR or generalized LR (GLR) parser employing LALR(1) parser tables.</p> <p>homepage: https://www.gnu.org/software/bison</p> version toolchain <code>3.7.1</code> <code>GCCcore/10.2.0</code> <code>3.7.6</code> <code>GCCcore/10.3.0</code> <code>3.8.2</code> <code>GCCcore/10.2.0</code> <code>3.8.2</code> <code>GCCcore/11.3.0</code> <code>3.8.2</code> <code>GCCcore/12.3.0</code> <code>3.8.2</code> <code>system</code> <p>(quick links: (all) - a - b - c - d - e - f - g - h - i - j - l - m - n - o - p - q - r - s - t - u - v - w - x - y - z)</p>","boost":0.5},{"location":"docs/software/catalog/b/Boost/","title":"Boost","text":"<p>Boost provides free peer-reviewed portable C++ source libraries.</p> <p>homepage: https://www.boost.org/</p> version toolchain <code>1.74.0</code> <code>GCC/10.2.0</code> <code>1.79.0</code> <code>GCC/11.3.0</code> <code>1.82.0</code> <code>GCC/12.3.0</code> <code>1.83.0</code> <code>GCC/12.3.0</code> <p>(quick links: (all) - a - b - c - d - e - f - g - h - i - j - l - m - n - o - p - q - r - s - t - u - v - w - x - y - z)</p>","boost":0.5},{"location":"docs/software/catalog/b/Brotli/","title":"Brotli","text":"<p>Brotli is a generic-purpose lossless compression algorithm that compresses data using a combination  of a modern variant of the LZ77 algorithm, Huffman coding and 2nd order context modeling, with a compression ratio  comparable to the best currently available general-purpose compression methods. It is similar in speed with deflate  but offers more dense compression. The specification of the Brotli Compressed Data Format is defined in RFC 7932.</p> <p>homepage: https://github.com/google/brotli</p> version toolchain <code>1.0.9</code> <code>GCCcore/10.2.0</code> <code>1.0.9</code> <code>GCCcore/11.3.0</code> <code>1.0.9</code> <code>GCCcore/12.3.0</code> <code>1.1.0</code> <code>GCCcore/12.3.0</code> <p>(quick links: (all) - a - b - c - d - e - f - g - h - i - j - l - m - n - o - p - q - r - s - t - u - v - w - x - y - z)</p>","boost":0.5},{"location":"docs/software/catalog/b/Brunsli/","title":"Brunsli","text":"<p>Brunsli is a lossless JPEG repacking library.</p> <p>homepage: https://github.com/google/brunsli/</p> version toolchain <code>0.1</code> <code>GCCcore/11.3.0</code> <code>0.1</code> <code>GCCcore/12.3.0</code> <p>(quick links: (all) - a - b - c - d - e - f - g - h - i - j - l - m - n - o - p - q - r - s - t - u - v - w - x - y - z)</p>","boost":0.5},{"location":"docs/software/catalog/b/binutils/","title":"binutils","text":"<p>binutils: GNU binary utilities</p> <p>homepage: https://directory.fsf.org/project/binutils/</p> version toolchain <code>2.35</code> <code>GCCcore/10.2.0</code> <code>2.35</code> <code>system</code> <code>2.36.1</code> <code>GCCcore/10.3.0</code> <code>2.36.1</code> <code>system</code> <code>2.38</code> <code>GCCcore/10.2.0</code> <code>2.38</code> <code>GCCcore/11.3.0</code> <code>2.38</code> <code>system</code> <code>2.40</code> <code>GCCcore/12.3.0</code> <code>2.40</code> <code>system</code> <code>2.42</code> <code>system</code> <p>(quick links: (all) - a - b - c - d - e - f - g - h - i - j - l - m - n - o - p - q - r - s - t - u - v - w - x - y - z)</p>","boost":0.5},{"location":"docs/software/catalog/b/bokeh/","title":"bokeh","text":"<p>Statistical and novel interactive HTML plots for Python</p> <p>homepage: https://github.com/bokeh/bokeh</p> version toolchain <code>2.4.3</code> <code>foss/2022a</code> <p>(quick links: (all) - a - b - c - d - e - f - g - h - i - j - l - m - n - o - p - q - r - s - t - u - v - w - x - y - z)</p>","boost":0.5},{"location":"docs/software/catalog/b/buildenv/","title":"buildenv","text":"<p>This module sets a group of environment variables for compilers, linkers, maths libraries, etc., that  you can use to easily transition between toolchains when building your software. To query the variables being set  please use: module show  <p>homepage:  version versionsuffix toolchain <code>default</code> <code>foss/2020b</code> <code>default</code> <code>-CUDA-11.3.1</code> <code>foss/2021a</code> <code>default</code> <code>foss/2021a</code> <code>default</code> <code>-CUDA-11.7.0</code> <code>foss/2022a</code> <code>default</code> <code>-CUDA-11.8.0</code> <code>foss/2022a</code> <code>default</code> <code>foss/2022a</code> <p>(quick links: (all) - a - b - c - d - e - f - g - h - i - j - l - m - n - o - p - q - r - s - t - u - v - w - x - y - z)</p>","boost":0.5},{"location":"docs/software/catalog/c/","title":"List of supported software (c)","text":"<p>(quick links: (all) - a - b - c - d - e - f - g - h - i - j - l - m - n - o - p - q - r - s - t - u - v - w - x - y - z)</p> <ul> <li>CaDiCaL</li> <li>cairo</li> <li>canu</li> <li>Catch2</li> <li>CERTMgr</li> <li>cffi</li> <li>CFITSIO</li> <li>CFSSL</li> <li>Check</li> <li>Clang</li> <li>CLHEP</li> <li>CMake</li> <li>code-cli</li> <li>code-server</li> <li>configurable-http-proxy</li> <li>CPLEX</li> <li>cppy</li> <li>cryptography</li> <li>CUDA</li> <li>CUDAcore</li> <li>cuDNN</li> <li>cURL</li> <li>cutadapt</li> <li>Cython</li> </ul> <p>(quick links: (all) - a - b - c - d - e - f - g - h - i - j - l - m - n - o - p - q - r - s - t - u - v - w - x - y - z)</p>","boost":0.5},{"location":"docs/software/catalog/c/CERTMgr/","title":"CERTMgr","text":"<p>certmgr is a tool for managing certificates using CFSSL. It does the following:   1. Ensures certificates are present.  2. Renews certificates before they expire.  3. Triggering a service reload or restart on certificate updates.  It operates on certificate specs, which are JSON files containing the information needed to generate a certificate.</p> <p>homepage: https://github.com/cloudflare/certmgr</p> version toolchain <code>3.0.3</code> <code>system</code> <p>(quick links: (all) - a - b - c - d - e - f - g - h - i - j - l - m - n - o - p - q - r - s - t - u - v - w - x - y - z)</p>","boost":0.5},{"location":"docs/software/catalog/c/CFITSIO/","title":"CFITSIO","text":"<p>CFITSIO is a library of C and Fortran subroutines for reading and writing data files in FITS (Flexible Image Transport System) data format.</p> <p>homepage: https://heasarc.gsfc.nasa.gov/fitsio/</p> version toolchain <code>4.2.0</code> <code>GCCcore/11.3.0</code> <code>4.3.0</code> <code>GCCcore/12.3.0</code> <code>4.3.1</code> <code>GCCcore/12.3.0</code> <p>(quick links: (all) - a - b - c - d - e - f - g - h - i - j - l - m - n - o - p - q - r - s - t - u - v - w - x - y - z)</p>","boost":0.5},{"location":"docs/software/catalog/c/CFSSL/","title":"CFSSL","text":"<p>CFSSL is CloudFlare's PKI/TLS swiss army knife. It is both a command line  tool and an HTTP API server for signing, verifying, and bundling TLS certificates.</p> <p>homepage: https://github.com/cloudflare/cfssl</p> version toolchain <code>1.6.0</code> <code>system</code> <p>(quick links: (all) - a - b - c - d - e - f - g - h - i - j - l - m - n - o - p - q - r - s - t - u - v - w - x - y - z)</p>","boost":0.5},{"location":"docs/software/catalog/c/CLHEP/","title":"CLHEP","text":"<p>The CLHEP project is intended to be a set of HEP-specific foundation and  utility classes such as random generators, physics vectors, geometry and linear algebra.  CLHEP is structured in a set of packages independent of any external package.</p> <p>homepage: https://proj-clhep.web.cern.ch/proj-clhep/</p> version toolchain <code>2.4.1.3</code> <code>GCC/11.3.0</code> <p>(quick links: (all) - a - b - c - d - e - f - g - h - i - j - l - m - n - o - p - q - r - s - t - u - v - w - x - y - z)</p>","boost":0.5},{"location":"docs/software/catalog/c/CMake/","title":"CMake","text":"<p>CMake, the cross-platform, open-source build system.  CMake is a family of  tools designed to build, test and package software.</p> <p>homepage: https://www.cmake.org</p> version toolchain <code>3.18.4</code> <code>GCCcore/10.2.0</code> <code>3.20.1</code> <code>GCCcore/10.2.0</code> <code>3.20.1</code> <code>GCCcore/10.3.0</code> <code>3.23.1</code> <code>GCCcore/10.2.0</code> <code>3.23.1</code> <code>GCCcore/11.3.0</code> <code>3.24.3</code> <code>GCCcore/11.3.0</code> <code>3.26.3</code> <code>GCCcore/12.3.0</code> <code>3.27.6</code> <code>GCCcore/12.3.0</code> <p>(quick links: (all) - a - b - c - d - e - f - g - h - i - j - l - m - n - o - p - q - r - s - t - u - v - w - x - y - z)</p>","boost":0.5},{"location":"docs/software/catalog/c/CPLEX/","title":"CPLEX","text":"<p>IBM ILOG CPLEX Optimizer's mathematical programming technology enables  analytical decision support for improving efficiency,  reducing costs, and increasing profitability.</p> <p>homepage: https://www.ibm.com/analytics/cplex-optimizer</p> version versionsuffix toolchain <code>12.10</code> <code>-Python-3.8.6</code> <code>GCCcore/11.3.0</code> <p>(quick links: (all) - a - b - c - d - e - f - g - h - i - j - l - m - n - o - p - q - r - s - t - u - v - w - x - y - z)</p>","boost":0.5},{"location":"docs/software/catalog/c/CUDA/","title":"CUDA","text":"<p>CUDA (formerly Compute Unified Device Architecture) is a parallel  computing platform and programming model created by NVIDIA and implemented by the  graphics processing units (GPUs) that they produce. CUDA gives developers access  to the virtual instruction set and memory of the parallel computational elements in CUDA GPUs.</p> <p>homepage: https://developer.nvidia.com/cuda-toolkit</p> version toolchain <code>11.3.1</code> <code>system</code> <code>11.7.0</code> <code>system</code> <code>11.8.0</code> <code>system</code> <code>12.1.1</code> <code>system</code> <p>(quick links: (all) - a - b - c - d - e - f - g - h - i - j - l - m - n - o - p - q - r - s - t - u - v - w - x - y - z)</p>","boost":0.5},{"location":"docs/software/catalog/c/CUDAcore/","title":"CUDAcore","text":"<p>CUDA (formerly Compute Unified Device Architecture) is a parallel  computing platform and programming model created by NVIDIA and implemented by the  graphics processing units (GPUs) that they produce. CUDA gives developers access  to the virtual instruction set and memory of the parallel computational elements in CUDA GPUs.</p> <p>homepage: https://developer.nvidia.com/cuda-toolkit</p> version toolchain <code>11.1.1</code> <code>system</code> <p>(quick links: (all) - a - b - c - d - e - f - g - h - i - j - l - m - n - o - p - q - r - s - t - u - v - w - x - y - z)</p>","boost":0.5},{"location":"docs/software/catalog/c/CaDiCaL/","title":"CaDiCaL","text":"<p>CaDiCaL is a simplified satisfiability solver. The original goal of the development of CaDiCaL was to obtain a CDCL solver, which is easy to understand and change, while at the same time not being much slower than other state-of-the-art CDCL solvers.</p> <p>homepage: https://github.com/arminbiere/cadical</p> version toolchain <code>1.8.0</code> <code>GCC/10.2.0</code> <code>1.8.0</code> <code>GCC/11.3.0</code> <p>(quick links: (all) - a - b - c - d - e - f - g - h - i - j - l - m - n - o - p - q - r - s - t - u - v - w - x - y - z)</p>","boost":0.5},{"location":"docs/software/catalog/c/Catch2/","title":"Catch2","text":"<p>A modern, C++-native, header-only,  test framework for unit-tests, TDD and BDD  - using C++11, C++14, C++17 and later</p> <p>homepage: https://github.com/catchorg/Catch2</p> version toolchain <code>2.13.9</code> <code>GCCcore/11.3.0</code> <code>2.13.9</code> <code>GCCcore/12.3.0</code> <p>(quick links: (all) - a - b - c - d - e - f - g - h - i - j - l - m - n - o - p - q - r - s - t - u - v - w - x - y - z)</p>","boost":0.5},{"location":"docs/software/catalog/c/Check/","title":"Check","text":"<p>Check is a unit testing framework for C. It features a simple interface for defining unit tests, putting little in the way of the developer. Tests are run in a separate address space, so both assertion failures and code errors that cause segmentation faults or other signals can be caught. Test results are reportable in the following: Subunit, TAP, XML, and a generic logging format.</p> <p>homepage: https://libcheck.github.io/check/</p> version toolchain <code>0.15.2</code> <code>GCCcore/10.2.0</code> <p>(quick links: (all) - a - b - c - d - e - f - g - h - i - j - l - m - n - o - p - q - r - s - t - u - v - w - x - y - z)</p>","boost":0.5},{"location":"docs/software/catalog/c/Clang/","title":"Clang","text":"<p>C, C++, Objective-C compiler, based on LLVM.  Does not  include C++ standard library -- use libstdc++ from GCC.</p> <p>homepage: https://clang.llvm.org/</p> version toolchain <code>13.0.1</code> <code>GCCcore/11.3.0</code> <p>(quick links: (all) - a - b - c - d - e - f - g - h - i - j - l - m - n - o - p - q - r - s - t - u - v - w - x - y - z)</p>","boost":0.5},{"location":"docs/software/catalog/c/Cython/","title":"Cython","text":"<p>Cython is an optimising static compiler for both the Python programming language and the extended Cython programming language (based on Pyrex).</p> <p>homepage: https://cython.org/</p> version toolchain <code>0.29.33</code> <code>GCCcore/11.3.0</code> <code>3.0.10</code> <code>GCCcore/12.3.0</code> <code>3.0.8</code> <code>GCCcore/11.3.0</code> <p>(quick links: (all) - a - b - c - d - e - f - g - h - i - j - l - m - n - o - p - q - r - s - t - u - v - w - x - y - z)</p>","boost":0.5},{"location":"docs/software/catalog/c/cURL/","title":"cURL","text":"<p>libcurl is a free and easy-to-use client-side URL transfer library,  supporting DICT, FILE, FTP, FTPS, Gopher, HTTP, HTTPS, IMAP, IMAPS, LDAP,  LDAPS, POP3, POP3S, RTMP, RTSP, SCP, SFTP, SMTP, SMTPS, Telnet and TFTP.  libcurl supports SSL certificates, HTTP POST, HTTP PUT, FTP uploading, HTTP  form based upload, proxies, cookies, user+password authentication (Basic,  Digest, NTLM, Negotiate, Kerberos), file transfer resume, http proxy tunneling  and more.</p> <p>homepage: https://curl.haxx.se</p> version toolchain <code>7.72.0</code> <code>GCCcore/10.2.0</code> <code>7.76.0</code> <code>GCCcore/10.3.0</code> <code>7.83.0</code> <code>GCCcore/11.3.0</code> <code>8.0.1</code> <code>GCCcore/11.3.0</code> <code>8.0.1</code> <code>GCCcore/12.3.0</code> <code>8.3.0</code> <code>GCCcore/12.3.0</code> <p>(quick links: (all) - a - b - c - d - e - f - g - h - i - j - l - m - n - o - p - q - r - s - t - u - v - w - x - y - z)</p>","boost":0.5},{"location":"docs/software/catalog/c/cairo/","title":"cairo","text":"<p>Cairo is a 2D graphics library with support for multiple output devices.  Currently supported output targets include the X Window System (via both Xlib and XCB), Quartz, Win32, image buffers,  PostScript, PDF, and SVG file output. Experimental backends include OpenGL, BeOS, OS/2, and DirectFB</p> <p>homepage: https://cairographics.org</p> version toolchain <code>1.17.4</code> <code>GCCcore/11.3.0</code> <code>1.17.8</code> <code>GCCcore/12.3.0</code> <code>1.18.0</code> <code>GCCcore/12.3.0</code> <p>(quick links: (all) - a - b - c - d - e - f - g - h - i - j - l - m - n - o - p - q - r - s - t - u - v - w - x - y - z)</p>","boost":0.5},{"location":"docs/software/catalog/c/canu/","title":"canu","text":"<p>Canu is a fork of the Celera Assembler designed for high-noise single-molecule sequencing</p> <p>homepage: https://canu.readthedocs.io</p> version toolchain <code>2.2</code> <code>GCC/11.3.0</code> <p>(quick links: (all) - a - b - c - d - e - f - g - h - i - j - l - m - n - o - p - q - r - s - t - u - v - w - x - y - z)</p>","boost":0.5},{"location":"docs/software/catalog/c/cffi/","title":"cffi","text":"<p>C Foreign Function Interface for Python. Interact with almost any C code from Python, based on C-like declarations that you can often copy-paste from header files or documentation.</p> <p>homepage: https://cffi.readthedocs.io/en/latest/</p> version toolchain <code>1.15.1</code> <code>GCCcore/11.3.0</code> <code>1.15.1</code> <code>GCCcore/12.3.0</code> <p>(quick links: (all) - a - b - c - d - e - f - g - h - i - j - l - m - n - o - p - q - r - s - t - u - v - w - x - y - z)</p>","boost":0.5},{"location":"docs/software/catalog/c/code-cli/","title":"code-cli","text":"<p>Visual Studio Code is a lightweight but powerful source code editor      which runs on your desktop and is available for Windows, macOS and      Linux. It comes with built-in support for JavaScript, TypeScript and      Node.js and has a rich ecosystem of extensions for other languages      and runtimes (such as C++, C#, Java, Python, PHP, Go, .NET). Begin      your journey with VS Code with these introductory videos.</p> <p>homepage: https://code.visualstudio.com/</p> version versionsuffix toolchain <code>1.85.1</code> <code>-x64</code> <code>system</code> <code>1.89.1</code> <code>-x64</code> <code>system</code> <p>(quick links: (all) - a - b - c - d - e - f - g - h - i - j - l - m - n - o - p - q - r - s - t - u - v - w - x - y - z)</p>","boost":0.5},{"location":"docs/software/catalog/c/code-server/","title":"code-server","text":"<p>Run VS Code on any machine anywhere and access it in the browser.</p> <p>homepage: https://github.com/cdr/code-server</p> version toolchain <code>4.5.1</code> <code>system</code> <p>(quick links: (all) - a - b - c - d - e - f - g - h - i - j - l - m - n - o - p - q - r - s - t - u - v - w - x - y - z)</p>","boost":0.5},{"location":"docs/software/catalog/c/configurable-http-proxy/","title":"configurable-http-proxy","text":"<p>HTTP proxy for node.js including a REST API for updating the routing table.  Developed as a part of the Jupyter Hub multi-user server.</p> <p>homepage: https://github.com/jupyterhub/configurable-http-proxy</p> version toolchain <code>4.5.6</code> <code>GCCcore/11.3.0</code> <p>(quick links: (all) - a - b - c - d - e - f - g - h - i - j - l - m - n - o - p - q - r - s - t - u - v - w - x - y - z)</p>","boost":0.5},{"location":"docs/software/catalog/c/cppy/","title":"cppy","text":"<p>A small C++ header library which makes it easier to write Python extension modules. The primary feature is a PyObject smart pointer which automatically handles reference counting and provides convenience methods for performing common object operations.</p> <p>homepage: https://github.com/nucleic/cppy</p> version toolchain <code>1.2.1</code> <code>GCCcore/11.3.0</code> <p>(quick links: (all) - a - b - c - d - e - f - g - h - i - j - l - m - n - o - p - q - r - s - t - u - v - w - x - y - z)</p>","boost":0.5},{"location":"docs/software/catalog/c/cryptography/","title":"cryptography","text":"<p>cryptography is a package designed to expose cryptographic primitives and recipes to Python developers.</p> <p>homepage: https://github.com/pyca/cryptography</p> version toolchain <code>41.0.1</code> <code>GCCcore/11.3.0</code> <code>41.0.1</code> <code>GCCcore/12.3.0</code> <code>41.0.5</code> <code>GCCcore/12.3.0</code> <p>(quick links: (all) - a - b - c - d - e - f - g - h - i - j - l - m - n - o - p - q - r - s - t - u - v - w - x - y - z)</p>","boost":0.5},{"location":"docs/software/catalog/c/cuDNN/","title":"cuDNN","text":"<p>The NVIDIA CUDA Deep Neural Network library (cuDNN) is a GPU-accelerated library of primitives for deep neural networks.</p> <p>homepage: https://developer.nvidia.com/cudnn</p> version versionsuffix toolchain <code>8.0.4.30</code> <code>-CUDA-11.1.1</code> <code>system</code> <code>8.2.1.32</code> <code>-CUDA-11.3.1</code> <code>system</code> <code>8.4.1.50</code> <code>-CUDA-11.7.0</code> <code>system</code> <code>8.6.0.163</code> <code>-CUDA-11.8.0</code> <code>system</code> <code>8.9.2.26</code> <code>-CUDA-12.1.1</code> <code>system</code> <p>(quick links: (all) - a - b - c - d - e - f - g - h - i - j - l - m - n - o - p - q - r - s - t - u - v - w - x - y - z)</p>","boost":0.5},{"location":"docs/software/catalog/c/cutadapt/","title":"cutadapt","text":"<p>Cutadapt finds and removes adapter sequences, primers, poly-A tails and  other types of unwanted sequence from your high-throughput sequencing reads.</p> <p>homepage: https://opensource.scilifelab.se/projects/cutadapt/</p> version toolchain <code>4.2</code> <code>GCCcore/11.3.0</code> <p>(quick links: (all) - a - b - c - d - e - f - g - h - i - j - l - m - n - o - p - q - r - s - t - u - v - w - x - y - z)</p>","boost":0.5},{"location":"docs/software/catalog/d/","title":"List of supported software (d)","text":"<p>(quick links: (all) - a - b - c - d - e - f - g - h - i - j - l - m - n - o - p - q - r - s - t - u - v - w - x - y - z)</p> <ul> <li>dask</li> <li>DavidsonCourse</li> <li>DavidsonJupyter</li> <li>DB</li> <li>DBeaver-Enterprise</li> <li>deepTools</li> <li>dill</li> <li>double-conversion</li> <li>Doxygen</li> </ul> <p>(quick links: (all) - a - b - c - d - e - f - g - h - i - j - l - m - n - o - p - q - r - s - t - u - v - w - x - y - z)</p>","boost":0.5},{"location":"docs/software/catalog/d/DB/","title":"DB","text":"<p>Berkeley DB enables the development of custom data management  solutions, without the overhead traditionally associated with such custom  projects.</p> <p>homepage: https://www.oracle.com/technetwork/products/berkeleydb</p> version toolchain <code>18.1.40</code> <code>GCCcore/10.2.0</code> <code>18.1.40</code> <code>GCCcore/10.3.0</code> <code>18.1.40</code> <code>GCCcore/11.3.0</code> <p>(quick links: (all) - a - b - c - d - e - f - g - h - i - j - l - m - n - o - p - q - r - s - t - u - v - w - x - y - z)</p>","boost":0.5},{"location":"docs/software/catalog/d/DBeaver-Enterprise/","title":"DBeaver-Enterprise","text":"<p>DBeaver is a universal database management tool for everyone who needs to work with data in a professional way.</p> <p>homepage: http://www.dbeaver.com</p> version toolchain <code>24.3.0</code> <code>system</code> <p>(quick links: (all) - a - b - c - d - e - f - g - h - i - j - l - m - n - o - p - q - r - s - t - u - v - w - x - y - z)</p>","boost":0.5},{"location":"docs/software/catalog/d/DavidsonCourse/","title":"DavidsonCourse","text":"<p>Runtime used by server instances spawned by various JupyterHub's at Davidson College.</p> <p>homepage: https://rc.davidson.edu/jupyter</p> version toolchain <code>2024-PHY240</code> <code>GCC/11.3.0</code> <p>(quick links: (all) - a - b - c - d - e - f - g - h - i - j - l - m - n - o - p - q - r - s - t - u - v - w - x - y - z)</p>","boost":0.5},{"location":"docs/software/catalog/d/DavidsonJupyter/","title":"DavidsonJupyter","text":"<p>Runtime used by server instances spawned by various JupyterHub's at Davidson College.</p> <p>homepage: https://github.com/possiblyMikeB/davidson-jupyter</p> version versionsuffix toolchain <code>2021-common</code> <code>GCC/11.3.0</code> <code>2023-common</code> <code>GCC/11.3.0</code> <code>2024-devel</code> <code>-unstable</code> <code>GCC/11.3.0</code> <code>2024-devel</code> <code>GCC/11.3.0</code> <p>(quick links: (all) - a - b - c - d - e - f - g - h - i - j - l - m - n - o - p - q - r - s - t - u - v - w - x - y - z)</p>","boost":0.5},{"location":"docs/software/catalog/d/Doxygen/","title":"Doxygen","text":"<p>Doxygen is a documentation system for C++, C, Java, Objective-C, Python,  IDL (Corba and Microsoft flavors), Fortran, VHDL, PHP, C#, and to some  extent D.</p> <p>homepage: https://www.doxygen.org</p> version toolchain <code>1.8.20</code> <code>GCCcore/10.2.0</code> <code>1.9.4</code> <code>GCCcore/11.3.0</code> <code>1.9.7</code> <code>GCCcore/12.3.0</code> <code>1.9.8</code> <code>GCCcore/12.3.0</code> <p>(quick links: (all) - a - b - c - d - e - f - g - h - i - j - l - m - n - o - p - q - r - s - t - u - v - w - x - y - z)</p>","boost":0.5},{"location":"docs/software/catalog/d/dask/","title":"dask","text":"<p>Dask natively scales Python. Dask provides advanced parallelism for analytics, enabling performance  at scale for the tools you love.</p> <p>homepage: https://dask.org/</p> version toolchain <code>2022.10.0</code> <code>foss/2022a</code> <p>(quick links: (all) - a - b - c - d - e - f - g - h - i - j - l - m - n - o - p - q - r - s - t - u - v - w - x - y - z)</p>","boost":0.5},{"location":"docs/software/catalog/d/deepTools/","title":"deepTools","text":"<p>deepTools is a suite of python tools particularly developed for the efficient analysis of  high-throughput sequencing data, such as ChIP-seq, RNA-seq or MNase-seq.</p> <p>homepage: https://deeptools.readthedocs.io/</p> version toolchain <code>3.5.2</code> <code>foss/2022a</code> <p>(quick links: (all) - a - b - c - d - e - f - g - h - i - j - l - m - n - o - p - q - r - s - t - u - v - w - x - y - z)</p>","boost":0.5},{"location":"docs/software/catalog/d/dill/","title":"dill","text":"<p>dill extends python's pickle module for serializing and de-serializing python objects to the majority  of the built-in python types. Serialization is the process of converting an object to a byte stream, and the inverse  of which is converting a byte stream back to on python object hierarchy.</p> <p>homepage: https://pypi.org/project/dill/</p> version toolchain <code>0.3.6</code> <code>GCCcore/11.3.0</code> <p>(quick links: (all) - a - b - c - d - e - f - g - h - i - j - l - m - n - o - p - q - r - s - t - u - v - w - x - y - z)</p>","boost":0.5},{"location":"docs/software/catalog/d/double-conversion/","title":"double-conversion","text":"<p>Efficient binary-decimal and decimal-binary conversion routines for IEEE doubles.</p> <p>homepage: https://github.com/google/double-conversion</p> version toolchain <code>3.1.5</code> <code>GCCcore/10.2.0</code> <code>3.2.0</code> <code>GCCcore/11.3.0</code> <code>3.3.0</code> <code>GCCcore/12.3.0</code> <p>(quick links: (all) - a - b - c - d - e - f - g - h - i - j - l - m - n - o - p - q - r - s - t - u - v - w - x - y - z)</p>","boost":0.5},{"location":"docs/software/catalog/e/","title":"List of supported software (e)","text":"<p>(quick links: (all) - a - b - c - d - e - f - g - h - i - j - l - m - n - o - p - q - r - s - t - u - v - w - x - y - z)</p> <ul> <li>EasyBuild</li> <li>Eigen</li> <li>Emacs</li> <li>etcd</li> <li>expecttest</li> </ul> <p>(quick links: (all) - a - b - c - d - e - f - g - h - i - j - l - m - n - o - p - q - r - s - t - u - v - w - x - y - z)</p>","boost":0.5},{"location":"docs/software/catalog/e/EasyBuild/","title":"EasyBuild","text":"<p>EasyBuild is a software build and installation framework  written in Python that allows you to install software in a structured,  repeatable and robust way.</p> <p>homepage: https://easybuilders.github.io/easybuild</p> version toolchain <code>4.6.0</code> <code>system</code> <code>4.6.2</code> <code>system</code> <code>4.8.0</code> <code>system</code> <code>4.8.1</code> <code>system</code> <code>4.9.4</code> <code>system</code> <p>(quick links: (all) - a - b - c - d - e - f - g - h - i - j - l - m - n - o - p - q - r - s - t - u - v - w - x - y - z)</p>","boost":0.5},{"location":"docs/software/catalog/e/Eigen/","title":"Eigen","text":"<p>Eigen is a C++ template library for linear algebra: matrices, vectors, numerical solvers,  and related algorithms.</p> <p>homepage: https://eigen.tuxfamily.org</p> version toolchain <code>3.3.8</code> <code>GCCcore/10.2.0</code> <code>3.4.0</code> <code>GCCcore/11.3.0</code> <code>3.4.0</code> <code>GCCcore/12.3.0</code> <p>(quick links: (all) - a - b - c - d - e - f - g - h - i - j - l - m - n - o - p - q - r - s - t - u - v - w - x - y - z)</p>","boost":0.5},{"location":"docs/software/catalog/e/Emacs/","title":"Emacs","text":"<p>GNU Emacs is an extensible, customizable text editor--and more.  At its core is an interpreter for Emacs Lisp, a dialect of the Lisp programming  language with extensions to support text editing.</p> <p>homepage: https://www.gnu.org/software/emacs/</p> version toolchain <code>28.1</code> <code>GCCcore/11.3.0</code> <p>(quick links: (all) - a - b - c - d - e - f - g - h - i - j - l - m - n - o - p - q - r - s - t - u - v - w - x - y - z)</p>","boost":0.5},{"location":"docs/software/catalog/e/etcd/","title":"etcd","text":"<p>etcd is a distributed reliable key-value store for the most critical data of a distributed system, with a focus on being:  Simple: well-defined, user-facing API (gRPC) Secure: automatic TLS with optional client cert authentication Fast: benchmarked 10,000 writes/sec Reliable: properly distributed using Raft  etcd is written in Go and uses the Raft consensus algorithm to manage a highly-available replicated log.</p> <p>homepage: https://github.com/etcd-io/etcd</p> version toolchain <code>3.5.2</code> <code>system</code> <p>(quick links: (all) - a - b - c - d - e - f - g - h - i - j - l - m - n - o - p - q - r - s - t - u - v - w - x - y - z)</p>","boost":0.5},{"location":"docs/software/catalog/e/expecttest/","title":"expecttest","text":"<p>This library implements expect tests (also known as \"golden\" tests). Expect tests are a method of  writing tests where instead of hard-coding the expected output of a test, you run the test to get the output, and  the test framework automatically populates the expected output. If the output of the test changes, you can rerun  the test with the environment variable EXPECTTEST_ACCEPT=1 to automatically update the expected output.</p> <p>homepage: https://github.com/ezyang/expecttest</p> version toolchain <code>0.1.3</code> <code>GCCcore/11.3.0</code> <p>(quick links: (all) - a - b - c - d - e - f - g - h - i - j - l - m - n - o - p - q - r - s - t - u - v - w - x - y - z)</p>","boost":0.5},{"location":"docs/software/catalog/f/","title":"List of supported software (f)","text":"<p>(quick links: (all) - a - b - c - d - e - f - g - h - i - j - l - m - n - o - p - q - r - s - t - u - v - w - x - y - z)</p> <ul> <li>FastQC</li> <li>FFmpeg</li> <li>ffnvcodec</li> <li>FFTW</li> <li>FFTW.MPI</li> <li>FLAC</li> <li>flatbuffers</li> <li>FlexiBLAS</li> <li>flit</li> <li>FLTK</li> <li>fontconfig</li> <li>foss</li> <li>freeglut</li> <li>freetype</li> <li>FriBidi</li> </ul> <p>(quick links: (all) - a - b - c - d - e - f - g - h - i - j - l - m - n - o - p - q - r - s - t - u - v - w - x - y - z)</p>","boost":0.5},{"location":"docs/software/catalog/f/FFTW.MPI/","title":"FFTW.MPI","text":"<p>FFTW is a C subroutine library for computing the discrete Fourier transform (DFT) in one or more dimensions, of arbitrary input size, and of both real and complex data.</p> <p>homepage: https://www.fftw.org</p> version toolchain <code>3.3.10</code> <code>gompi/2022a</code> <code>3.3.10</code> <code>gompi/2023a</code> <p>(quick links: (all) - a - b - c - d - e - f - g - h - i - j - l - m - n - o - p - q - r - s - t - u - v - w - x - y - z)</p>","boost":0.5},{"location":"docs/software/catalog/f/FFTW/","title":"FFTW","text":"<p>FFTW is a C subroutine library for computing the discrete Fourier transform (DFT) in one or more dimensions, of arbitrary input size, and of both real and complex data.</p> <p>homepage: https://www.fftw.org</p> version toolchain <code>3.3.10</code> <code>GCC/11.3.0</code> <code>3.3.10</code> <code>GCC/12.3.0</code> <code>3.3.8</code> <code>gompi/2020b</code> <code>3.3.9</code> <code>gompi/2021a</code> <p>(quick links: (all) - a - b - c - d - e - f - g - h - i - j - l - m - n - o - p - q - r - s - t - u - v - w - x - y - z)</p>","boost":0.5},{"location":"docs/software/catalog/f/FFmpeg/","title":"FFmpeg","text":"<p>A complete, cross-platform solution to record, convert and stream audio and video.</p> <p>homepage: https://www.ffmpeg.org/</p> version toolchain <code>4.4.2</code> <code>GCCcore/11.3.0</code> <p>(quick links: (all) - a - b - c - d - e - f - g - h - i - j - l - m - n - o - p - q - r - s - t - u - v - w - x - y - z)</p>","boost":0.5},{"location":"docs/software/catalog/f/FLAC/","title":"FLAC","text":"<p>FLAC stands for Free Lossless Audio Codec, an audio format similar to MP3, but lossless, meaning that audio is compressed in FLAC without any loss in quality.</p> <p>homepage: https://xiph.org/flac/</p> version toolchain <code>1.3.3</code> <code>GCCcore/10.2.0</code> <code>1.3.4</code> <code>GCCcore/11.3.0</code> <code>1.4.2</code> <code>GCCcore/12.3.0</code> <code>1.4.3</code> <code>GCCcore/12.3.0</code> <p>(quick links: (all) - a - b - c - d - e - f - g - h - i - j - l - m - n - o - p - q - r - s - t - u - v - w - x - y - z)</p>","boost":0.5},{"location":"docs/software/catalog/f/FLTK/","title":"FLTK","text":"<p>FLTK is a cross-platform C++ GUI toolkit for UNIX/Linux (X11), Microsoft Windows,  and MacOS X. FLTK provides modern GUI functionality without the bloat and supports 3D graphics via OpenGL  and its built-in GLUT emulation.</p> <p>homepage: https://www.fltk.org</p> version toolchain <code>1.3.8</code> <code>GCCcore/11.3.0</code> <p>(quick links: (all) - a - b - c - d - e - f - g - h - i - j - l - m - n - o - p - q - r - s - t - u - v - w - x - y - z)</p>","boost":0.5},{"location":"docs/software/catalog/f/FastQC/","title":"FastQC","text":"<p>FastQC is a quality control application for high throughput sequence data. It reads in sequence data in a variety of formats and can either provide an interactive application to review the results of several different QC checks, or create an HTML based report which can be integrated into a pipeline.</p> <p>homepage: https://www.bioinformatics.babraham.ac.uk/projects/fastqc/</p> version versionsuffix toolchain <code>0.11.9</code> <code>-Java-11</code> <code>system</code> <p>(quick links: (all) - a - b - c - d - e - f - g - h - i - j - l - m - n - o - p - q - r - s - t - u - v - w - x - y - z)</p>","boost":0.5},{"location":"docs/software/catalog/f/FlexiBLAS/","title":"FlexiBLAS","text":"<p>FlexiBLAS is a wrapper library that enables the exchange of the BLAS and LAPACK implementation used by a program without recompiling or relinking it.</p> <p>homepage: https://gitlab.mpi-magdeburg.mpg.de/software/flexiblas-release</p> version toolchain <code>3.0.4</code> <code>GCC/10.3.0</code> <code>3.2.0</code> <code>GCC/11.3.0</code> <code>3.3.1</code> <code>GCC/12.3.0</code> <p>(quick links: (all) - a - b - c - d - e - f - g - h - i - j - l - m - n - o - p - q - r - s - t - u - v - w - x - y - z)</p>","boost":0.5},{"location":"docs/software/catalog/f/FriBidi/","title":"FriBidi","text":"<p>The Free Implementation of the Unicode Bidirectional Algorithm.</p> <p>homepage: https://github.com/fribidi/fribidi</p> version toolchain <code>1.0.10</code> <code>GCCcore/10.2.0</code> <code>1.0.12</code> <code>GCCcore/11.3.0</code> <code>1.0.12</code> <code>GCCcore/12.3.0</code> <code>1.0.13</code> <code>GCCcore/12.3.0</code> <p>(quick links: (all) - a - b - c - d - e - f - g - h - i - j - l - m - n - o - p - q - r - s - t - u - v - w - x - y - z)</p>","boost":0.5},{"location":"docs/software/catalog/f/ffnvcodec/","title":"ffnvcodec","text":"<p>FFmpeg nvidia headers. Adds support for nvenc and nvdec. Requires Nvidia GPU and drivers to be present (picked up dynamically).</p> <p>homepage: https://git.videolan.org/?p=ffmpeg/nv-codec-headers.git</p> version toolchain <code>11.1.5.2</code> <code>system</code> <p>(quick links: (all) - a - b - c - d - e - f - g - h - i - j - l - m - n - o - p - q - r - s - t - u - v - w - x - y - z)</p>","boost":0.5},{"location":"docs/software/catalog/f/flatbuffers/","title":"flatbuffers","text":"<p>FlatBuffers: Memory Efficient Serialization Library  Includes the Flatbuffers compiler, C/C++ bindings and Python runtime library.</p> <p>homepage: https://github.com/google/flatbuffers/</p> version toolchain <code>2.0.7</code> <code>GCCcore/11.3.0</code> <p>(quick links: (all) - a - b - c - d - e - f - g - h - i - j - l - m - n - o - p - q - r - s - t - u - v - w - x - y - z)</p>","boost":0.5},{"location":"docs/software/catalog/f/flit/","title":"flit","text":"<p>A simple packaging tool for simple packages.</p> <p>homepage: https://github.com/pypa/flit</p> version toolchain <code>3.9.0</code> <code>GCCcore/11.3.0</code> <code>3.9.0</code> <code>GCCcore/12.3.0</code> <p>(quick links: (all) - a - b - c - d - e - f - g - h - i - j - l - m - n - o - p - q - r - s - t - u - v - w - x - y - z)</p>","boost":0.5},{"location":"docs/software/catalog/f/fontconfig/","title":"fontconfig","text":"<p>Fontconfig is a library designed to provide system-wide font configuration,  customization and application access.</p> <p>homepage: https://www.freedesktop.org/wiki/Software/fontconfig/</p> version toolchain <code>2.14.0</code> <code>GCCcore/11.3.0</code> <code>2.14.2</code> <code>GCCcore/12.3.0</code> <p>(quick links: (all) - a - b - c - d - e - f - g - h - i - j - l - m - n - o - p - q - r - s - t - u - v - w - x - y - z)</p>","boost":0.5},{"location":"docs/software/catalog/f/foss/","title":"foss","text":"<p>GNU Compiler Collection (GCC) based compiler toolchain, including  OpenMPI for MPI support, OpenBLAS (BLAS and LAPACK support), FFTW and ScaLAPACK.</p> <p>homepage: https://easybuild.readthedocs.io/en/master/Common-toolchains.html#foss-toolchain</p> version toolchain <code>2020b</code> <code>system</code> <code>2021a</code> <code>system</code> <code>2022a</code> <code>system</code> <code>2023a</code> <code>system</code> <p>(quick links: (all) - a - b - c - d - e - f - g - h - i - j - l - m - n - o - p - q - r - s - t - u - v - w - x - y - z)</p>","boost":0.5},{"location":"docs/software/catalog/f/freeglut/","title":"freeglut","text":"<p>freeglut is a completely OpenSourced alternative to the OpenGL Utility Toolkit (GLUT) library.</p> <p>homepage: http://freeglut.sourceforge.net/</p> version toolchain <code>3.2.2</code> <code>GCCcore/11.3.0</code> <p>(quick links: (all) - a - b - c - d - e - f - g - h - i - j - l - m - n - o - p - q - r - s - t - u - v - w - x - y - z)</p>","boost":0.5},{"location":"docs/software/catalog/f/freetype/","title":"freetype","text":"<p>FreeType 2 is a software font engine that is designed to be small, efficient,  highly customizable, and portable while capable of producing high-quality  output (glyph images). It can be used in graphics libraries, display servers,  font conversion tools, text image generation tools, and many other products  as well.</p> <p>homepage: https://www.freetype.org</p> version toolchain <code>2.12.1</code> <code>GCCcore/11.3.0</code> <code>2.13.0</code> <code>GCCcore/12.3.0</code> <code>2.13.2</code> <code>GCCcore/12.3.0</code> <p>(quick links: (all) - a - b - c - d - e - f - g - h - i - j - l - m - n - o - p - q - r - s - t - u - v - w - x - y - z)</p>","boost":0.5},{"location":"docs/software/catalog/g/","title":"List of supported software (g)","text":"<p>(quick links: (all) - a - b - c - d - e - f - g - h - i - j - l - m - n - o - p - q - r - s - t - u - v - w - x - y - z)</p> <ul> <li>Gaussian</li> <li>GaussView</li> <li>gawk</li> <li>GCC</li> <li>GCCcore</li> <li>gcccuda</li> <li>GDAL</li> <li>Gdk-Pixbuf</li> <li>GDRCopy</li> <li>Geant4</li> <li>Geant4-data</li> <li>GEOS</li> <li>gettext</li> <li>gfbf</li> <li>Ghostscript</li> <li>giflib</li> <li>GL2PS</li> <li>GLib</li> <li>GLPK</li> <li>GMP</li> <li>gnuplot</li> <li>Go</li> <li>GObject-Introspection</li> <li>gompi</li> <li>googletest</li> <li>gperf</li> <li>gperftools</li> <li>Graphene</li> <li>GraphicsMagick</li> <li>graphite2</li> <li>GSL</li> <li>GST-plugins-bad</li> <li>GST-plugins-base</li> <li>GStreamer</li> <li>GTK2</li> <li>GTK3</li> <li>GTK4</li> <li>Gurobi</li> </ul> <p>(quick links: (all) - a - b - c - d - e - f - g - h - i - j - l - m - n - o - p - q - r - s - t - u - v - w - x - y - z)</p>","boost":0.5},{"location":"docs/software/catalog/g/GCC/","title":"GCC","text":"<p>The GNU Compiler Collection includes front ends for C, C++, Objective-C, Fortran, Java, and Ada,  as well as libraries for these languages (libstdc++, libgcj,...).</p> <p>homepage: https://gcc.gnu.org/</p> version toolchain <code>10.2.0</code> <code>system</code> <code>10.3.0</code> <code>system</code> <code>11.3.0</code> <code>system</code> <code>12.3.0</code> <code>system</code> <p>(quick links: (all) - a - b - c - d - e - f - g - h - i - j - l - m - n - o - p - q - r - s - t - u - v - w - x - y - z)</p>","boost":0.5},{"location":"docs/software/catalog/g/GCCcore/","title":"GCCcore","text":"<p>The GNU Compiler Collection includes front ends for C, C++, Objective-C, Fortran, Java, and Ada,  as well as libraries for these languages (libstdc++, libgcj,...).</p> <p>homepage: https://gcc.gnu.org/</p> version toolchain <code>10.2.0</code> <code>system</code> <code>10.3.0</code> <code>system</code> <code>11.3.0</code> <code>system</code> <code>12.3.0</code> <code>system</code> <p>(quick links: (all) - a - b - c - d - e - f - g - h - i - j - l - m - n - o - p - q - r - s - t - u - v - w - x - y - z)</p>","boost":0.5},{"location":"docs/software/catalog/g/GDAL/","title":"GDAL","text":"<p>GDAL is a translator library for raster geospatial data formats that is released under an X/MIT style  Open Source license by the Open Source Geospatial Foundation. As a library, it presents a single abstract data model  to the calling application for all supported formats. It also comes with a variety of useful commandline utilities for  data translation and processing.</p> <p>homepage: https://www.gdal.org</p> version toolchain <code>3.6.2</code> <code>foss/2022a</code> <code>3.7.1</code> <code>foss/2023a</code> <code>3.9.0</code> <code>foss/2023a</code> <p>(quick links: (all) - a - b - c - d - e - f - g - h - i - j - l - m - n - o - p - q - r - s - t - u - v - w - x - y - z)</p>","boost":0.5},{"location":"docs/software/catalog/g/GDRCopy/","title":"GDRCopy","text":"<p>A low-latency GPU memory copy library based on NVIDIA GPUDirect RDMA technology.</p> <p>homepage: https://github.com/NVIDIA/gdrcopy</p> version versionsuffix toolchain <code>2.1</code> <code>-CUDA-11.1.1</code> <code>GCCcore/10.2.0</code> <code>2.2</code> <code>GCCcore/10.3.0</code> <code>2.3</code> <code>GCCcore/11.3.0</code> <p>(quick links: (all) - a - b - c - d - e - f - g - h - i - j - l - m - n - o - p - q - r - s - t - u - v - w - x - y - z)</p>","boost":0.5},{"location":"docs/software/catalog/g/GEOS/","title":"GEOS","text":"<p>GEOS (Geometry Engine - Open Source) is a C++ port of the Java Topology Suite (JTS)</p> <p>homepage: https://trac.osgeo.org/geos</p> version toolchain <code>3.10.3</code> <code>GCC/11.3.0</code> <code>3.12.0</code> <code>GCC/12.3.0</code> <code>3.12.1</code> <code>GCC/12.3.0</code> <code>3.9.1</code> <code>GCC/10.2.0</code> <p>(quick links: (all) - a - b - c - d - e - f - g - h - i - j - l - m - n - o - p - q - r - s - t - u - v - w - x - y - z)</p>","boost":0.5},{"location":"docs/software/catalog/g/GL2PS/","title":"GL2PS","text":"<p>GL2PS: an OpenGL to PostScript printing library</p> <p>homepage: https://www.geuz.org/gl2ps/</p> version toolchain <code>1.4.2</code> <code>GCCcore/11.3.0</code> <p>(quick links: (all) - a - b - c - d - e - f - g - h - i - j - l - m - n - o - p - q - r - s - t - u - v - w - x - y - z)</p>","boost":0.5},{"location":"docs/software/catalog/g/GLPK/","title":"GLPK","text":"<p>The GLPK (GNU Linear Programming Kit) package is intended for  solving large-scale linear programming (LP),  mixed integer programming (MIP), and other related problems.  It is a set of routines written in ANSI C   and organized in the form of a callable library.</p> <p>homepage: https://www.gnu.org/software/glpk/</p> version toolchain <code>4.65</code> <code>GCCcore/10.2.0</code> <code>5.0</code> <code>GCCcore/11.3.0</code> <code>5.0</code> <code>GCCcore/12.3.0</code> <p>(quick links: (all) - a - b - c - d - e - f - g - h - i - j - l - m - n - o - p - q - r - s - t - u - v - w - x - y - z)</p>","boost":0.5},{"location":"docs/software/catalog/g/GLib/","title":"GLib","text":"<p>GLib is one of the base libraries of the GTK+ project</p> <p>homepage: https://www.gtk.org/</p> version toolchain <code>2.72.1</code> <code>GCCcore/11.3.0</code> <code>2.72.1</code> <code>GCCcore/12.3.0</code> <code>2.77.1</code> <code>GCCcore/12.3.0</code> <p>(quick links: (all) - a - b - c - d - e - f - g - h - i - j - l - m - n - o - p - q - r - s - t - u - v - w - x - y - z)</p>","boost":0.5},{"location":"docs/software/catalog/g/GMP/","title":"GMP","text":"<p>GMP is a free library for arbitrary precision arithmetic, operating on signed  integers, rational numbers, and floating point numbers.</p> <p>homepage: https://gmplib.org/</p> version toolchain <code>6.2.0</code> <code>GCCcore/10.2.0</code> <code>6.2.1</code> <code>GCCcore/10.3.0</code> <code>6.2.1</code> <code>GCCcore/11.3.0</code> <code>6.2.1</code> <code>GCCcore/12.3.0</code> <code>6.3.0</code> <code>GCCcore/12.3.0</code> <p>(quick links: (all) - a - b - c - d - e - f - g - h - i - j - l - m - n - o - p - q - r - s - t - u - v - w - x - y - z)</p>","boost":0.5},{"location":"docs/software/catalog/g/GObject-Introspection/","title":"GObject-Introspection","text":"<p>GObject introspection is a middleware layer between C libraries  (using GObject) and language bindings. The C library can be scanned at  compile time and generate a metadata file, in addition to the actual  native C library. Then at runtime, language bindings can read this  metadata and automatically provide bindings to call into the C library.</p> <p>homepage: https://gi.readthedocs.io/en/latest/</p> version toolchain <code>1.72.0</code> <code>GCCcore/11.3.0</code> <code>1.72.0</code> <code>GCCcore/12.3.0</code> <p>(quick links: (all) - a - b - c - d - e - f - g - h - i - j - l - m - n - o - p - q - r - s - t - u - v - w - x - y - z)</p>","boost":0.5},{"location":"docs/software/catalog/g/GSL/","title":"GSL","text":"<p>The GNU Scientific Library (GSL) is a numerical library for C and C++ programmers.  The library provides a wide range of mathematical routines such as random number generators, special functions  and least-squares fitting.</p> <p>homepage: https://www.gnu.org/software/gsl/</p> version toolchain <code>2.6</code> <code>GCC/10.2.0</code> <code>2.7</code> <code>GCC/11.3.0</code> <code>2.7</code> <code>GCC/12.3.0</code> <p>(quick links: (all) - a - b - c - d - e - f - g - h - i - j - l - m - n - o - p - q - r - s - t - u - v - w - x - y - z)</p>","boost":0.5},{"location":"docs/software/catalog/g/GST-plugins-bad/","title":"GST-plugins-bad","text":"<p>GStreamer is a library for constructing graphs of media-handling  components. The applications it supports range from simple  Ogg/Vorbis playback, audio/video streaming to complex audio  (mixing) and video (non-linear editing) processing.</p> <p>homepage: https://gstreamer.freedesktop.org/</p> version toolchain <code>1.20.2</code> <code>GCC/11.3.0</code> <p>(quick links: (all) - a - b - c - d - e - f - g - h - i - j - l - m - n - o - p - q - r - s - t - u - v - w - x - y - z)</p>","boost":0.5},{"location":"docs/software/catalog/g/GST-plugins-base/","title":"GST-plugins-base","text":"<p>GStreamer is a library for constructing graphs of media-handling  components. The applications it supports range from simple  Ogg/Vorbis playback, audio/video streaming to complex audio  (mixing) and video (non-linear editing) processing.</p> <p>homepage: https://gstreamer.freedesktop.org/</p> version toolchain <code>1.20.2</code> <code>GCC/11.3.0</code> <p>(quick links: (all) - a - b - c - d - e - f - g - h - i - j - l - m - n - o - p - q - r - s - t - u - v - w - x - y - z)</p>","boost":0.5},{"location":"docs/software/catalog/g/GStreamer/","title":"GStreamer","text":"<p>GStreamer is a library for constructing graphs of media-handling  components. The applications it supports range from simple  Ogg/Vorbis playback, audio/video streaming to complex audio  (mixing) and video (non-linear editing) processing.</p> <p>homepage: https://gstreamer.freedesktop.org/</p> version toolchain <code>1.20.2</code> <code>GCC/11.3.0</code> <p>(quick links: (all) - a - b - c - d - e - f - g - h - i - j - l - m - n - o - p - q - r - s - t - u - v - w - x - y - z)</p>","boost":0.5},{"location":"docs/software/catalog/g/GTK2/","title":"GTK2","text":"<p>The GTK+ 2 package contains libraries used for creating graphical user interfaces for applications.</p> <p>homepage: https://www.gtk.org</p> version toolchain <code>2.24.33</code> <code>GCCcore/11.3.0</code> <p>(quick links: (all) - a - b - c - d - e - f - g - h - i - j - l - m - n - o - p - q - r - s - t - u - v - w - x - y - z)</p>","boost":0.5},{"location":"docs/software/catalog/g/GTK3/","title":"GTK3","text":"<p>GTK+ is the primary library used to construct user interfaces in GNOME. It  provides all the user interface controls, or widgets, used in a common  graphical application. Its object-oriented API allows you to construct  user interfaces without dealing with the low-level details of drawing and  device interaction.</p> <p>homepage: https://developer.gnome.org/gtk3/stable/</p> version toolchain <code>3.24.33</code> <code>GCCcore/11.3.0</code> <code>3.24.33</code> <code>GCCcore/12.3.0</code> <p>(quick links: (all) - a - b - c - d - e - f - g - h - i - j - l - m - n - o - p - q - r - s - t - u - v - w - x - y - z)</p>","boost":0.5},{"location":"docs/software/catalog/g/GTK4/","title":"GTK4","text":"<p>GTK+ is the primary library used to construct user interfaces in GNOME. It  provides all the user interface controls, or widgets, used in a common  graphical application. Its object-oriented API allows you to construct  user interfaces without dealing with the low-level details of drawing and  device interaction.</p> <p>homepage: https://docs.gtk.org/gtk4/</p> version toolchain <code>4.7.0</code> <code>GCC/11.3.0</code> <p>(quick links: (all) - a - b - c - d - e - f - g - h - i - j - l - m - n - o - p - q - r - s - t - u - v - w - x - y - z)</p>","boost":0.5},{"location":"docs/software/catalog/g/GaussView/","title":"GaussView","text":"<p>GaussView provides state-of-the-art capabilities for build and working with Gaussian files.</p> <p>homepage: https://www.gaussian.com/</p> version toolchain <code>6.1.1</code> <code>system</code> <p>(quick links: (all) - a - b - c - d - e - f - g - h - i - j - l - m - n - o - p - q - r - s - t - u - v - w - x - y - z)</p>","boost":0.5},{"location":"docs/software/catalog/g/Gaussian/","title":"Gaussian","text":"<p>Gaussian provides state-of-the-art capabilities for electronic structure modeling. Gaussian 16 is licensed for a wide variety of computer systems. All versions of Gaussian 16 contain every scientific/modeling feature, and none imposes any artificial limitations on calculations other than your computing resources and patience.  This is the official gaussian AVX2 build.</p> <p>homepage: https://www.gaussian.com/</p> version versionsuffix toolchain <code>16.C.02</code> <code>-AVX2</code> <code>system</code> <p>(quick links: (all) - a - b - c - d - e - f - g - h - i - j - l - m - n - o - p - q - r - s - t - u - v - w - x - y - z)</p>","boost":0.5},{"location":"docs/software/catalog/g/Gdk-Pixbuf/","title":"Gdk-Pixbuf","text":"<p>The Gdk Pixbuf is a toolkit for image loading and pixel buffer manipulation.  It is used by GTK+ 2 and GTK+ 3 to load and manipulate images. In the past it  was distributed as part of GTK+ 2 but it was split off into a separate package  in preparation for the change to GTK+ 3.</p> <p>homepage: https://docs.gtk.org/gdk-pixbuf/</p> version toolchain <code>2.42.10</code> <code>GCCcore/12.3.0</code> <code>2.42.8</code> <code>GCCcore/11.3.0</code> <p>(quick links: (all) - a - b - c - d - e - f - g - h - i - j - l - m - n - o - p - q - r - s - t - u - v - w - x - y - z)</p>","boost":0.5},{"location":"docs/software/catalog/g/Geant4-data/","title":"Geant4-data","text":"<p>Datasets for Geant4.</p> <p>homepage: https://geant4.web.cern.ch/</p> version toolchain <code>11.1</code> <code>system</code> <p>(quick links: (all) - a - b - c - d - e - f - g - h - i - j - l - m - n - o - p - q - r - s - t - u - v - w - x - y - z)</p>","boost":0.5},{"location":"docs/software/catalog/g/Geant4/","title":"Geant4","text":"<p>Geant4 is a toolkit for the simulation of the passage of particles through matter.  Its areas of application include high energy, nuclear and accelerator physics,  as well as studies in medical and space science.</p> <p>homepage: https://geant4.web.cern.ch/</p> version toolchain <code>10.6.2</code> <code>GCC/11.3.0</code> <p>(quick links: (all) - a - b - c - d - e - f - g - h - i - j - l - m - n - o - p - q - r - s - t - u - v - w - x - y - z)</p>","boost":0.5},{"location":"docs/software/catalog/g/Ghostscript/","title":"Ghostscript","text":"<p>Ghostscript is a versatile processor for PostScript data with the ability to render PostScript to  different targets. It used to be part of the cups printing stack, but is no longer used for that.</p> <p>homepage: https://ghostscript.com</p> version toolchain <code>10.01.2</code> <code>GCCcore/12.3.0</code> <code>9.56.1</code> <code>GCCcore/11.3.0</code> <p>(quick links: (all) - a - b - c - d - e - f - g - h - i - j - l - m - n - o - p - q - r - s - t - u - v - w - x - y - z)</p>","boost":0.5},{"location":"docs/software/catalog/g/Go/","title":"Go","text":"<p>Go is an open source programming language that makes it easy to build  simple, reliable, and efficient software.</p> <p>homepage: https://www.golang.org</p> version toolchain <code>1.17.6</code> <code>system</code> <code>1.18.7</code> <code>system</code> <code>1.20.4</code> <code>system</code> <code>1.22.1</code> <code>system</code> <p>(quick links: (all) - a - b - c - d - e - f - g - h - i - j - l - m - n - o - p - q - r - s - t - u - v - w - x - y - z)</p>","boost":0.5},{"location":"docs/software/catalog/g/Graphene/","title":"Graphene","text":"<p>Graphene is a thin layer of types for graphic libraries</p> <p>homepage: https://ebassi.github.io/graphene/</p> version toolchain <code>1.10.8</code> <code>GCCcore/11.3.0</code> <p>(quick links: (all) - a - b - c - d - e - f - g - h - i - j - l - m - n - o - p - q - r - s - t - u - v - w - x - y - z)</p>","boost":0.5},{"location":"docs/software/catalog/g/GraphicsMagick/","title":"GraphicsMagick","text":"<p>GraphicsMagick is the swiss army knife of image processing.</p> <p>homepage: http://www.graphicsmagick.org/</p> version toolchain <code>1.3.36</code> <code>GCCcore/11.3.0</code> <p>(quick links: (all) - a - b - c - d - e - f - g - h - i - j - l - m - n - o - p - q - r - s - t - u - v - w - x - y - z)</p>","boost":0.5},{"location":"docs/software/catalog/g/Gurobi/","title":"Gurobi","text":"<p>The Gurobi Optimizer is a state-of-the-art solver for mathematical programming. The solvers in the Gurobi Optimizer were designed from the ground up to exploit modern architectures and multi-core processors, using the most advanced implementations of the latest algorithms.</p> <p>homepage: https://www.gurobi.com</p> version toolchain <code>10.0.3</code> <code>GCCcore/11.3.0</code> <code>9.1.2</code> <code>GCCcore/11.3.0</code> <p>(quick links: (all) - a - b - c - d - e - f - g - h - i - j - l - m - n - o - p - q - r - s - t - u - v - w - x - y - z)</p>","boost":0.5},{"location":"docs/software/catalog/g/gawk/","title":"gawk","text":"<p>The awk utility interprets a special-purpose programming language that makes it possible to handle simple data-reformatting jobs with just a few lines of code.</p> <p>homepage: https://www.gnu.org/software/gawk</p> version toolchain <code>5.1.1</code> <code>GCCcore/11.3.0</code> <p>(quick links: (all) - a - b - c - d - e - f - g - h - i - j - l - m - n - o - p - q - r - s - t - u - v - w - x - y - z)</p>","boost":0.5},{"location":"docs/software/catalog/g/gcccuda/","title":"gcccuda","text":"<p>GNU Compiler Collection (GCC) based compiler toolchain, along with CUDA toolkit.</p> <p>homepage: &lt;(none)&gt;</p> version toolchain <code>2020b</code> <code>system</code> <p>(quick links: (all) - a - b - c - d - e - f - g - h - i - j - l - m - n - o - p - q - r - s - t - u - v - w - x - y - z)</p>","boost":0.5},{"location":"docs/software/catalog/g/gettext/","title":"gettext","text":"<p>GNU 'gettext' is an important step for the GNU Translation Project, as it is an asset on which we may build many other steps. This package offers to programmers, translators, and even users, a well integrated set of tools and documentation</p> <p>homepage: https://www.gnu.org/software/gettext/</p> version toolchain <code>0.21</code> <code>GCCcore/10.2.0</code> <code>0.21</code> <code>GCCcore/11.3.0</code> <code>0.21.1</code> <code>GCCcore/12.3.0</code> <code>0.21</code> <code>system</code> <code>0.22</code> <code>GCCcore/12.3.0</code> <p>(quick links: (all) - a - b - c - d - e - f - g - h - i - j - l - m - n - o - p - q - r - s - t - u - v - w - x - y - z)</p>","boost":0.5},{"location":"docs/software/catalog/g/gfbf/","title":"gfbf","text":"<p>GNU Compiler Collection (GCC) based compiler toolchain, including  FlexiBLAS (BLAS and LAPACK support) and (serial) FFTW.</p> <p>homepage: &lt;(none)&gt;</p> version toolchain <code>2023a</code> <code>system</code> <p>(quick links: (all) - a - b - c - d - e - f - g - h - i - j - l - m - n - o - p - q - r - s - t - u - v - w - x - y - z)</p>","boost":0.5},{"location":"docs/software/catalog/g/giflib/","title":"giflib","text":"<p>giflib is a library for reading and writing gif images. It is API and ABI compatible with libungif which was in wide use while the LZW compression algorithm was patented.</p> <p>homepage: http://giflib.sourceforge.net/</p> version toolchain <code>5.2.1</code> <code>GCCcore/10.2.0</code> <code>5.2.1</code> <code>GCCcore/11.3.0</code> <code>5.2.1</code> <code>GCCcore/12.3.0</code> <p>(quick links: (all) - a - b - c - d - e - f - g - h - i - j - l - m - n - o - p - q - r - s - t - u - v - w - x - y - z)</p>","boost":0.5},{"location":"docs/software/catalog/g/gnuplot/","title":"gnuplot","text":"<p>Portable interactive, function plotting utility</p> <p>homepage: http://gnuplot.sourceforge.net</p> version toolchain <code>5.4.4</code> <code>GCCcore/11.3.0</code> <p>(quick links: (all) - a - b - c - d - e - f - g - h - i - j - l - m - n - o - p - q - r - s - t - u - v - w - x - y - z)</p>","boost":0.5},{"location":"docs/software/catalog/g/gompi/","title":"gompi","text":"<p>GNU Compiler Collection (GCC) based compiler toolchain,  including OpenMPI for MPI support.</p> <p>homepage: &lt;(none)&gt;</p> version toolchain <code>2020b</code> <code>system</code> <code>2021a</code> <code>system</code> <code>2022a</code> <code>system</code> <code>2023a</code> <code>system</code> <p>(quick links: (all) - a - b - c - d - e - f - g - h - i - j - l - m - n - o - p - q - r - s - t - u - v - w - x - y - z)</p>","boost":0.5},{"location":"docs/software/catalog/g/googletest/","title":"googletest","text":"<p>Google's framework for writing C++ tests on a variety of platforms</p> <p>homepage: https://github.com/google/googletest</p> version toolchain <code>1.11.0</code> <code>GCCcore/11.3.0</code> <code>1.13.0</code> <code>GCCcore/12.3.0</code> <code>1.14.0</code> <code>GCCcore/12.3.0</code> <p>(quick links: (all) - a - b - c - d - e - f - g - h - i - j - l - m - n - o - p - q - r - s - t - u - v - w - x - y - z)</p>","boost":0.5},{"location":"docs/software/catalog/g/gperf/","title":"gperf","text":"<p>GNU gperf is a perfect hash function generator. For a given list of strings,  it produces a hash function and hash table, in form of C or C++ code, for  looking up a value depending on the input string. The hash function is  perfect, which means that the hash table has no collisions, and the hash  table lookup needs a single string comparison only.</p> <p>homepage: https://www.gnu.org/software/gperf/</p> version toolchain <code>3.1</code> <code>GCCcore/10.2.0</code> <code>3.1</code> <code>GCCcore/11.3.0</code> <code>3.1</code> <code>GCCcore/12.3.0</code> <p>(quick links: (all) - a - b - c - d - e - f - g - h - i - j - l - m - n - o - p - q - r - s - t - u - v - w - x - y - z)</p>","boost":0.5},{"location":"docs/software/catalog/g/gperftools/","title":"gperftools","text":"<p>gperftools is a collection of a high-performance multi-threaded malloc() implementation, plus some pretty nifty performance analysis tools. Includes TCMalloc, heap-checker, heap-profiler and cpu-profiler.</p> <p>homepage: https://github.com/gperftools/gperftools</p> version toolchain <code>2.10</code> <code>GCCcore/11.3.0</code> <p>(quick links: (all) - a - b - c - d - e - f - g - h - i - j - l - m - n - o - p - q - r - s - t - u - v - w - x - y - z)</p>","boost":0.5},{"location":"docs/software/catalog/g/graphite2/","title":"graphite2","text":"<p>Graphite is a \"smart font\" system developed specifically to  handle the complexities of lesser-known languages of the world.</p> <p>homepage: https://scripts.sil.org/cms/scripts/page.php?site_id=projects&amp;item_id=graphite_home</p> version toolchain <code>1.3.14</code> <code>GCCcore/11.3.0</code> <code>1.3.14</code> <code>GCCcore/12.3.0</code> <p>(quick links: (all) - a - b - c - d - e - f - g - h - i - j - l - m - n - o - p - q - r - s - t - u - v - w - x - y - z)</p>","boost":0.5},{"location":"docs/software/catalog/h/","title":"List of supported software (h)","text":"<p>(quick links: (all) - a - b - c - d - e - f - g - h - i - j - l - m - n - o - p - q - r - s - t - u - v - w - x - y - z)</p> <ul> <li>h5py</li> <li>HarfBuzz</li> <li>hatchling</li> <li>HDF</li> <li>HDF5</li> <li>help2man</li> <li>Highway</li> <li>hypothesis</li> </ul> <p>(quick links: (all) - a - b - c - d - e - f - g - h - i - j - l - m - n - o - p - q - r - s - t - u - v - w - x - y - z)</p>","boost":0.5},{"location":"docs/software/catalog/h/HDF/","title":"HDF","text":"<p>HDF (also known as HDF4) is a library and multi-object file format for  storing and managing data between machines.</p> <p>homepage: https://www.hdfgroup.org/products/hdf4/</p> version toolchain <code>4.2.15</code> <code>GCCcore/10.2.0</code> <code>4.2.15</code> <code>GCCcore/11.3.0</code> <code>4.2.16-2</code> <code>GCCcore/12.3.0</code> <p>(quick links: (all) - a - b - c - d - e - f - g - h - i - j - l - m - n - o - p - q - r - s - t - u - v - w - x - y - z)</p>","boost":0.5},{"location":"docs/software/catalog/h/HDF5/","title":"HDF5","text":"<p>HDF5 is a data model, library, and file format for storing and managing data.  It supports an unlimited variety of datatypes, and is designed for flexible  and efficient I/O and for high volume and complex data.</p> <p>homepage: https://portal.hdfgroup.org/display/support</p> version toolchain <code>1.10.7</code> <code>gompi/2020b</code> <code>1.12.2</code> <code>gompi/2022a</code> <code>1.14.0</code> <code>gompi/2023a</code> <code>1.14.3</code> <code>gompi/2023a</code> <p>(quick links: (all) - a - b - c - d - e - f - g - h - i - j - l - m - n - o - p - q - r - s - t - u - v - w - x - y - z)</p>","boost":0.5},{"location":"docs/software/catalog/h/HarfBuzz/","title":"HarfBuzz","text":"<p>HarfBuzz is an OpenType text shaping engine.</p> <p>homepage: https://www.freedesktop.org/wiki/Software/HarfBuzz</p> version toolchain <code>4.2.1</code> <code>GCCcore/11.3.0</code> <code>5.3.1</code> <code>GCCcore/12.3.0</code> <code>8.2.2</code> <code>GCCcore/12.3.0</code> <p>(quick links: (all) - a - b - c - d - e - f - g - h - i - j - l - m - n - o - p - q - r - s - t - u - v - w - x - y - z)</p>","boost":0.5},{"location":"docs/software/catalog/h/Highway/","title":"Highway","text":"<p>Highway is a C++ library for SIMD (Single Instruction, Multiple Data), i.e. applying the same operation to 'lanes'.</p> <p>homepage: https://github.com/google/highway</p> version toolchain <code>1.0.3</code> <code>GCCcore/11.3.0</code> <p>(quick links: (all) - a - b - c - d - e - f - g - h - i - j - l - m - n - o - p - q - r - s - t - u - v - w - x - y - z)</p>","boost":0.5},{"location":"docs/software/catalog/h/h5py/","title":"h5py","text":"<p>HDF5 for Python (h5py) is a general-purpose Python interface to the Hierarchical Data Format library,  version 5. HDF5 is a versatile, mature scientific software library designed for the fast, flexible storage of enormous  amounts of data.</p> <p>homepage: https://www.h5py.org/</p> version toolchain <code>3.7.0</code> <code>foss/2022a</code> <p>(quick links: (all) - a - b - c - d - e - f - g - h - i - j - l - m - n - o - p - q - r - s - t - u - v - w - x - y - z)</p>","boost":0.5},{"location":"docs/software/catalog/h/hatchling/","title":"hatchling","text":"<p>Extensible, standards compliant build backend used by Hatch, a modern, extensible Python project manager.</p> <p>homepage: https://hatch.pypa.io</p> version toolchain <code>1.18.0</code> <code>GCCcore/11.3.0</code> <code>1.18.0</code> <code>GCCcore/12.3.0</code> <p>(quick links: (all) - a - b - c - d - e - f - g - h - i - j - l - m - n - o - p - q - r - s - t - u - v - w - x - y - z)</p>","boost":0.5},{"location":"docs/software/catalog/h/help2man/","title":"help2man","text":"<p>help2man produces simple manual pages from the '--help' and '--version' output of other commands.</p> <p>homepage: https://www.gnu.org/software/help2man/</p> version toolchain <code>1.47.16</code> <code>GCCcore/10.2.0</code> <code>1.47.16</code> <code>GCCcore/11.3.0</code> <p>(quick links: (all) - a - b - c - d - e - f - g - h - i - j - l - m - n - o - p - q - r - s - t - u - v - w - x - y - z)</p>","boost":0.5},{"location":"docs/software/catalog/h/hypothesis/","title":"hypothesis","text":"<p>Hypothesis is an advanced testing library for Python. It lets you write tests which are parametrized  by a source of examples, and then generates simple and comprehensible examples that make your tests fail. This lets  you find more bugs in your code with less work.</p> <p>homepage: https://github.com/HypothesisWorks/hypothesis</p> version toolchain <code>6.46.7</code> <code>GCCcore/11.3.0</code> <code>6.82.0</code> <code>GCCcore/11.3.0</code> <code>6.82.0</code> <code>GCCcore/12.3.0</code> <code>6.90.0</code> <code>GCCcore/12.3.0</code> <p>(quick links: (all) - a - b - c - d - e - f - g - h - i - j - l - m - n - o - p - q - r - s - t - u - v - w - x - y - z)</p>","boost":0.5},{"location":"docs/software/catalog/i/","title":"List of supported software (i)","text":"<p>(quick links: (all) - a - b - c - d - e - f - g - h - i - j - l - m - n - o - p - q - r - s - t - u - v - w - x - y - z)</p> <ul> <li>ICU</li> <li>iimpi</li> <li>imageio</li> <li>ImageMagick</li> <li>Imath</li> <li>imkl</li> <li>imkl-FFTW</li> <li>impi</li> <li>intel</li> <li>intel-compilers</li> <li>intltool</li> <li>Ipopt</li> <li>IPython</li> <li>IRkernel</li> <li>ISA-L</li> </ul> <p>(quick links: (all) - a - b - c - d - e - f - g - h - i - j - l - m - n - o - p - q - r - s - t - u - v - w - x - y - z)</p>","boost":0.5},{"location":"docs/software/catalog/i/ICU/","title":"ICU","text":"<p>ICU is a mature, widely used set of C/C++ and Java libraries providing Unicode and Globalization  support for software applications.</p> <p>homepage: https://icu.unicode.org</p> version toolchain <code>71.1</code> <code>GCCcore/11.3.0</code> <code>73.2</code> <code>GCCcore/12.3.0</code> <code>74.1</code> <code>GCCcore/12.3.0</code> <p>(quick links: (all) - a - b - c - d - e - f - g - h - i - j - l - m - n - o - p - q - r - s - t - u - v - w - x - y - z)</p>","boost":0.5},{"location":"docs/software/catalog/i/IPython/","title":"IPython","text":"<p>IPython provides a rich architecture for interactive computing with:  Powerful interactive shells (terminal and Qt-based).  A browser-based notebook with support for code, text, mathematical expressions, inline plots and other rich media.  Support for interactive data visualization and use of GUI toolkits.  Flexible, embeddable interpreters to load into your own projects.  Easy to use, high performance tools for parallel computing.</p> <p>homepage: https://ipython.org/index.html</p> version toolchain <code>7.18.1</code> <code>GCCcore/11.3.0</code> <code>8.14.0</code> <code>GCCcore/11.3.0</code> <code>8.5.0</code> <code>GCCcore/11.3.0</code> <p>(quick links: (all) - a - b - c - d - e - f - g - h - i - j - l - m - n - o - p - q - r - s - t - u - v - w - x - y - z)</p>","boost":0.5},{"location":"docs/software/catalog/i/IRkernel/","title":"IRkernel","text":"<p>The R kernel for the 'Jupyter' environment executes R code   which the front-end (Jupyter Notebook or other front-ends) submits to the   kernel via the network.</p> <p>homepage: https://irkernel.github.io</p> version versionsuffix toolchain <code>1.3.2</code> <code>-R-4.2.1</code> <code>foss/2022a</code> <p>(quick links: (all) - a - b - c - d - e - f - g - h - i - j - l - m - n - o - p - q - r - s - t - u - v - w - x - y - z)</p>","boost":0.5},{"location":"docs/software/catalog/i/ISA-L/","title":"ISA-L","text":"<p>Intelligent Storage Acceleration Library</p> <p>homepage: https://github.com/intel/isa-l</p> version toolchain <code>2.30.0</code> <code>GCCcore/11.3.0</code> <p>(quick links: (all) - a - b - c - d - e - f - g - h - i - j - l - m - n - o - p - q - r - s - t - u - v - w - x - y - z)</p>","boost":0.5},{"location":"docs/software/catalog/i/ImageMagick/","title":"ImageMagick","text":"<p>ImageMagick is a software suite to create, edit, compose, or convert bitmap images</p> <p>homepage: https://www.imagemagick.org/</p> version toolchain <code>7.1.0-37</code> <code>GCCcore/11.3.0</code> <code>7.1.1-15</code> <code>GCCcore/12.3.0</code> <p>(quick links: (all) - a - b - c - d - e - f - g - h - i - j - l - m - n - o - p - q - r - s - t - u - v - w - x - y - z)</p>","boost":0.5},{"location":"docs/software/catalog/i/Imath/","title":"Imath","text":"<p>Imath is a C++ and python library of 2D and 3D vector, matrix, and math operations for computer graphics</p> <p>homepage: https://imath.readthedocs.io/en/latest/</p> version toolchain <code>3.1.5</code> <code>GCCcore/11.3.0</code> <code>3.1.7</code> <code>GCCcore/12.3.0</code> <code>3.1.9</code> <code>GCCcore/12.3.0</code> <p>(quick links: (all) - a - b - c - d - e - f - g - h - i - j - l - m - n - o - p - q - r - s - t - u - v - w - x - y - z)</p>","boost":0.5},{"location":"docs/software/catalog/i/Ipopt/","title":"Ipopt","text":"<p>Ipopt (Interior Point OPTimizer, pronounced eye-pea-Opt) is a software package for  large-scale nonlinear optimization.</p> <p>homepage: https://coin-or.github.io/Ipopt</p> version toolchain <code>3.12.13</code> <code>foss/2022a</code> <p>(quick links: (all) - a - b - c - d - e - f - g - h - i - j - l - m - n - o - p - q - r - s - t - u - v - w - x - y - z)</p>","boost":0.5},{"location":"docs/software/catalog/i/iimpi/","title":"iimpi","text":"<p>Intel C/C++ and Fortran compilers, alongside Intel MPI.</p> <p>homepage: https://software.intel.com/parallel-studio-xe</p> version toolchain <code>2022a</code> <code>system</code> <p>(quick links: (all) - a - b - c - d - e - f - g - h - i - j - l - m - n - o - p - q - r - s - t - u - v - w - x - y - z)</p>","boost":0.5},{"location":"docs/software/catalog/i/imageio/","title":"imageio","text":"<p>Imageio is a Python library that provides an easy interface to read and write a wide range of  image data, including animated images, video, volumetric data, and scientific formats.</p> <p>homepage: https://imageio.github.io</p> version toolchain <code>2.22.2</code> <code>foss/2022a</code> <p>(quick links: (all) - a - b - c - d - e - f - g - h - i - j - l - m - n - o - p - q - r - s - t - u - v - w - x - y - z)</p>","boost":0.5},{"location":"docs/software/catalog/i/imkl-FFTW/","title":"imkl-FFTW","text":"<p>FFTW interfaces using Intel oneAPI Math Kernel Library</p> <p>homepage: https://software.intel.com/content/www/us/en/develop/tools/oneapi/components/onemkl.html</p> version toolchain <code>2021.4.0</code> <code>iimpi/2021b</code> <code>2022.1.0</code> <code>iimpi/2022a</code> <p>(quick links: (all) - a - b - c - d - e - f - g - h - i - j - l - m - n - o - p - q - r - s - t - u - v - w - x - y - z)</p>","boost":0.5},{"location":"docs/software/catalog/i/imkl/","title":"imkl","text":"<p>Intel Math Kernel Library is a library of highly optimized,  extensively threaded math routines for science, engineering, and financial  applications that require maximum performance. Core math functions include  BLAS, LAPACK, ScaLAPACK, Sparse Solvers, Fast Fourier Transforms, Vector Math, and more.</p> <p>homepage: https://software.intel.com/mkl</p> version toolchain <code>2020.4.304</code> <code>gompi/2020b</code> <code>2021.2.0</code> <code>iimpi/2021a</code> <code>2021.4.0</code> <code>system</code> <code>2022.1.0</code> <code>system</code> <p>(quick links: (all) - a - b - c - d - e - f - g - h - i - j - l - m - n - o - p - q - r - s - t - u - v - w - x - y - z)</p>","boost":0.5},{"location":"docs/software/catalog/i/impi/","title":"impi","text":"<p>Intel MPI Library, compatible with MPICH ABI</p> <p>homepage: https://software.intel.com/content/www/us/en/develop/tools/mpi-library.html</p> version toolchain <code>2021.2.0</code> <code>intel-compilers/2021.2.0</code> <code>2021.4.0</code> <code>intel-compilers/2021.4.0</code> <code>2021.6.0</code> <code>intel-compilers/2022.1.0</code> <p>(quick links: (all) - a - b - c - d - e - f - g - h - i - j - l - m - n - o - p - q - r - s - t - u - v - w - x - y - z)</p>","boost":0.5},{"location":"docs/software/catalog/i/intel-compilers/","title":"intel-compilers","text":"<p>Intel C, C++ &amp; Fortran compilers (classic and oneAPI)</p> <p>homepage: https://software.intel.com/content/www/us/en/develop/tools/oneapi/hpc-toolkit.html</p> version toolchain <code>2021.2.0</code> <code>system</code> <code>2021.4.0</code> <code>system</code> <code>2022.1.0</code> <code>system</code> <p>(quick links: (all) - a - b - c - d - e - f - g - h - i - j - l - m - n - o - p - q - r - s - t - u - v - w - x - y - z)</p>","boost":0.5},{"location":"docs/software/catalog/i/intel/","title":"intel","text":"<p>Compiler toolchain including Intel compilers, Intel MPI and Intel Math Kernel Library (MKL).</p> <p>homepage: https://easybuild.readthedocs.io/en/master/Common-toolchains.html#intel-toolchain</p> version toolchain <code>2021a</code> <code>system</code> <p>(quick links: (all) - a - b - c - d - e - f - g - h - i - j - l - m - n - o - p - q - r - s - t - u - v - w - x - y - z)</p>","boost":0.5},{"location":"docs/software/catalog/i/intltool/","title":"intltool","text":"<p>intltool is a set of tools to centralize translation of  many different file formats using GNU gettext-compatible PO files.</p> <p>homepage: https://freedesktop.org/wiki/Software/intltool/</p> version toolchain <code>0.51.0</code> <code>GCCcore/10.2.0</code> <p>(quick links: (all) - a - b - c - d - e - f - g - h - i - j - l - m - n - o - p - q - r - s - t - u - v - w - x - y - z)</p>","boost":0.5},{"location":"docs/software/catalog/j/","title":"List of supported software (j)","text":"<p>(quick links: (all) - a - b - c - d - e - f - g - h - i - j - l - m - n - o - p - q - r - s - t - u - v - w - x - y - z)</p> <ul> <li>JasPer</li> <li>Java</li> <li>jbigkit</li> <li>Jellyfish</li> <li>json-c</li> <li>JsonCpp</li> <li>Julia</li> <li>Jupyter-bundle</li> <li>jupyter-contrib-nbextensions</li> <li>jupyter-matlab-proxy</li> <li>jupyter-resource-usage</li> <li>jupyter-server</li> <li>jupyter-server-proxy</li> <li>JupyterHub</li> <li>JupyterLab</li> <li>jupyterlmod</li> <li>JupyterNotebook</li> </ul> <p>(quick links: (all) - a - b - c - d - e - f - g - h - i - j - l - m - n - o - p - q - r - s - t - u - v - w - x - y - z)</p>","boost":0.5},{"location":"docs/software/catalog/j/JasPer/","title":"JasPer","text":"<p>The JasPer Project is an open-source initiative to provide a free  software-based reference implementation of the codec specified in  the JPEG-2000 Part-1 standard.</p> <p>homepage: https://www.ece.uvic.ca/~frodo/jasper/</p> version toolchain <code>2.0.24</code> <code>GCCcore/10.2.0</code> <code>2.0.33</code> <code>GCCcore/11.3.0</code> <code>4.0.0</code> <code>GCCcore/11.3.0</code> <code>4.0.0</code> <code>GCCcore/12.3.0</code> <p>(quick links: (all) - a - b - c - d - e - f - g - h - i - j - l - m - n - o - p - q - r - s - t - u - v - w - x - y - z)</p>","boost":0.5},{"location":"docs/software/catalog/j/Java/","title":"Java","text":"<p>Java Platform, Standard Edition (Java SE) lets you develop and deploy  Java applications on desktops and servers.</p> <p>homepage: http://openjdk.java.net</p> version toolchain <code>11.0.2</code> <code>system</code> <code>11.0.20</code> <code>system</code> <code>11</code> <code>system</code> <code>19.0.2</code> <code>system</code> <code>19</code> <code>system</code> <p>(quick links: (all) - a - b - c - d - e - f - g - h - i - j - l - m - n - o - p - q - r - s - t - u - v - w - x - y - z)</p>","boost":0.5},{"location":"docs/software/catalog/j/Jellyfish/","title":"Jellyfish","text":"<p>Jellyfish is a tool for fast, memory-efficient counting of k-mers in DNA.</p> <p>homepage: http://www.genome.umd.edu/jellyfish.html</p> version toolchain <code>2.3.0</code> <code>GCC/11.3.0</code> <p>(quick links: (all) - a - b - c - d - e - f - g - h - i - j - l - m - n - o - p - q - r - s - t - u - v - w - x - y - z)</p>","boost":0.5},{"location":"docs/software/catalog/j/JsonCpp/","title":"JsonCpp","text":"<p>JsonCpp is a C++ library that allows manipulating JSON values,  including serialization and deserialization to and from strings. It can also preserve existing comment in  unserialization/serialization steps, making it a convenient format to store user input files.</p> <p>homepage: https://open-source-parsers.github.io/jsoncpp-docs/doxygen/index.html</p> version toolchain <code>1.9.5</code> <code>GCCcore/11.3.0</code> <p>(quick links: (all) - a - b - c - d - e - f - g - h - i - j - l - m - n - o - p - q - r - s - t - u - v - w - x - y - z)</p>","boost":0.5},{"location":"docs/software/catalog/j/Julia/","title":"Julia","text":"<p>Julia is a high-level, high-performance dynamic programming language for numerical computing</p> <p>homepage: https://julialang.org</p> version toolchain <code>1.7.0</code> <code>system</code> <code>1.7.2</code> <code>system</code> <code>1.8.5</code> <code>system</code> <code>1.9.3</code> <code>system</code> <p>(quick links: (all) - a - b - c - d - e - f - g - h - i - j - l - m - n - o - p - q - r - s - t - u - v - w - x - y - z)</p>","boost":0.5},{"location":"docs/software/catalog/j/Jupyter-bundle/","title":"Jupyter-bundle","text":"<p>This bundle collects a range of Jupyter interfaces (Lab, Notebook and nbclassic),   extensions (Jupyter Server Proxy, Jupyter Resource Monitor, Jupyter Lmod) and   the JupyterHub.</p> <p>homepage: https://jupyter.org/</p> version toolchain <code>20230823</code> <code>GCCcore/11.3.0</code> <p>(quick links: (all) - a - b - c - d - e - f - g - h - i - j - l - m - n - o - p - q - r - s - t - u - v - w - x - y - z)</p>","boost":0.5},{"location":"docs/software/catalog/j/JupyterHub/","title":"JupyterHub","text":"<p>JupyterHub is a multiuser version of the Jupyter (IPython) notebook designed  for centralized deployments in companies, university classrooms and research labs.</p> <p>homepage: https://jupyter.org</p> version toolchain <code>1.4.2</code> <code>GCCcore/11.3.0</code> <code>4.0.2</code> <code>GCCcore/11.3.0</code> <p>(quick links: (all) - a - b - c - d - e - f - g - h - i - j - l - m - n - o - p - q - r - s - t - u - v - w - x - y - z)</p>","boost":0.5},{"location":"docs/software/catalog/j/JupyterLab/","title":"JupyterLab","text":"<p>JupyterLab is the next-generation user interface for Project Jupyter offering all the familiar  building blocks of the classic Jupyter Notebook (notebook, terminal, text editor, file browser, rich outputs,  etc.) in a flexible and powerful user interface. JupyterLab will eventually replace the classic Jupyter  Notebook.</p> <p>homepage: https://jupyter.org/</p> version toolchain <code>3.2.8</code> <code>GCCcore/11.3.0</code> <code>3.5.0</code> <code>GCCcore/11.3.0</code> <code>3.5.3</code> <code>GCCcore/11.3.0</code> <code>4.0.5</code> <code>GCCcore/11.3.0</code> <p>(quick links: (all) - a - b - c - d - e - f - g - h - i - j - l - m - n - o - p - q - r - s - t - u - v - w - x - y - z)</p>","boost":0.5},{"location":"docs/software/catalog/j/JupyterNotebook/","title":"JupyterNotebook","text":"<p>The Jupyter Notebook is the original web application for creating and  sharing computational documents. It offers a simple, streamlined, document-centric experience.</p> <p>homepage: https://jupyter.org/</p> version toolchain <code>7.0.2</code> <code>GCCcore/11.3.0</code> <p>(quick links: (all) - a - b - c - d - e - f - g - h - i - j - l - m - n - o - p - q - r - s - t - u - v - w - x - y - z)</p>","boost":0.5},{"location":"docs/software/catalog/j/jbigkit/","title":"jbigkit","text":"<p>JBIG-KIT is a software implementation of the JBIG1 data  compression standard (ITU-T T.82), which was designed for bi-level image  data, such as scanned documents.</p> <p>homepage: https://www.cl.cam.ac.uk/~mgk25/jbigkit/</p> version toolchain <code>2.1</code> <code>GCCcore/10.2.0</code> <code>2.1</code> <code>GCCcore/11.3.0</code> <code>2.1</code> <code>GCCcore/12.3.0</code> <p>(quick links: (all) - a - b - c - d - e - f - g - h - i - j - l - m - n - o - p - q - r - s - t - u - v - w - x - y - z)</p>","boost":0.5},{"location":"docs/software/catalog/j/json-c/","title":"json-c","text":"<p>JSON-C implements a reference counting object model that allows you to easily construct JSON objects  in C, output them as JSON formatted strings and parse JSON formatted strings back into the C representation of JSON objects.</p> <p>homepage: https://github.com/json-c/json-c</p> version toolchain <code>0.16</code> <code>GCCcore/11.3.0</code> <code>0.16</code> <code>GCCcore/12.3.0</code> <code>0.17</code> <code>GCCcore/12.3.0</code> <p>(quick links: (all) - a - b - c - d - e - f - g - h - i - j - l - m - n - o - p - q - r - s - t - u - v - w - x - y - z)</p>","boost":0.5},{"location":"docs/software/catalog/j/jupyter-contrib-nbextensions/","title":"jupyter-contrib-nbextensions","text":"<p>A collection of various notebook extensions for Jupyter</p> <p>homepage: https://github.com/ipython-contrib/jupyter_contrib_nbextensions</p> version toolchain <code>0.7.0</code> <code>GCCcore/11.3.0</code> <p>(quick links: (all) - a - b - c - d - e - f - g - h - i - j - l - m - n - o - p - q - r - s - t - u - v - w - x - y - z)</p>","boost":0.5},{"location":"docs/software/catalog/j/jupyter-matlab-proxy/","title":"jupyter-matlab-proxy","text":"<p>MATLAB Integration for Jupyter</p> <p>homepage: https://github.com/mathworks/jupyter-matlab-proxy</p> version toolchain <code>0.5.0</code> <code>GCCcore/11.3.0</code> <p>(quick links: (all) - a - b - c - d - e - f - g - h - i - j - l - m - n - o - p - q - r - s - t - u - v - w - x - y - z)</p>","boost":0.5},{"location":"docs/software/catalog/j/jupyter-resource-usage/","title":"jupyter-resource-usage","text":"<p>Jupyter Notebook Extension for monitoring your own Resource Usage (memory and/or CPU)</p> <p>homepage: https://github.com/jupyter-server/jupyter-resource-usage</p> version toolchain <code>1.0.0</code> <code>GCCcore/11.3.0</code> <p>(quick links: (all) - a - b - c - d - e - f - g - h - i - j - l - m - n - o - p - q - r - s - t - u - v - w - x - y - z)</p>","boost":0.5},{"location":"docs/software/catalog/j/jupyter-server-proxy/","title":"jupyter-server-proxy","text":"<p>Jupyter Server Proxy lets you run arbitrary external processes (such as RStudio, Shiny Server, Syncthing, PostgreSQL, Code Server, etc) alongside your notebook server and provide authenticated web access to them     using a path like /rstudio next to others like /lab. Alongside the python package that provides the main functionality, the JupyterLab extension (@jupyterlab/server-proxy) provides buttons in the JupyterLab launcher window to get to RStudio for example.</p> <p>homepage: https://github.com/jupyterhub/jupyter-server-proxy</p> version toolchain <code>3.2.2</code> <code>GCCcore/11.3.0</code> <code>4.0.0</code> <code>GCCcore/11.3.0</code> <p>(quick links: (all) - a - b - c - d - e - f - g - h - i - j - l - m - n - o - p - q - r - s - t - u - v - w - x - y - z)</p>","boost":0.5},{"location":"docs/software/catalog/j/jupyter-server/","title":"jupyter-server","text":"<p>The Jupyter Server provides the backend (i.e. the core services, APIs, and REST endpoints) for Jupyter web applications like Jupyter notebook, JupyterLab, and Voila.</p> <p>homepage: https://jupyter.org/</p> version toolchain <code>1.21.0</code> <code>GCCcore/11.3.0</code> <code>2.7.2</code> <code>GCCcore/11.3.0</code> <p>(quick links: (all) - a - b - c - d - e - f - g - h - i - j - l - m - n - o - p - q - r - s - t - u - v - w - x - y - z)</p>","boost":0.5},{"location":"docs/software/catalog/j/jupyterlmod/","title":"jupyterlmod","text":"<p>Jupyter interactive notebook server extension that allows users to interact with environment modules before launching kernels. The extension uses Lmod's Python interface to accomplish module-related tasks like loading, unloading, saving collections, etc.</p> <p>homepage: https://github.com/cmd-ntrf/jupyter-lmod</p> version toolchain <code>4.0.3</code> <code>GCCcore/11.3.0</code> <p>(quick links: (all) - a - b - c - d - e - f - g - h - i - j - l - m - n - o - p - q - r - s - t - u - v - w - x - y - z)</p>","boost":0.5},{"location":"docs/software/catalog/l/","title":"List of supported software (l)","text":"<p>(quick links: (all) - a - b - c - d - e - f - g - h - i - j - l - m - n - o - p - q - r - s - t - u - v - w - x - y - z)</p> <ul> <li>LAME</li> <li>LAPACK</li> <li>Leptonica</li> <li>LERC</li> <li>libarchive</li> <li>libcerf</li> <li>libdeflate</li> <li>libepoxy</li> <li>libfabric</li> <li>libffi</li> <li>libgd</li> <li>libgeotiff</li> <li>libgit2</li> <li>libiconv</li> <li>libjpeg-turbo</li> <li>libogg</li> <li>libopus</li> <li>libreadline</li> <li>libsndfile</li> <li>libsodium</li> <li>LibTIFF</li> <li>libtirpc</li> <li>libtool</li> <li>libunwind</li> <li>libvorbis</li> <li>libwebp</li> <li>libyaml</li> <li>LittleCMS</li> <li>LLVM</li> <li>LMDB</li> <li>Lua</li> <li>lxml</li> </ul> <p>(quick links: (all) - a - b - c - d - e - f - g - h - i - j - l - m - n - o - p - q - r - s - t - u - v - w - x - y - z)</p>","boost":0.5},{"location":"docs/software/catalog/l/LAME/","title":"LAME","text":"<p>LAME is a high quality MPEG Audio Layer III (MP3) encoder licensed under the LGPL.</p> <p>homepage: http://lame.sourceforge.net/</p> version toolchain <code>3.100</code> <code>GCCcore/10.2.0</code> <code>3.100</code> <code>GCCcore/11.3.0</code> <code>3.100</code> <code>GCCcore/12.3.0</code> <p>(quick links: (all) - a - b - c - d - e - f - g - h - i - j - l - m - n - o - p - q - r - s - t - u - v - w - x - y - z)</p>","boost":0.5},{"location":"docs/software/catalog/l/LAPACK/","title":"LAPACK","text":"<p>LAPACK is written in Fortran90 and provides routines for solving systems of  simultaneous linear equations, least-squares solutions of linear systems of equations, eigenvalue  problems, and singular value problems.</p> <p>homepage: https://www.netlib.org/lapack/</p> version toolchain <code>3.9.1</code> <code>GCC/10.2.0</code> <p>(quick links: (all) - a - b - c - d - e - f - g - h - i - j - l - m - n - o - p - q - r - s - t - u - v - w - x - y - z)</p>","boost":0.5},{"location":"docs/software/catalog/l/LERC/","title":"LERC","text":"<p>LERC is an open-source image or raster format which supports rapid encoding and decoding for any pixel type (not just RGB or Byte). Users set the maximum compression error per pixel while encoding, so the precision of the original input image is preserved (within user defined error bounds).</p> <p>homepage: https://github.com/Esri/lerc</p> version toolchain <code>4.0.0</code> <code>GCCcore/11.3.0</code> <code>4.0.0</code> <code>GCCcore/12.3.0</code> <p>(quick links: (all) - a - b - c - d - e - f - g - h - i - j - l - m - n - o - p - q - r - s - t - u - v - w - x - y - z)</p>","boost":0.5},{"location":"docs/software/catalog/l/LLVM/","title":"LLVM","text":"<p>The LLVM Core libraries provide a modern source- and target-independent  optimizer, along with code generation support for many popular CPUs  (as well as some less common ones!) These libraries are built around a well  specified code representation known as the LLVM intermediate representation  (\"LLVM IR\"). The LLVM Core libraries are well documented, and it is  particularly easy to invent your own language (or port an existing compiler)  to use LLVM as an optimizer and code generator.</p> <p>homepage: https://llvm.org/</p> version toolchain <code>14.0.3</code> <code>GCCcore/11.3.0</code> <p>(quick links: (all) - a - b - c - d - e - f - g - h - i - j - l - m - n - o - p - q - r - s - t - u - v - w - x - y - z)</p>","boost":0.5},{"location":"docs/software/catalog/l/LMDB/","title":"LMDB","text":"<p>LMDB is a fast, memory-efficient database. With memory-mapped files, it has the read performance  of a pure in-memory database while retaining the persistence of standard disk-based databases.</p> <p>homepage: https://symas.com/lmdb</p> version toolchain <code>0.9.24</code> <code>GCCcore/10.2.0</code> <p>(quick links: (all) - a - b - c - d - e - f - g - h - i - j - l - m - n - o - p - q - r - s - t - u - v - w - x - y - z)</p>","boost":0.5},{"location":"docs/software/catalog/l/Leptonica/","title":"Leptonica","text":"<p>Leptonica is a collection of pedagogically-oriented open source software  that is broadly useful for image processing and image analysis applications.</p> <p>homepage: http://www.leptonica.org</p> version toolchain <code>1.83.0</code> <code>GCCcore/11.3.0</code> <p>(quick links: (all) - a - b - c - d - e - f - g - h - i - j - l - m - n - o - p - q - r - s - t - u - v - w - x - y - z)</p>","boost":0.5},{"location":"docs/software/catalog/l/LibTIFF/","title":"LibTIFF","text":"<p>tiff: Library and tools for reading and writing TIFF data files</p> <p>homepage: https://libtiff.maptools.org/</p> version toolchain <code>4.1.0</code> <code>GCCcore/10.2.0</code> <code>4.3.0</code> <code>GCCcore/11.3.0</code> <code>4.5.0</code> <code>GCCcore/12.3.0</code> <code>4.6.0</code> <code>GCCcore/12.3.0</code> <p>(quick links: (all) - a - b - c - d - e - f - g - h - i - j - l - m - n - o - p - q - r - s - t - u - v - w - x - y - z)</p>","boost":0.5},{"location":"docs/software/catalog/l/LittleCMS/","title":"LittleCMS","text":"<p>Little CMS intends to be an OPEN SOURCE small-footprint color management engine,  with special focus on accuracy and performance.</p> <p>homepage: https://www.littlecms.com/</p> version toolchain <code>2.11</code> <code>GCCcore/10.2.0</code> <code>2.13.1</code> <code>GCCcore/11.3.0</code> <code>2.15</code> <code>GCCcore/12.3.0</code> <p>(quick links: (all) - a - b - c - d - e - f - g - h - i - j - l - m - n - o - p - q - r - s - t - u - v - w - x - y - z)</p>","boost":0.5},{"location":"docs/software/catalog/l/Lua/","title":"Lua","text":"<p>Lua is a powerful, fast, lightweight, embeddable scripting language.  Lua combines simple procedural syntax with powerful data description constructs based  on associative arrays and extensible semantics. Lua is dynamically typed,  runs by interpreting bytecode for a register-based virtual machine,  and has automatic memory management with incremental garbage collection,  making it ideal for configuration, scripting, and rapid prototyping.</p> <p>homepage: https://www.lua.org/</p> version toolchain <code>5.4.4</code> <code>GCCcore/11.3.0</code> <p>(quick links: (all) - a - b - c - d - e - f - g - h - i - j - l - m - n - o - p - q - r - s - t - u - v - w - x - y - z)</p>","boost":0.5},{"location":"docs/software/catalog/l/libarchive/","title":"libarchive","text":"<p>Multi-format archive and compression library</p> <p>homepage: https://www.libarchive.org/</p> version toolchain <code>3.4.3</code> <code>GCCcore/10.2.0</code> <code>3.5.1</code> <code>GCCcore/10.3.0</code> <code>3.6.1</code> <code>GCCcore/10.2.0</code> <code>3.6.1</code> <code>GCCcore/11.3.0</code> <code>3.6.2</code> <code>GCCcore/12.3.0</code> <code>3.7.2</code> <code>GCCcore/12.3.0</code> <p>(quick links: (all) - a - b - c - d - e - f - g - h - i - j - l - m - n - o - p - q - r - s - t - u - v - w - x - y - z)</p>","boost":0.5},{"location":"docs/software/catalog/l/libcerf/","title":"libcerf","text":"<p>libcerf is a self-contained numeric library that provides an efficient and  accurate implementation of complex error functions, along with Dawson,  Faddeeva, and Voigt functions.</p> <p>homepage: https://jugit.fz-juelich.de/mlz/libcerf</p> version toolchain <code>2.1</code> <code>GCCcore/11.3.0</code> <p>(quick links: (all) - a - b - c - d - e - f - g - h - i - j - l - m - n - o - p - q - r - s - t - u - v - w - x - y - z)</p>","boost":0.5},{"location":"docs/software/catalog/l/libdeflate/","title":"libdeflate","text":"<p>Heavily optimized library for DEFLATE/zlib/gzip compression and decompression.</p> <p>homepage: https://github.com/ebiggers/libdeflate</p> version toolchain <code>1.10</code> <code>GCCcore/11.3.0</code> <code>1.18</code> <code>GCCcore/12.3.0</code> <code>1.19</code> <code>GCCcore/12.3.0</code> <p>(quick links: (all) - a - b - c - d - e - f - g - h - i - j - l - m - n - o - p - q - r - s - t - u - v - w - x - y - z)</p>","boost":0.5},{"location":"docs/software/catalog/l/libepoxy/","title":"libepoxy","text":"<p>Epoxy is a library for handling OpenGL function pointer management for you</p> <p>homepage: https://github.com/anholt/libepoxy</p> version toolchain <code>1.5.10</code> <code>GCCcore/11.3.0</code> <code>1.5.10</code> <code>GCCcore/12.3.0</code> <p>(quick links: (all) - a - b - c - d - e - f - g - h - i - j - l - m - n - o - p - q - r - s - t - u - v - w - x - y - z)</p>","boost":0.5},{"location":"docs/software/catalog/l/libfabric/","title":"libfabric","text":"<p>Libfabric is a core component of OFI. It is the library that defines and exports the user-space API of OFI, and is typically the only software that applications deal with directly. It works in conjunction with provider libraries, which are often integrated directly into libfabric.</p> <p>homepage: https://ofiwg.github.io/libfabric/</p> version toolchain <code>1.11.0</code> <code>GCCcore/10.2.0</code> <code>1.12.1</code> <code>GCCcore/10.3.0</code> <code>1.15.1</code> <code>GCCcore/11.3.0</code> <code>1.18.0</code> <code>GCCcore/12.3.0</code> <p>(quick links: (all) - a - b - c - d - e - f - g - h - i - j - l - m - n - o - p - q - r - s - t - u - v - w - x - y - z)</p>","boost":0.5},{"location":"docs/software/catalog/l/libffi/","title":"libffi","text":"<p>The libffi library provides a portable, high level programming interface to  various calling conventions. This allows a programmer to call any function  specified by a call interface description at run-time.</p> <p>homepage: https://sourceware.org/libffi/</p> version toolchain <code>3.3</code> <code>GCCcore/10.3.0</code> <code>3.3</code> <code>GCCcore/11.3.0</code> <code>3.4.2</code> <code>GCCcore/11.3.0</code> <code>3.4.4</code> <code>GCCcore/12.3.0</code> <p>(quick links: (all) - a - b - c - d - e - f - g - h - i - j - l - m - n - o - p - q - r - s - t - u - v - w - x - y - z)</p>","boost":0.5},{"location":"docs/software/catalog/l/libgd/","title":"libgd","text":"<p>GD is an open source code library for the dynamic creation of images by programmers.</p> <p>homepage: https://libgd.github.io/</p> version toolchain <code>2.3.0</code> <code>GCCcore/10.2.0</code> <code>2.3.3</code> <code>GCCcore/11.3.0</code> <p>(quick links: (all) - a - b - c - d - e - f - g - h - i - j - l - m - n - o - p - q - r - s - t - u - v - w - x - y - z)</p>","boost":0.5},{"location":"docs/software/catalog/l/libgeotiff/","title":"libgeotiff","text":"<p>Library for reading and writing coordinate system information from/to GeoTIFF files</p> <p>homepage: https://directory.fsf.org/wiki/Libgeotiff</p> version toolchain <code>1.7.1</code> <code>GCCcore/11.3.0</code> <code>1.7.1</code> <code>GCCcore/12.3.0</code> <code>1.7.3</code> <code>GCCcore/12.3.0</code> <p>(quick links: (all) - a - b - c - d - e - f - g - h - i - j - l - m - n - o - p - q - r - s - t - u - v - w - x - y - z)</p>","boost":0.5},{"location":"docs/software/catalog/l/libgit2/","title":"libgit2","text":"<p>libgit2 is a portable, pure C implementation of the Git core methods provided as a re-entrant linkable library with a solid API, allowing you to write native speed custom Git applications in any language which supports C bindings.</p> <p>homepage: https://libgit2.org/</p> version toolchain <code>1.4.3</code> <code>GCCcore/11.3.0</code> <code>1.7.1</code> <code>GCCcore/12.3.0</code> <code>1.7.2</code> <code>GCCcore/12.3.0</code> <p>(quick links: (all) - a - b - c - d - e - f - g - h - i - j - l - m - n - o - p - q - r - s - t - u - v - w - x - y - z)</p>","boost":0.5},{"location":"docs/software/catalog/l/libiconv/","title":"libiconv","text":"<p>Libiconv converts from one character encoding to another through Unicode conversion</p> <p>homepage: https://www.gnu.org/software/libiconv</p> version toolchain <code>1.16</code> <code>GCCcore/10.2.0</code> <code>1.17</code> <code>GCCcore/10.2.0</code> <code>1.17</code> <code>GCCcore/11.3.0</code> <code>1.17</code> <code>GCCcore/12.3.0</code> <p>(quick links: (all) - a - b - c - d - e - f - g - h - i - j - l - m - n - o - p - q - r - s - t - u - v - w - x - y - z)</p>","boost":0.5},{"location":"docs/software/catalog/l/libjpeg-turbo/","title":"libjpeg-turbo","text":"<p>libjpeg-turbo is a fork of the original IJG libjpeg which uses SIMD to  accelerate baseline JPEG compression and decompression. libjpeg is a library  that implements JPEG image encoding, decoding and transcoding.</p> <p>homepage: https://sourceforge.net/projects/libjpeg-turbo/</p> version toolchain <code>2.0.5</code> <code>GCCcore/10.2.0</code> <code>2.1.3</code> <code>GCCcore/11.3.0</code> <code>2.1.5.1</code> <code>GCCcore/12.3.0</code> <code>3.0.1</code> <code>GCCcore/12.3.0</code> <p>(quick links: (all) - a - b - c - d - e - f - g - h - i - j - l - m - n - o - p - q - r - s - t - u - v - w - x - y - z)</p>","boost":0.5},{"location":"docs/software/catalog/l/libogg/","title":"libogg","text":"<p>Ogg is a multimedia container format, and the native file and stream format for the Xiph.org multimedia codecs.</p> <p>homepage: https://xiph.org/ogg/</p> version toolchain <code>1.3.4</code> <code>GCCcore/10.2.0</code> <code>1.3.5</code> <code>GCCcore/11.3.0</code> <code>1.3.5</code> <code>GCCcore/12.3.0</code> <p>(quick links: (all) - a - b - c - d - e - f - g - h - i - j - l - m - n - o - p - q - r - s - t - u - v - w - x - y - z)</p>","boost":0.5},{"location":"docs/software/catalog/l/libopus/","title":"libopus","text":"<p>Opus is a totally open, royalty-free, highly versatile audio codec. Opus is unmatched for interactive  speech and music transmission over the Internet, but is also intended for storage and streaming applications. It is  standardized by the Internet Engineering Task Force (IETF) as RFC 6716 which incorporated technology from Skype\u2019s  SILK codec and Xiph.Org\u2019s CELT codec.</p> <p>homepage: https://www.opus-codec.org/</p> version toolchain <code>1.3.1</code> <code>GCCcore/11.3.0</code> <code>1.4</code> <code>GCCcore/12.3.0</code> <code>1.5.2</code> <code>GCCcore/12.3.0</code> <p>(quick links: (all) - a - b - c - d - e - f - g - h - i - j - l - m - n - o - p - q - r - s - t - u - v - w - x - y - z)</p>","boost":0.5},{"location":"docs/software/catalog/l/libreadline/","title":"libreadline","text":"<p>The GNU Readline library provides a set of functions for use by applications  that allow users to edit command lines as they are typed in. Both Emacs and  vi editing modes are available. The Readline library includes additional  functions to maintain a list of previously-entered command lines, to recall  and perhaps reedit those lines, and perform csh-like history expansion on  previous commands.</p> <p>homepage: https://tiswww.case.edu/php/chet/readline/rltop.html</p> version toolchain <code>8.0</code> <code>GCCcore/10.2.0</code> <code>8.1</code> <code>GCCcore/10.3.0</code> <code>8.1</code> <code>GCCcore/11.3.0</code> <code>8.1.2</code> <code>GCCcore/11.3.0</code> <code>8.2</code> <code>GCCcore/12.3.0</code> <p>(quick links: (all) - a - b - c - d - e - f - g - h - i - j - l - m - n - o - p - q - r - s - t - u - v - w - x - y - z)</p>","boost":0.5},{"location":"docs/software/catalog/l/libsndfile/","title":"libsndfile","text":"<p>Libsndfile is a C library for reading and writing files containing sampled sound  (such as MS Windows WAV and the Apple/SGI AIFF format) through one standard library interface.</p> <p>homepage: http://www.mega-nerd.com/libsndfile</p> version toolchain <code>1.0.28</code> <code>GCCcore/10.2.0</code> <code>1.1.0</code> <code>GCCcore/11.3.0</code> <code>1.2.2</code> <code>GCCcore/12.3.0</code> <p>(quick links: (all) - a - b - c - d - e - f - g - h - i - j - l - m - n - o - p - q - r - s - t - u - v - w - x - y - z)</p>","boost":0.5},{"location":"docs/software/catalog/l/libsodium/","title":"libsodium","text":"<p>Sodium is a modern, easy-to-use software library for encryption, decryption,  signatures, password hashing and more.</p> <p>homepage: https://doc.libsodium.org/</p> version toolchain <code>1.0.18</code> <code>GCCcore/10.2.0</code> <code>1.0.18</code> <code>GCCcore/11.3.0</code> <p>(quick links: (all) - a - b - c - d - e - f - g - h - i - j - l - m - n - o - p - q - r - s - t - u - v - w - x - y - z)</p>","boost":0.5},{"location":"docs/software/catalog/l/libtirpc/","title":"libtirpc","text":"<p>Libtirpc is a port of Suns Transport-Independent RPC library to Linux.</p> <p>homepage: https://sourceforge.net/projects/libtirpc/</p> version toolchain <code>1.3.2</code> <code>GCCcore/11.3.0</code> <code>1.3.3</code> <code>GCCcore/12.3.0</code> <code>1.3.4</code> <code>GCCcore/12.3.0</code> <p>(quick links: (all) - a - b - c - d - e - f - g - h - i - j - l - m - n - o - p - q - r - s - t - u - v - w - x - y - z)</p>","boost":0.5},{"location":"docs/software/catalog/l/libtool/","title":"libtool","text":"<p>GNU libtool is a generic library support script. Libtool hides the complexity  of using shared libraries behind a consistent, portable interface.</p> <p>homepage: https://www.gnu.org/software/libtool</p> version toolchain <code>2.4.6</code> <code>GCCcore/10.2.0</code> <code>2.4.6</code> <code>GCCcore/10.3.0</code> <code>2.4.6</code> <code>GCCcore/11.3.0</code> <code>2.4.7</code> <code>GCCcore/11.3.0</code> <code>2.4.7</code> <code>GCCcore/12.3.0</code> <p>(quick links: (all) - a - b - c - d - e - f - g - h - i - j - l - m - n - o - p - q - r - s - t - u - v - w - x - y - z)</p>","boost":0.5},{"location":"docs/software/catalog/l/libunwind/","title":"libunwind","text":"<p>The primary goal of libunwind is to define a portable and efficient C programming interface  (API) to determine the call-chain of a program. The API additionally provides the means to manipulate the  preserved (callee-saved) state of each call-frame and to resume execution at any point in the call-chain  (non-local goto). The API supports both local (same-process) and remote (across-process) operation.  As such, the API is useful in a number of applications</p> <p>homepage: https://www.nongnu.org/libunwind/</p> version toolchain <code>1.4.0</code> <code>GCCcore/10.2.0</code> <code>1.6.2</code> <code>GCCcore/10.2.0</code> <code>1.6.2</code> <code>GCCcore/11.3.0</code> <p>(quick links: (all) - a - b - c - d - e - f - g - h - i - j - l - m - n - o - p - q - r - s - t - u - v - w - x - y - z)</p>","boost":0.5},{"location":"docs/software/catalog/l/libvorbis/","title":"libvorbis","text":"<p>Ogg Vorbis is a fully open, non-proprietary, patent-and-royalty-free, general-purpose compressed audio format</p> <p>homepage: https://xiph.org/vorbis/</p> version toolchain <code>1.3.7</code> <code>GCCcore/10.2.0</code> <code>1.3.7</code> <code>GCCcore/11.3.0</code> <code>1.3.7</code> <code>GCCcore/12.3.0</code> <p>(quick links: (all) - a - b - c - d - e - f - g - h - i - j - l - m - n - o - p - q - r - s - t - u - v - w - x - y - z)</p>","boost":0.5},{"location":"docs/software/catalog/l/libwebp/","title":"libwebp","text":"<p>WebP is a modern image format that provides superior lossless and lossy compression for images on the web. Using WebP, webmasters and web developers can create smaller, richer images that make the web faster.</p> <p>homepage: https://developers.google.com/speed/webp/</p> version toolchain <code>1.2.4</code> <code>GCCcore/11.3.0</code> <p>(quick links: (all) - a - b - c - d - e - f - g - h - i - j - l - m - n - o - p - q - r - s - t - u - v - w - x - y - z)</p>","boost":0.5},{"location":"docs/software/catalog/l/libyaml/","title":"libyaml","text":"<p>LibYAML is a YAML parser and emitter written in C.</p> <p>homepage: https://pyyaml.org/wiki/LibYAML</p> version toolchain <code>0.2.5</code> <code>GCCcore/10.2.0</code> <code>0.2.5</code> <code>GCCcore/11.3.0</code> <p>(quick links: (all) - a - b - c - d - e - f - g - h - i - j - l - m - n - o - p - q - r - s - t - u - v - w - x - y - z)</p>","boost":0.5},{"location":"docs/software/catalog/l/lxml/","title":"lxml","text":"<p>The lxml XML toolkit is a Pythonic binding for the C libraries libxml2 and libxslt.</p> <p>homepage: https://lxml.de/</p> version toolchain <code>4.9.1</code> <code>GCCcore/11.3.0</code> <code>4.9.2</code> <code>GCCcore/11.3.0</code> <p>(quick links: (all) - a - b - c - d - e - f - g - h - i - j - l - m - n - o - p - q - r - s - t - u - v - w - x - y - z)</p>","boost":0.5},{"location":"docs/software/catalog/m/","title":"List of supported software (m)","text":"<p>(quick links: (all) - a - b - c - d - e - f - g - h - i - j - l - m - n - o - p - q - r - s - t - u - v - w - x - y - z)</p> <ul> <li>magma</li> <li>makeinfo</li> <li>Mako</li> <li>Mamba</li> <li>Mathematica</li> <li>MATLAB</li> <li>matlab-proxy</li> <li>matplotlib</li> <li>maturin</li> <li>Meson</li> <li>meson-python</li> <li>METIS</li> <li>Miniconda3</li> <li>MinIO</li> <li>MinIO-Client</li> <li>MPFR</li> <li>MUSCLE</li> </ul> <p>(quick links: (all) - a - b - c - d - e - f - g - h - i - j - l - m - n - o - p - q - r - s - t - u - v - w - x - y - z)</p>","boost":0.5},{"location":"docs/software/catalog/m/MATLAB/","title":"MATLAB","text":"<p>MATLAB is a high-level language and interactive environment  that enables you to perform computationally intensive tasks faster than with  traditional programming languages such as C, C++, and Fortran.</p> <p>homepage: https://www.mathworks.com/products/matlab</p> version toolchain <code>2023b</code> <code>system</code> <p>(quick links: (all) - a - b - c - d - e - f - g - h - i - j - l - m - n - o - p - q - r - s - t - u - v - w - x - y - z)</p>","boost":0.5},{"location":"docs/software/catalog/m/METIS/","title":"METIS","text":"<p>METIS is a set of serial programs for partitioning graphs, partitioning  finite element meshes, and producing fill reducing orderings for sparse  matrices. The algorithms implemented in METIS are based on the multilevel  recursive-bisection, multilevel k-way, and multi-constraint partitioning  schemes.</p> <p>homepage: http://glaros.dtc.umn.edu/gkhome/metis/metis/overview</p> version toolchain <code>5.1.0</code> <code>GCCcore/10.2.0</code> <code>5.1.0</code> <code>GCCcore/11.3.0</code> <p>(quick links: (all) - a - b - c - d - e - f - g - h - i - j - l - m - n - o - p - q - r - s - t - u - v - w - x - y - z)</p>","boost":0.5},{"location":"docs/software/catalog/m/MPFR/","title":"MPFR","text":"<p>The MPFR library is a C library for multiple-precision floating-point  computations with correct rounding.</p> <p>homepage: https://www.mpfr.org</p> version toolchain <code>4.1.0</code> <code>GCCcore/11.3.0</code> <code>4.2.0</code> <code>GCCcore/12.3.0</code> <code>4.2.1</code> <code>GCCcore/12.3.0</code> <p>(quick links: (all) - a - b - c - d - e - f - g - h - i - j - l - m - n - o - p - q - r - s - t - u - v - w - x - y - z)</p>","boost":0.5},{"location":"docs/software/catalog/m/MUSCLE/","title":"MUSCLE","text":"<p>MUSCLE is one of the best-performing multiple alignment programs  according to published benchmark tests, with accuracy and speed that are consistently  better than CLUSTALW. MUSCLE can align hundreds of sequences in seconds. Most users  learn everything they need to know about MUSCLE in a few minutes-only a handful of  command-line options are needed to perform common alignment tasks.</p> <p>homepage: https://drive5.com/muscle/</p> version toolchain <code>3.8.31</code> <code>GCCcore/11.3.0</code> <p>(quick links: (all) - a - b - c - d - e - f - g - h - i - j - l - m - n - o - p - q - r - s - t - u - v - w - x - y - z)</p>","boost":0.5},{"location":"docs/software/catalog/m/Mako/","title":"Mako","text":"<p>A super-fast templating language that borrows the best ideas from the existing templating languages</p> <p>homepage: https://www.makotemplates.org</p> version toolchain <code>1.2.0</code> <code>GCCcore/11.3.0</code> <p>(quick links: (all) - a - b - c - d - e - f - g - h - i - j - l - m - n - o - p - q - r - s - t - u - v - w - x - y - z)</p>","boost":0.5},{"location":"docs/software/catalog/m/Mamba/","title":"Mamba","text":"<p>Mamba is a fast, robust, and cross-platform package manager. It runs on Windows, OS X and Linux  (ARM64 and PPC64LE included) and is fully compatible with conda packages and supports most of conda's commands.</p> <p>homepage: https://mamba.readthedocs.io/</p> version toolchain <code>23.1.0-4</code> <code>system</code> <p>(quick links: (all) - a - b - c - d - e - f - g - h - i - j - l - m - n - o - p - q - r - s - t - u - v - w - x - y - z)</p>","boost":0.5},{"location":"docs/software/catalog/m/Mathematica/","title":"Mathematica","text":"<p>Mathematica is a computational software program used in many scientific, engineering, mathematical and computing fields.</p> <p>homepage: https://www.wolfram.com/mathematica</p> version toolchain <code>12.3.1</code> <code>system</code> <code>13.2.1</code> <code>system</code> <p>(quick links: (all) - a - b - c - d - e - f - g - h - i - j - l - m - n - o - p - q - r - s - t - u - v - w - x - y - z)</p>","boost":0.5},{"location":"docs/software/catalog/m/Meson/","title":"Meson","text":"<p>Meson is a cross-platform build system designed to be both as fast and as user friendly as possible.</p> <p>homepage: https://mesonbuild.com</p> version toolchain <code>0.62.1</code> <code>GCCcore/11.3.0</code> <code>1.1.1</code> <code>GCCcore/11.3.0</code> <code>1.1.1</code> <code>GCCcore/12.3.0</code> <code>1.2.3</code> <code>GCCcore/12.3.0</code> <p>(quick links: (all) - a - b - c - d - e - f - g - h - i - j - l - m - n - o - p - q - r - s - t - u - v - w - x - y - z)</p>","boost":0.5},{"location":"docs/software/catalog/m/MinIO-Client/","title":"MinIO-Client","text":"<p>MinIO Client (mc) provides a modern alternative to UNIX commands  like ls, cat, cp, mirror, diff, find etc. It supports filesystems  and Amazon S3 compatible cloud storage service (AWS Signature v2 and v4).</p> <p>homepage: https://github.com/minio/mc</p> version toolchain <code>RELEASE.2022-11-07T23-47-39Z</code> <code>system</code> <p>(quick links: (all) - a - b - c - d - e - f - g - h - i - j - l - m - n - o - p - q - r - s - t - u - v - w - x - y - z)</p>","boost":0.5},{"location":"docs/software/catalog/m/MinIO/","title":"MinIO","text":"<p>MinIO is a High Performance Object Storage released under GNU Affero General  Public License v3.0. It is API compatible with Amazon S3 cloud storage service. Use  MinIO to build high performance infrastructure for machine learning, analytics and application data workloads.</p> <p>homepage: https://github.com/minio/minio</p> version toolchain <code>RELEASE.2022-11-10T18-20-21Z</code> <code>system</code> <p>(quick links: (all) - a - b - c - d - e - f - g - h - i - j - l - m - n - o - p - q - r - s - t - u - v - w - x - y - z)</p>","boost":0.5},{"location":"docs/software/catalog/m/Miniconda3/","title":"Miniconda3","text":"<p>Miniconda is a free minimal installer for conda. It is a small,  bootstrap version of Anaconda that includes only conda, Python, the packages they  depend on, and a small number of other useful packages.</p> <p>homepage: https://docs.conda.io/en/latest/miniconda.html</p> version toolchain <code>22.11.1-1</code> <code>system</code> <code>24.3.0-0</code> <code>system</code> <code>4.12.0</code> <code>system</code> <code>4.8.3</code> <code>system</code> <p>(quick links: (all) - a - b - c - d - e - f - g - h - i - j - l - m - n - o - p - q - r - s - t - u - v - w - x - y - z)</p>","boost":0.5},{"location":"docs/software/catalog/m/magma/","title":"magma","text":"<p>The MAGMA project aims to develop a dense linear algebra library similar to  LAPACK but for heterogeneous/hybrid architectures, starting with current Multicore+GPU systems.</p> <p>homepage: https://icl.cs.utk.edu/magma/</p> version versionsuffix toolchain <code>2.6.2</code> <code>-CUDA-11.7.0</code> <code>foss/2022a</code> <code>2.6.2</code> <code>-CUDA-11.8.0</code> <code>foss/2022a</code> <p>(quick links: (all) - a - b - c - d - e - f - g - h - i - j - l - m - n - o - p - q - r - s - t - u - v - w - x - y - z)</p>","boost":0.5},{"location":"docs/software/catalog/m/makeinfo/","title":"makeinfo","text":"<p>makeinfo is part of the Texinfo project, the official documentation format of the GNU project.  This is a minimal build with very basic functionality. Should only be used for build dependencies.</p> <p>homepage: https://www.gnu.org/software/texinfo/</p> version versionsuffix toolchain <code>6.7</code> <code>-minimal</code> <code>GCCcore/11.3.0</code> <code>6.8</code> <code>GCCcore/11.3.0</code> <p>(quick links: (all) - a - b - c - d - e - f - g - h - i - j - l - m - n - o - p - q - r - s - t - u - v - w - x - y - z)</p>","boost":0.5},{"location":"docs/software/catalog/m/matlab-proxy/","title":"matlab-proxy","text":"<p>A Python package which enables you to launch MATLAB and access it from a web browser.</p> <p>homepage: https://github.com/mathworks/matlab-proxy</p> version toolchain <code>0.5.4</code> <code>GCCcore/11.3.0</code> <p>(quick links: (all) - a - b - c - d - e - f - g - h - i - j - l - m - n - o - p - q - r - s - t - u - v - w - x - y - z)</p>","boost":0.5},{"location":"docs/software/catalog/m/matplotlib/","title":"matplotlib","text":"<p>matplotlib is a python 2D plotting library which produces publication quality figures in a variety of  hardcopy formats and interactive environments across platforms. matplotlib can be used in python scripts, the python  and ipython shell, web application servers, and six graphical user interface toolkits.</p> <p>homepage: https://matplotlib.org</p> version toolchain <code>3.5.2</code> <code>foss/2022a</code> <code>3.5.2</code> <code>intel/2022a</code> <p>(quick links: (all) - a - b - c - d - e - f - g - h - i - j - l - m - n - o - p - q - r - s - t - u - v - w - x - y - z)</p>","boost":0.5},{"location":"docs/software/catalog/m/maturin/","title":"maturin","text":"<p>This project is meant as a zero configuration replacement for setuptools-rust and milksnake. It supports building wheels for python 3.5+ on windows, linux, mac and freebsd, can upload them to pypi and has basic pypy and graalpy support.</p> <p>homepage: https://github.com/pyo3/maturin</p> version toolchain <code>1.1.0</code> <code>GCCcore/11.3.0</code> <p>(quick links: (all) - a - b - c - d - e - f - g - h - i - j - l - m - n - o - p - q - r - s - t - u - v - w - x - y - z)</p>","boost":0.5},{"location":"docs/software/catalog/m/meson-python/","title":"meson-python","text":"<p>Python build backend (PEP 517) for Meson projects</p> <p>homepage: https://github.com/mesonbuild/meson-python</p> version toolchain <code>0.15.0</code> <code>GCCcore/12.3.0</code> <p>(quick links: (all) - a - b - c - d - e - f - g - h - i - j - l - m - n - o - p - q - r - s - t - u - v - w - x - y - z)</p>","boost":0.5},{"location":"docs/software/catalog/n/","title":"List of supported software (n)","text":"<p>(quick links: (all) - a - b - c - d - e - f - g - h - i - j - l - m - n - o - p - q - r - s - t - u - v - w - x - y - z)</p> <ul> <li>NASM</li> <li>nbclassic</li> <li>NCCL</li> <li>ncurses</li> <li>netCDF</li> <li>NetLogo</li> <li>networkx</li> <li>Ninja</li> <li>nlohmann_json</li> <li>NLopt</li> <li>nodejs</li> <li>NSPR</li> <li>NSS</li> <li>nsync</li> <li>NVHPC</li> </ul> <p>(quick links: (all) - a - b - c - d - e - f - g - h - i - j - l - m - n - o - p - q - r - s - t - u - v - w - x - y - z)</p>","boost":0.5},{"location":"docs/software/catalog/n/NASM/","title":"NASM","text":"<p>NASM: General-purpose x86 assembler</p> <p>homepage: https://www.nasm.us/</p> version toolchain <code>2.15.05</code> <code>GCCcore/10.2.0</code> <code>2.15.05</code> <code>GCCcore/11.3.0</code> <code>2.16.01</code> <code>GCCcore/12.3.0</code> <p>(quick links: (all) - a - b - c - d - e - f - g - h - i - j - l - m - n - o - p - q - r - s - t - u - v - w - x - y - z)</p>","boost":0.5},{"location":"docs/software/catalog/n/NCCL/","title":"NCCL","text":"<p>The NVIDIA Collective Communications Library (NCCL) implements multi-GPU and multi-node collective communication primitives that are performance optimized for NVIDIA GPUs.</p> <p>homepage: https://developer.nvidia.com/nccl</p> version versionsuffix toolchain <code>2.12.12</code> <code>-CUDA-11.7.0</code> <code>GCCcore/11.3.0</code> <code>2.12.12</code> <code>-CUDA-11.8.0</code> <code>GCCcore/11.3.0</code> <code>2.8.3</code> <code>-CUDA-11.1.1</code> <code>GCCcore/10.2.0</code> <p>(quick links: (all) - a - b - c - d - e - f - g - h - i - j - l - m - n - o - p - q - r - s - t - u - v - w - x - y - z)</p>","boost":0.5},{"location":"docs/software/catalog/n/NLopt/","title":"NLopt","text":"<p>NLopt is a free/open-source library for nonlinear optimization,  providing a common interface for a number of different free optimization routines  available online as well as original implementations of various other algorithms.</p> <p>homepage: http://ab-initio.mit.edu/wiki/index.php/NLopt</p> version toolchain <code>2.6.2</code> <code>GCCcore/10.2.0</code> <code>2.7.1</code> <code>GCCcore/11.3.0</code> <code>2.7.1</code> <code>GCCcore/12.3.0</code> <p>(quick links: (all) - a - b - c - d - e - f - g - h - i - j - l - m - n - o - p - q - r - s - t - u - v - w - x - y - z)</p>","boost":0.5},{"location":"docs/software/catalog/n/NSPR/","title":"NSPR","text":"<p>Netscape Portable Runtime (NSPR) provides a platform-neutral API for system level  and libc-like functions.</p> <p>homepage: https://developer.mozilla.org/en-US/docs/Mozilla/Projects/NSPR</p> version toolchain <code>4.29</code> <code>GCCcore/10.2.0</code> <code>4.34</code> <code>GCCcore/11.3.0</code> <code>4.35</code> <code>GCCcore/12.3.0</code> <p>(quick links: (all) - a - b - c - d - e - f - g - h - i - j - l - m - n - o - p - q - r - s - t - u - v - w - x - y - z)</p>","boost":0.5},{"location":"docs/software/catalog/n/NSS/","title":"NSS","text":"<p>Network Security Services (NSS) is a set of libraries designed to support cross-platform development  of security-enabled client and server applications.</p> <p>homepage: https://developer.mozilla.org/en-US/docs/Mozilla/Projects/NSS</p> version toolchain <code>3.57</code> <code>GCCcore/10.2.0</code> <code>3.79</code> <code>GCCcore/11.3.0</code> <code>3.89.1</code> <code>GCCcore/12.3.0</code> <p>(quick links: (all) - a - b - c - d - e - f - g - h - i - j - l - m - n - o - p - q - r - s - t - u - v - w - x - y - z)</p>","boost":0.5},{"location":"docs/software/catalog/n/NVHPC/","title":"NVHPC","text":"<p>C, C++ and Fortran compilers included with the NVIDIA HPC SDK (previously: PGI)</p> <p>homepage: https://developer.nvidia.com/hpc-sdk/</p> version versionsuffix toolchain <code>21.2</code> <code>system</code> <code>22.11</code> <code>-CUDA-11.7.0</code> <code>system</code> <code>22.11</code> <code>-CUDA-11.8.0</code> <code>system</code> <p>(quick links: (all) - a - b - c - d - e - f - g - h - i - j - l - m - n - o - p - q - r - s - t - u - v - w - x - y - z)</p>","boost":0.5},{"location":"docs/software/catalog/n/NetLogo/","title":"NetLogo","text":"<p>NetLogo is a multi-agent programmable modeling environment. It is used by tens of thousands of students, teachers and researchers worldwide. It also powers HubNet participatory simulations. It is authored by Uri Wilensky and developed at the CCL.</p> <p>homepage: https://ccl.northwestern.edu/netlogo/</p> version versionsuffix toolchain <code>6.2.0</code> <code>-64</code> <code>system</code> <code>6.3.0</code> <code>-64</code> <code>system</code> <p>(quick links: (all) - a - b - c - d - e - f - g - h - i - j - l - m - n - o - p - q - r - s - t - u - v - w - x - y - z)</p>","boost":0.5},{"location":"docs/software/catalog/n/Ninja/","title":"Ninja","text":"<p>Ninja is a small build system with a focus on speed.</p> <p>homepage: https://ninja-build.org/</p> version toolchain <code>1.10.2</code> <code>GCCcore/11.3.0</code> <code>1.11.1</code> <code>GCCcore/12.3.0</code> <p>(quick links: (all) - a - b - c - d - e - f - g - h - i - j - l - m - n - o - p - q - r - s - t - u - v - w - x - y - z)</p>","boost":0.5},{"location":"docs/software/catalog/n/nbclassic/","title":"nbclassic","text":"<p>NbClassic provides a backwards compatible Jupyter Notebook interface  that you can install side-by-side with the latest versions: That way, you can fearlessly  upgrade without worrying about your classic extensions and customizations breaking.</p> <p>homepage: https://jupyter.org/</p> version toolchain <code>1.0.0</code> <code>GCCcore/11.3.0</code> <p>(quick links: (all) - a - b - c - d - e - f - g - h - i - j - l - m - n - o - p - q - r - s - t - u - v - w - x - y - z)</p>","boost":0.5},{"location":"docs/software/catalog/n/ncurses/","title":"ncurses","text":"<p>The Ncurses (new curses) library is a free software emulation of curses in System V Release 4.0,  and more. It uses Terminfo format, supports pads and color and multiple highlights and forms characters and  function-key mapping, and has all the other SYSV-curses enhancements over BSD Curses.</p> <p>homepage: https://www.gnu.org/software/ncurses/</p> version toolchain <code>5.9</code> <code>system</code> <code>6.2</code> <code>GCCcore/10.2.0</code> <code>6.2</code> <code>GCCcore/10.3.0</code> <code>6.2</code> <code>system</code> <code>6.3</code> <code>GCCcore/10.2.0</code> <code>6.3</code> <code>GCCcore/11.3.0</code> <code>6.3</code> <code>system</code> <code>6.4</code> <code>GCCcore/12.3.0</code> <p>(quick links: (all) - a - b - c - d - e - f - g - h - i - j - l - m - n - o - p - q - r - s - t - u - v - w - x - y - z)</p>","boost":0.5},{"location":"docs/software/catalog/n/netCDF/","title":"netCDF","text":"<p>NetCDF (network Common Data Form) is a set of software libraries  and machine-independent data formats that support the creation, access, and sharing of array-oriented  scientific data.</p> <p>homepage: https://www.unidata.ucar.edu/software/netcdf/</p> version toolchain <code>4.9.0</code> <code>gompi/2022a</code> <code>4.9.2</code> <code>gompi/2023a</code> <p>(quick links: (all) - a - b - c - d - e - f - g - h - i - j - l - m - n - o - p - q - r - s - t - u - v - w - x - y - z)</p>","boost":0.5},{"location":"docs/software/catalog/n/networkx/","title":"networkx","text":"<p>NetworkX is a Python package for the creation, manipulation, and study of the structure, dynamics, and functions of complex networks.</p> <p>homepage: https://pypi.python.org/pypi/networkx</p> version toolchain <code>2.8.4</code> <code>foss/2022a</code> <code>2.8.4</code> <code>intel/2022a</code> <code>3.2.1</code> <code>foss/2022a</code> <p>(quick links: (all) - a - b - c - d - e - f - g - h - i - j - l - m - n - o - p - q - r - s - t - u - v - w - x - y - z)</p>","boost":0.5},{"location":"docs/software/catalog/n/nlohmann_json/","title":"nlohmann_json","text":"<p>JSON for Modern C++</p> <p>homepage: https://github.com/nlohmann/json</p> version toolchain <code>3.10.5</code> <code>GCCcore/11.3.0</code> <code>3.11.2</code> <code>GCCcore/12.3.0</code> <code>3.11.3</code> <code>GCCcore/12.3.0</code> <p>(quick links: (all) - a - b - c - d - e - f - g - h - i - j - l - m - n - o - p - q - r - s - t - u - v - w - x - y - z)</p>","boost":0.5},{"location":"docs/software/catalog/n/nodejs/","title":"nodejs","text":"<p>Node.js is a platform built on Chrome's JavaScript runtime  for easily building fast, scalable network applications. Node.js uses an  event-driven, non-blocking I/O model that makes it lightweight and efficient,  perfect for data-intensive real-time applications that run across distributed devices.</p> <p>homepage: https://nodejs.org</p> version toolchain <code>12.19.0</code> <code>GCCcore/11.3.0</code> <code>16.15.1</code> <code>GCCcore/11.3.0</code> <code>16.16.0</code> <code>GCCcore/11.3.0</code> <code>16.18.0</code> <code>GCCcore/11.3.0</code> <code>18.17.1</code> <code>GCCcore/11.3.0</code> <code>18.17.1</code> <code>GCCcore/12.3.0</code> <code>20.9.0</code> <code>GCCcore/11.3.0</code> <code>20.9.0</code> <code>GCCcore/12.3.0</code> <p>(quick links: (all) - a - b - c - d - e - f - g - h - i - j - l - m - n - o - p - q - r - s - t - u - v - w - x - y - z)</p>","boost":0.5},{"location":"docs/software/catalog/n/nsync/","title":"nsync","text":"<p>nsync is a C library that exports various synchronization primitives, such as mutexes</p> <p>homepage: https://github.com/google/nsync</p> version toolchain <code>1.25.0</code> <code>GCCcore/11.3.0</code> <p>(quick links: (all) - a - b - c - d - e - f - g - h - i - j - l - m - n - o - p - q - r - s - t - u - v - w - x - y - z)</p>","boost":0.5},{"location":"docs/software/catalog/o/","title":"List of supported software (o)","text":"<p>(quick links: (all) - a - b - c - d - e - f - g - h - i - j - l - m - n - o - p - q - r - s - t - u - v - w - x - y - z)</p> <ul> <li>OAuth2-Proxy</li> <li>Octave</li> <li>OpenBLAS</li> <li>OpenCV</li> <li>OpenEXR</li> <li>OpenJPEG</li> <li>OpenMPI</li> <li>OpenPGM</li> <li>OpenSSL</li> </ul> <p>(quick links: (all) - a - b - c - d - e - f - g - h - i - j - l - m - n - o - p - q - r - s - t - u - v - w - x - y - z)</p>","boost":0.5},{"location":"docs/software/catalog/o/OAuth2-Proxy/","title":"OAuth2-Proxy","text":"<p>A reverse proxy and static file server that provides authentication  using Providers (Google, GitHub, and others) to validate accounts by email, domain or group.</p> <p>homepage: https://github.com/oauth2-proxy/oauth2-proxy</p> version toolchain <code>7.2.1</code> <code>system</code> <code>7.3.0</code> <code>system</code> <code>7.6.0</code> <code>system</code> <p>(quick links: (all) - a - b - c - d - e - f - g - h - i - j - l - m - n - o - p - q - r - s - t - u - v - w - x - y - z)</p>","boost":0.5},{"location":"docs/software/catalog/o/Octave/","title":"Octave","text":"<p>GNU Octave is a high-level interpreted language, primarily intended for numerical computations.</p> <p>homepage: https://www.gnu.org/software/octave/</p> version toolchain <code>7.1.0</code> <code>foss/2022a</code> <p>(quick links: (all) - a - b - c - d - e - f - g - h - i - j - l - m - n - o - p - q - r - s - t - u - v - w - x - y - z)</p>","boost":0.5},{"location":"docs/software/catalog/o/OpenBLAS/","title":"OpenBLAS","text":"<p>OpenBLAS is an optimized BLAS library based on GotoBLAS2 1.13 BSD version.</p> <p>homepage: https://xianyi.github.com/OpenBLAS/</p> version toolchain <code>0.3.12</code> <code>GCC/10.2.0</code> <code>0.3.15</code> <code>GCC/10.3.0</code> <code>0.3.20</code> <code>GCC/11.3.0</code> <code>0.3.23</code> <code>GCC/12.3.0</code> <p>(quick links: (all) - a - b - c - d - e - f - g - h - i - j - l - m - n - o - p - q - r - s - t - u - v - w - x - y - z)</p>","boost":0.5},{"location":"docs/software/catalog/o/OpenCV/","title":"OpenCV","text":"<p>OpenCV (Open Source Computer Vision Library) is an open source computer vision  and machine learning software library. OpenCV was built to provide  a common infrastructure for computer vision applications and to accelerate  the use of machine perception in the commercial products.  Includes extra modules for OpenCV from the contrib repository.</p> <p>homepage: https://opencv.org/</p> version versionsuffix toolchain <code>4.6.0</code> <code>-CUDA-11.7.0-contrib</code> <code>foss/2022a</code> <code>4.6.0</code> <code>-CUDA-11.8.0-contrib</code> <code>foss/2022a</code> <code>4.6.0</code> <code>-contrib</code> <code>foss/2022a</code> <p>(quick links: (all) - a - b - c - d - e - f - g - h - i - j - l - m - n - o - p - q - r - s - t - u - v - w - x - y - z)</p>","boost":0.5},{"location":"docs/software/catalog/o/OpenEXR/","title":"OpenEXR","text":"<p>OpenEXR is a high dynamic-range (HDR) image file format developed by Industrial Light &amp; Magic  for use in computer imaging applications</p> <p>homepage: https://www.openexr.com/</p> version toolchain <code>3.1.5</code> <code>GCCcore/11.3.0</code> <code>3.1.7</code> <code>GCCcore/12.3.0</code> <code>3.2.0</code> <code>GCCcore/12.3.0</code> <p>(quick links: (all) - a - b - c - d - e - f - g - h - i - j - l - m - n - o - p - q - r - s - t - u - v - w - x - y - z)</p>","boost":0.5},{"location":"docs/software/catalog/o/OpenJPEG/","title":"OpenJPEG","text":"<p>OpenJPEG is an open-source JPEG 2000 codec written in  C language. It has been developed in order to promote the use of JPEG 2000,  a still-image compression standard from the Joint Photographic Experts Group  (JPEG). Since may 2015, it is officially recognized by ISO/IEC and ITU-T as  a JPEG 2000 Reference Software.</p> <p>homepage: https://www.openjpeg.org/</p> version toolchain <code>2.4.0</code> <code>GCCcore/10.2.0</code> <code>2.5.0</code> <code>GCCcore/11.3.0</code> <code>2.5.0</code> <code>GCCcore/12.3.0</code> <p>(quick links: (all) - a - b - c - d - e - f - g - h - i - j - l - m - n - o - p - q - r - s - t - u - v - w - x - y - z)</p>","boost":0.5},{"location":"docs/software/catalog/o/OpenMPI/","title":"OpenMPI","text":"<p>The Open MPI Project is an open source MPI-3 implementation.</p> <p>homepage: https://www.open-mpi.org/</p> version toolchain <code>4.0.5</code> <code>GCC/10.2.0</code> <code>4.1.1</code> <code>GCC/10.3.0</code> <code>4.1.4</code> <code>GCC/11.3.0</code> <code>4.1.5</code> <code>GCC/12.3.0</code> <p>(quick links: (all) - a - b - c - d - e - f - g - h - i - j - l - m - n - o - p - q - r - s - t - u - v - w - x - y - z)</p>","boost":0.5},{"location":"docs/software/catalog/o/OpenPGM/","title":"OpenPGM","text":"<p>OpenPGM is an open source implementation of the Pragmatic General Multicast  (PGM) specification in RFC 3208 available at www.ietf.org. PGM is a reliable  and scalable multicast protocol that enables receivers to detect loss, request  retransmission of lost data, or notify an application of unrecoverable loss.  PGM is a receiver-reliable protocol, which means the receiver is responsible  for ensuring all data is received, absolving the sender of reception  responsibility.</p> <p>homepage: https://code.google.com/p/openpgm/</p> version toolchain <code>5.2.122</code> <code>GCCcore/11.3.0</code> <p>(quick links: (all) - a - b - c - d - e - f - g - h - i - j - l - m - n - o - p - q - r - s - t - u - v - w - x - y - z)</p>","boost":0.5},{"location":"docs/software/catalog/o/OpenSSL/","title":"OpenSSL","text":"<p>The OpenSSL Project is a collaborative effort to develop a robust, commercial-grade, full-featured,  and Open Source toolchain implementing the Secure Sockets Layer (SSL v2/v3) and Transport Layer Security (TLS v1)  protocols as well as a full-strength general purpose cryptography library.</p> <p>homepage: https://www.openssl.org/</p> version toolchain <code>1.1</code> <code>system</code> <code>3</code> <code>system</code> <p>(quick links: (all) - a - b - c - d - e - f - g - h - i - j - l - m - n - o - p - q - r - s - t - u - v - w - x - y - z)</p>","boost":0.5},{"location":"docs/software/catalog/p/","title":"List of supported software (p)","text":"<p>(quick links: (all) - a - b - c - d - e - f - g - h - i - j - l - m - n - o - p - q - r - s - t - u - v - w - x - y - z)</p> <ul> <li>Pango</li> <li>patchelf</li> <li>PCRE</li> <li>PCRE2</li> <li>Perl</li> <li>pgAdmin4</li> <li>pigz</li> <li>Pillow</li> <li>Pillow-SIMD</li> <li>pixman</li> <li>pkg-config</li> <li>pkgconf</li> <li>pkgconfig</li> <li>plotly.py</li> <li>PMIx</li> <li>pocl</li> <li>poetry</li> <li>poppler</li> <li>PostgreSQL</li> <li>PROJ</li> <li>Prometheus</li> <li>Prometheus-Alertmanager</li> <li>Prometheus-BlackBoxExporter</li> <li>Prometheus-NodeExporter</li> <li>protobuf</li> <li>protobuf-python</li> <li>pyBigWig</li> <li>pybind11</li> <li>PyCairo</li> <li>PycURL</li> <li>PyGObject</li> <li>Pysam</li> <li>PySCIPOpt</li> <li>PySlurm</li> <li>pytesseract</li> <li>Python</li> <li>Python-bundle</li> <li>Python-bundle-PyPI</li> <li>python-isal</li> <li>PyTorch</li> <li>PyTorch-bundle</li> <li>PyYAML</li> <li>PyZMQ</li> </ul> <p>(quick links: (all) - a - b - c - d - e - f - g - h - i - j - l - m - n - o - p - q - r - s - t - u - v - w - x - y - z)</p>","boost":0.5},{"location":"docs/software/catalog/p/PCRE/","title":"PCRE","text":"<p>The PCRE library is a set of functions that implement regular expression  pattern matching using the same syntax and semantics as Perl 5.</p> <p>homepage: https://www.pcre.org/</p> version toolchain <code>8.44</code> <code>GCCcore/10.2.0</code> <code>8.45</code> <code>GCCcore/11.3.0</code> <code>8.45</code> <code>GCCcore/12.3.0</code> <p>(quick links: (all) - a - b - c - d - e - f - g - h - i - j - l - m - n - o - p - q - r - s - t - u - v - w - x - y - z)</p>","boost":0.5},{"location":"docs/software/catalog/p/PCRE2/","title":"PCRE2","text":"<p>The PCRE library is a set of functions that implement regular expression pattern matching using the same syntax  and semantics as Perl 5.</p> <p>homepage: https://www.pcre.org/</p> version toolchain <code>10.35</code> <code>GCCcore/10.2.0</code> <code>10.40</code> <code>GCCcore/11.3.0</code> <code>10.42</code> <code>GCCcore/12.3.0</code> <p>(quick links: (all) - a - b - c - d - e - f - g - h - i - j - l - m - n - o - p - q - r - s - t - u - v - w - x - y - z)</p>","boost":0.5},{"location":"docs/software/catalog/p/PMIx/","title":"PMIx","text":"<p>Process Management for Exascale Environments PMI Exascale (PMIx) represents an attempt to provide an extended version of the PMI standard specifically designed to support clusters up to and including exascale sizes. The overall objective of the project is not to branch the existing pseudo-standard definitions - in fact, PMIx fully supports both of the existing PMI-1 and PMI-2 APIs - but rather to (a) augment and extend those APIs to eliminate some current restrictions that impact scalability, and (b) provide a reference implementation of the PMI-server that demonstrates the desired level of scalability.</p> <p>homepage: https://pmix.org/</p> version toolchain <code>3.1.5</code> <code>GCCcore/10.2.0</code> <code>3.2.3</code> <code>GCCcore/10.3.0</code> <code>4.1.2</code> <code>GCCcore/11.3.0</code> <code>4.2.4</code> <code>GCCcore/12.3.0</code> <p>(quick links: (all) - a - b - c - d - e - f - g - h - i - j - l - m - n - o - p - q - r - s - t - u - v - w - x - y - z)</p>","boost":0.5},{"location":"docs/software/catalog/p/PROJ/","title":"PROJ","text":"<p>Program proj is a standard Unix filter function which converts geographic longitude and latitude coordinates into cartesian coordinates</p> <p>homepage: https://proj.org</p> version toolchain <code>7.2.1</code> <code>GCCcore/10.2.0</code> <code>9.0.0</code> <code>GCCcore/11.3.0</code> <code>9.2.0</code> <code>GCCcore/12.3.0</code> <code>9.3.1</code> <code>GCCcore/12.3.0</code> <p>(quick links: (all) - a - b - c - d - e - f - g - h - i - j - l - m - n - o - p - q - r - s - t - u - v - w - x - y - z)</p>","boost":0.5},{"location":"docs/software/catalog/p/Pango/","title":"Pango","text":"<p>Pango is a library for laying out and rendering of text, with an emphasis on internationalization. Pango can be used anywhere that text layout is needed, though most of the work on Pango so far has been done in the context of the GTK+ widget toolkit. Pango forms the core of text and font handling for GTK+-2.x.</p> <p>homepage: https://www.pango.org/</p> version toolchain <code>1.50.14</code> <code>GCCcore/12.3.0</code> <code>1.50.7</code> <code>GCCcore/11.3.0</code> <p>(quick links: (all) - a - b - c - d - e - f - g - h - i - j - l - m - n - o - p - q - r - s - t - u - v - w - x - y - z)</p>","boost":0.5},{"location":"docs/software/catalog/p/Perl/","title":"Perl","text":"<p>Larry Wall's Practical Extraction and Report Language  This is a minimal build without any modules. Should only be used for build dependencies.</p> <p>homepage: https://www.perl.org/</p> version versionsuffix toolchain <code>5.32.0</code> <code>-minimal</code> <code>GCCcore/10.2.0</code> <code>5.32.0</code> <code>GCCcore/10.2.0</code> <code>5.32.0</code> <code>-minimal</code> <code>GCCcore/11.3.0</code> <code>5.32.0</code> <code>GCCcore/11.3.0</code> <code>5.32.1</code> <code>GCCcore/10.3.0</code> <code>5.34.1</code> <code>GCCcore/10.2.0</code> <code>5.34.1</code> <code>-minimal</code> <code>GCCcore/11.3.0</code> <code>5.34.1</code> <code>GCCcore/11.3.0</code> <code>5.36.1</code> <code>GCCcore/12.3.0</code> <code>5.38.0</code> <code>GCCcore/12.3.0</code> <code>5.38.0</code> <code>system</code> <p>(quick links: (all) - a - b - c - d - e - f - g - h - i - j - l - m - n - o - p - q - r - s - t - u - v - w - x - y - z)</p>","boost":0.5},{"location":"docs/software/catalog/p/Pillow-SIMD/","title":"Pillow-SIMD","text":"<p>Pillow is the 'friendly PIL fork' by Alex Clark and Contributors.  PIL is the Python Imaging Library by Fredrik Lundh and Contributors.</p> <p>homepage: https://github.com/uploadcare/pillow-simd</p> version toolchain <code>9.2.0</code> <code>GCCcore/11.3.0</code> <p>(quick links: (all) - a - b - c - d - e - f - g - h - i - j - l - m - n - o - p - q - r - s - t - u - v - w - x - y - z)</p>","boost":0.5},{"location":"docs/software/catalog/p/Pillow/","title":"Pillow","text":"<p>Pillow is the 'friendly PIL fork' by Alex Clark and Contributors.  PIL is the Python Imaging Library by Fredrik Lundh and Contributors.</p> <p>homepage: https://pillow.readthedocs.org/</p> version toolchain <code>9.1.1</code> <code>GCCcore/11.3.0</code> <p>(quick links: (all) - a - b - c - d - e - f - g - h - i - j - l - m - n - o - p - q - r - s - t - u - v - w - x - y - z)</p>","boost":0.5},{"location":"docs/software/catalog/p/PostgreSQL/","title":"PostgreSQL","text":"<p>PostgreSQL is a powerful, open source object-relational database system.  It is fully ACID compliant, has full support for foreign keys,  joins, views, triggers, and stored procedures (in multiple languages).  It includes most SQL:2008 data types, including INTEGER,  NUMERIC, BOOLEAN, CHAR, VARCHAR, DATE, INTERVAL, and TIMESTAMP.  It also supports storage of binary large objects, including pictures,  sounds, or video. It has native programming interfaces for C/C++, Java,  .Net, Perl, Python, Ruby, Tcl, ODBC, among others, and exceptional documentation.</p> <p>homepage: https://www.postgresql.org/</p> version toolchain <code>14.4</code> <code>GCCcore/11.3.0</code> <code>16.1</code> <code>GCCcore/12.3.0</code> <code>16.4</code> <code>GCCcore/11.3.0</code> <p>(quick links: (all) - a - b - c - d - e - f - g - h - i - j - l - m - n - o - p - q - r - s - t - u - v - w - x - y - z)</p>","boost":0.5},{"location":"docs/software/catalog/p/Prometheus-Alertmanager/","title":"Prometheus-Alertmanager","text":"<p>The Alertmanager handles alerts sent by client applications such as the Prometheus server.  It takes care of deduplicating, grouping, and routing them to the correct receiver integrations  such as email, PagerDuty, OpsGenie, or many other mechanisms thanks to the webhook receiver.  It also takes care of silencing and inhibition of alerts.</p> <p>homepage: https://github.com/prometheus/alertmanager</p> version toolchain <code>0.24.0</code> <code>system</code> <code>0.27.0</code> <code>system</code> <p>(quick links: (all) - a - b - c - d - e - f - g - h - i - j - l - m - n - o - p - q - r - s - t - u - v - w - x - y - z)</p>","boost":0.5},{"location":"docs/software/catalog/p/Prometheus-BlackBoxExporter/","title":"Prometheus-BlackBoxExporter","text":"<p>The blackbox exporter allows blackbox probing of endpoints over HTTP, HTTPS, DNS, TCP, ICMP and gRPC.</p> <p>homepage: https://github.com/prometheus/blackbox_exporter</p> version toolchain <code>0.22.0</code> <code>system</code> <code>0.25.0</code> <code>system</code> <p>(quick links: (all) - a - b - c - d - e - f - g - h - i - j - l - m - n - o - p - q - r - s - t - u - v - w - x - y - z)</p>","boost":0.5},{"location":"docs/software/catalog/p/Prometheus-NodeExporter/","title":"Prometheus-NodeExporter","text":"<p>Prometheus exporter for hardware and OS metrics exposed by *NIX kernels, written in Go with pluggable metric collectors.</p> <p>homepage: https://github.com/prometheus/node_exporter</p> version toolchain <code>1.4.0</code> <code>system</code> <code>1.8.2</code> <code>system</code> <p>(quick links: (all) - a - b - c - d - e - f - g - h - i - j - l - m - n - o - p - q - r - s - t - u - v - w - x - y - z)</p>","boost":0.5},{"location":"docs/software/catalog/p/Prometheus/","title":"Prometheus","text":"<p>Prometheus, a Cloud Native Computing Foundation project, is a systems and service monitoring system.  It collects metrics from configured targets at given intervals, evaluates rule expressions, displays the results, and can trigger alerts when specified conditions are observed.</p> <p>homepage: https://github.com/prometheus/prometheus</p> version toolchain <code>2.39.1</code> <code>system</code> <code>2.53.3</code> <code>system</code> <p>(quick links: (all) - a - b - c - d - e - f - g - h - i - j - l - m - n - o - p - q - r - s - t - u - v - w - x - y - z)</p>","boost":0.5},{"location":"docs/software/catalog/p/PyCairo/","title":"PyCairo","text":"<p>Python bindings for the cairo library</p> <p>homepage: https://pycairo.readthedocs.io/</p> version toolchain <code>1.25.0</code> <code>GCCcore/11.3.0</code> <p>(quick links: (all) - a - b - c - d - e - f - g - h - i - j - l - m - n - o - p - q - r - s - t - u - v - w - x - y - z)</p>","boost":0.5},{"location":"docs/software/catalog/p/PyGObject/","title":"PyGObject","text":"<p>PyGObject is a Python package which provides bindings for GObject based libraries such as GTK, GStreamer, WebKitGTK, GLib, GIO and many more.</p> <p>homepage: https://pygobject.readthedocs.io/</p> version toolchain <code>3.42.1</code> <code>GCCcore/11.3.0</code> <p>(quick links: (all) - a - b - c - d - e - f - g - h - i - j - l - m - n - o - p - q - r - s - t - u - v - w - x - y - z)</p>","boost":0.5},{"location":"docs/software/catalog/p/PySCIPOpt/","title":"PySCIPOpt","text":"<p>This project provides an interface from Python to the SCIP Optimization Suite (SCIP-Suite).</p> <p>homepage: https://github.com/scipopt/PySCIPOpt</p> version toolchain <code>4.3.0</code> <code>GCC/11.3.0</code> <p>(quick links: (all) - a - b - c - d - e - f - g - h - i - j - l - m - n - o - p - q - r - s - t - u - v - w - x - y - z)</p>","boost":0.5},{"location":"docs/software/catalog/p/PySlurm/","title":"PySlurm","text":"<p>The <code>pyslurm</code> package is a wrapper around the Slurm C-API</p> <p>homepage: https://github.com/PySlurm/pyslurm</p> version toolchain <code>22.5.3</code> <code>GCCcore/11.3.0</code> <p>(quick links: (all) - a - b - c - d - e - f - g - h - i - j - l - m - n - o - p - q - r - s - t - u - v - w - x - y - z)</p>","boost":0.5},{"location":"docs/software/catalog/p/PyTorch-bundle/","title":"PyTorch-bundle","text":"<p>PyTorch with compatible versions of official Torch extensions.</p> <p>homepage: https://pytorch.org/</p> version versionsuffix toolchain <code>1.12.1</code> <code>-CUDA-11.7.0</code> <code>foss/2022a</code> <code>1.12.1</code> <code>-CUDA-11.8.0</code> <code>foss/2022a</code> <p>(quick links: (all) - a - b - c - d - e - f - g - h - i - j - l - m - n - o - p - q - r - s - t - u - v - w - x - y - z)</p>","boost":0.5},{"location":"docs/software/catalog/p/PyTorch/","title":"PyTorch","text":"<p>Tensors and Dynamic neural networks in Python with strong GPU acceleration. PyTorch is a deep learning framework that puts Python first.</p> <p>homepage: https://pytorch.org/</p> version versionsuffix toolchain <code>1.12.1</code> <code>-CUDA-11.7.0</code> <code>foss/2022a</code> <code>1.12.1</code> <code>-CUDA-11.8.0</code> <code>foss/2022a</code> <code>1.12.1</code> <code>foss/2022a</code> <p>(quick links: (all) - a - b - c - d - e - f - g - h - i - j - l - m - n - o - p - q - r - s - t - u - v - w - x - y - z)</p>","boost":0.5},{"location":"docs/software/catalog/p/PyYAML/","title":"PyYAML","text":"<p>PyYAML is a YAML parser and emitter for the Python programming language.</p> <p>homepage: https://github.com/yaml/pyyaml</p> version toolchain <code>6.0</code> <code>GCCcore/11.3.0</code> <p>(quick links: (all) - a - b - c - d - e - f - g - h - i - j - l - m - n - o - p - q - r - s - t - u - v - w - x - y - z)</p>","boost":0.5},{"location":"docs/software/catalog/p/PyZMQ/","title":"PyZMQ","text":"<p>Python bindings for ZeroMQ</p> <p>homepage: https://www.zeromq.org/bindings:python</p> version toolchain <code>25.1.1</code> <code>GCCcore/11.3.0</code> <p>(quick links: (all) - a - b - c - d - e - f - g - h - i - j - l - m - n - o - p - q - r - s - t - u - v - w - x - y - z)</p>","boost":0.5},{"location":"docs/software/catalog/p/PycURL/","title":"PycURL","text":"<p>PycURL is a Python interface to libcurl. PycURL can be used to fetch objects identified by a URL  from a Python program, similar to the urllib Python module. PycURL is mature, very fast, and supports a lot of  features.</p> <p>homepage: http://pycurl.io/</p> version toolchain <code>7.45.2</code> <code>GCCcore/11.3.0</code> <p>(quick links: (all) - a - b - c - d - e - f - g - h - i - j - l - m - n - o - p - q - r - s - t - u - v - w - x - y - z)</p>","boost":0.5},{"location":"docs/software/catalog/p/Pysam/","title":"Pysam","text":"<p>Pysam is a python module for reading and manipulating Samfiles.  It's a lightweight wrapper of the samtools C-API. Pysam also includes an interface for tabix.</p> <p>homepage: https://github.com/pysam-developers/pysam</p> version toolchain <code>0.19.1</code> <code>GCC/11.3.0</code> <p>(quick links: (all) - a - b - c - d - e - f - g - h - i - j - l - m - n - o - p - q - r - s - t - u - v - w - x - y - z)</p>","boost":0.5},{"location":"docs/software/catalog/p/Python-bundle-PyPI/","title":"Python-bundle-PyPI","text":"<p>Bundle of Python packages from PyPI</p> <p>homepage: https://python.org/</p> version toolchain <code>2023.06</code> <code>GCCcore/11.3.0</code> <code>2023.06</code> <code>GCCcore/12.3.0</code> <code>2023.10</code> <code>GCCcore/12.3.0</code> <p>(quick links: (all) - a - b - c - d - e - f - g - h - i - j - l - m - n - o - p - q - r - s - t - u - v - w - x - y - z)</p>","boost":0.5},{"location":"docs/software/catalog/p/Python-bundle/","title":"Python-bundle","text":"<p>Python distribution with a number of widely used  extensions incl. NumPy, SciPy, Matplotlib, JupyterLab, MPI4PY, ...</p> <p>homepage: https://easybuild.io/</p> version toolchain <code>3.10.4</code> <code>foss/2022a</code> <p>(quick links: (all) - a - b - c - d - e - f - g - h - i - j - l - m - n - o - p - q - r - s - t - u - v - w - x - y - z)</p>","boost":0.5},{"location":"docs/software/catalog/p/Python/","title":"Python","text":"<p>Python is a programming language that lets you work more quickly and integrate your systems  more effectively.</p> <p>homepage: https://python.org/</p> version versionsuffix toolchain <code>2.7.18</code> <code>GCCcore/10.2.0</code> <code>2.7.18</code> <code>-bare</code> <code>GCCcore/11.3.0</code> <code>2.7.18</code> <code>GCCcore/11.3.0</code> <code>3.10.4</code> <code>-bare</code> <code>GCCcore/11.3.0</code> <code>3.10.4</code> <code>GCCcore/11.3.0</code> <code>3.11.3</code> <code>-bare</code> <code>GCCcore/10.2.0</code> <code>3.11.3</code> <code>GCCcore/10.2.0</code> <code>3.11.3</code> <code>-bare</code> <code>GCCcore/11.3.0</code> <code>3.11.3</code> <code>GCCcore/11.3.0</code> <code>3.11.3</code> <code>GCCcore/12.3.0</code> <code>3.8.6</code> <code>-bare</code> <code>GCCcore/10.2.0</code> <code>3.8.6</code> <code>GCCcore/10.2.0</code> <code>3.8.6</code> <code>-bare</code> <code>GCCcore/11.3.0</code> <code>3.8.6</code> <code>GCCcore/11.3.0</code> <code>3.9.5</code> <code>-bare</code> <code>GCCcore/10.3.0</code> <code>3.9.5</code> <code>GCCcore/10.3.0</code> <p>(quick links: (all) - a - b - c - d - e - f - g - h - i - j - l - m - n - o - p - q - r - s - t - u - v - w - x - y - z)</p>","boost":0.5},{"location":"docs/software/catalog/p/patchelf/","title":"patchelf","text":"<p>PatchELF is a small utility to modify the dynamic linker and RPATH of ELF executables.</p> <p>homepage: https://github.com/NixOS/patchelf</p> version toolchain <code>0.18.0</code> <code>GCCcore/11.3.0</code> <code>0.18.0</code> <code>GCCcore/12.3.0</code> <p>(quick links: (all) - a - b - c - d - e - f - g - h - i - j - l - m - n - o - p - q - r - s - t - u - v - w - x - y - z)</p>","boost":0.5},{"location":"docs/software/catalog/p/pgAdmin4/","title":"pgAdmin4","text":"<p>pgAdmin is the most popular and feature rich Open Source administration and development platform for PostgreSQL, the most advanced Open Source database in the world.</p> <p>homepage: https://pgadmin.org</p> version toolchain <code>8.10</code> <code>GCC/11.3.0</code> <p>(quick links: (all) - a - b - c - d - e - f - g - h - i - j - l - m - n - o - p - q - r - s - t - u - v - w - x - y - z)</p>","boost":0.5},{"location":"docs/software/catalog/p/pigz/","title":"pigz","text":"<p>pigz, which stands for parallel implementation of gzip, is a fully  functional replacement for gzip that exploits multiple processors and multiple  cores to the hilt when compressing data. pigz was written by Mark Adler, and  uses the zlib and pthread libraries.</p> <p>homepage: https://zlib.net/pigz/</p> version toolchain <code>2.7</code> <code>GCCcore/11.3.0</code> <p>(quick links: (all) - a - b - c - d - e - f - g - h - i - j - l - m - n - o - p - q - r - s - t - u - v - w - x - y - z)</p>","boost":0.5},{"location":"docs/software/catalog/p/pixman/","title":"pixman","text":"<p>Pixman is a low-level software library for pixel manipulation, providing  features such as image compositing and trapezoid rasterization. Important  users of pixman are the cairo graphics library and the X server.</p> <p>homepage: http://www.pixman.org/</p> version toolchain <code>0.40.0</code> <code>GCCcore/10.2.0</code> <code>0.40.0</code> <code>GCCcore/11.3.0</code> <code>0.42.2</code> <code>GCCcore/12.3.0</code> <p>(quick links: (all) - a - b - c - d - e - f - g - h - i - j - l - m - n - o - p - q - r - s - t - u - v - w - x - y - z)</p>","boost":0.5},{"location":"docs/software/catalog/p/pkg-config/","title":"pkg-config","text":"<p>pkg-config is a helper tool used when compiling applications and libraries.  It helps you insert the correct compiler options on the command line so an  application can use gcc -o test test.c <code>pkg-config --libs --cflags glib-2.0</code>  for instance, rather than hard-coding values on where to find glib (or other  libraries).</p> <p>homepage: https://www.freedesktop.org/wiki/Software/pkg-config/</p> version toolchain <code>0.29.2</code> <code>GCCcore/10.3.0</code> <code>0.29.2</code> <code>GCCcore/11.3.0</code> <p>(quick links: (all) - a - b - c - d - e - f - g - h - i - j - l - m - n - o - p - q - r - s - t - u - v - w - x - y - z)</p>","boost":0.5},{"location":"docs/software/catalog/p/pkgconf/","title":"pkgconf","text":"<p>pkgconf is a program which helps to configure compiler and linker flags for development libraries.  It is similar to pkg-config from freedesktop.org.</p> <p>homepage: https://github.com/pkgconf/pkgconf</p> version toolchain <code>1.8.0</code> <code>GCCcore/10.2.0</code> <code>1.8.0</code> <code>GCCcore/10.3.0</code> <code>1.8.0</code> <code>GCCcore/11.3.0</code> <code>1.8.0</code> <code>system</code> <code>1.9.5</code> <code>GCCcore/11.3.0</code> <code>1.9.5</code> <code>GCCcore/12.3.0</code> <code>2.0.3</code> <code>GCCcore/12.3.0</code> <p>(quick links: (all) - a - b - c - d - e - f - g - h - i - j - l - m - n - o - p - q - r - s - t - u - v - w - x - y - z)</p>","boost":0.5},{"location":"docs/software/catalog/p/pkgconfig/","title":"pkgconfig","text":"<p>pkgconfig is a Python module to interface with the pkg-config command line tool</p> <p>homepage: https://github.com/matze/pkgconfig</p> version versionsuffix toolchain <code>1.5.5</code> <code>-python</code> <code>GCCcore/11.3.0</code> <p>(quick links: (all) - a - b - c - d - e - f - g - h - i - j - l - m - n - o - p - q - r - s - t - u - v - w - x - y - z)</p>","boost":0.5},{"location":"docs/software/catalog/p/plotly.py/","title":"plotly.py","text":"<p>An open-source, interactive graphing library for Python</p> <p>homepage: https://plot.ly/python</p> version toolchain <code>5.12.0</code> <code>GCCcore/11.3.0</code> <p>(quick links: (all) - a - b - c - d - e - f - g - h - i - j - l - m - n - o - p - q - r - s - t - u - v - w - x - y - z)</p>","boost":0.5},{"location":"docs/software/catalog/p/pocl/","title":"pocl","text":"<p>Pocl is a portable open source (MIT-licensed) implementation of the OpenCL standard</p> <p>homepage: http://portablecl.org</p> version toolchain <code>1.8</code> <code>GCC/11.3.0</code> <p>(quick links: (all) - a - b - c - d - e - f - g - h - i - j - l - m - n - o - p - q - r - s - t - u - v - w - x - y - z)</p>","boost":0.5},{"location":"docs/software/catalog/p/poetry/","title":"poetry","text":"<p>Python packaging and dependency management made easy. Poetry helps you declare, manage and install  dependencies of Python projects, ensuring you have the right stack everywhere.</p> <p>homepage: https://python-poetry.org</p> version toolchain <code>1.5.1</code> <code>GCCcore/11.3.0</code> <code>1.5.1</code> <code>GCCcore/12.3.0</code> <code>1.6.1</code> <code>GCCcore/12.3.0</code> <p>(quick links: (all) - a - b - c - d - e - f - g - h - i - j - l - m - n - o - p - q - r - s - t - u - v - w - x - y - z)</p>","boost":0.5},{"location":"docs/software/catalog/p/poppler/","title":"poppler","text":"<p>Poppler is a PDF rendering library</p> <p>homepage: https://poppler.freedesktop.org</p> version toolchain <code>22.12.0</code> <code>GCC/11.3.0</code> <p>(quick links: (all) - a - b - c - d - e - f - g - h - i - j - l - m - n - o - p - q - r - s - t - u - v - w - x - y - z)</p>","boost":0.5},{"location":"docs/software/catalog/p/protobuf-python/","title":"protobuf-python","text":"<p>Python Protocol Buffers runtime library.</p> <p>homepage: https://github.com/google/protobuf/</p> version toolchain <code>3.19.4</code> <code>GCCcore/11.3.0</code> <p>(quick links: (all) - a - b - c - d - e - f - g - h - i - j - l - m - n - o - p - q - r - s - t - u - v - w - x - y - z)</p>","boost":0.5},{"location":"docs/software/catalog/p/protobuf/","title":"protobuf","text":"<p>Google Protocol Buffers</p> <p>homepage: https://github.com/google/protobuf/</p> version toolchain <code>3.14.0</code> <code>GCCcore/10.2.0</code> <code>3.19.4</code> <code>GCCcore/11.3.0</code> <p>(quick links: (all) - a - b - c - d - e - f - g - h - i - j - l - m - n - o - p - q - r - s - t - u - v - w - x - y - z)</p>","boost":0.5},{"location":"docs/software/catalog/p/pyBigWig/","title":"pyBigWig","text":"<p>A python extension, written in C, for quick access to bigBed  files and access to and creation of bigWig files.</p> <p>homepage: https://github.com/deeptools/pyBigWig</p> version toolchain <code>0.3.18</code> <code>foss/2022a</code> <p>(quick links: (all) - a - b - c - d - e - f - g - h - i - j - l - m - n - o - p - q - r - s - t - u - v - w - x - y - z)</p>","boost":0.5},{"location":"docs/software/catalog/p/pybind11/","title":"pybind11","text":"<p>pybind11 is a lightweight header-only library that exposes C++ types in Python and vice versa,  mainly to create Python bindings of existing C++ code.</p> <p>homepage: https://pybind11.readthedocs.io</p> version toolchain <code>2.11.1</code> <code>GCCcore/11.3.0</code> <code>2.11.1</code> <code>GCCcore/12.3.0</code> <code>2.9.2</code> <code>GCCcore/11.3.0</code> <p>(quick links: (all) - a - b - c - d - e - f - g - h - i - j - l - m - n - o - p - q - r - s - t - u - v - w - x - y - z)</p>","boost":0.5},{"location":"docs/software/catalog/p/pytesseract/","title":"pytesseract","text":"<p>Python-tesseract is an optical character recognition (OCR) tool for python. That is, it will recognize and \"read\" the text embedded in images.  Python-tesseract is a wrapper for Google's Tesseract-OCR Engine. It is also useful as a stand-alone invocation script to tesseract, as it can read all image types supported by the Pillow and Leptonica imaging libraries, including jpeg, png, gif, bmp, tiff, and others. Additionally, if used as a script, Python-tesseract will print the recognized text instead of writing it to a file.</p> <p>homepage: https://github.com/madmaze/pytesseract</p> version toolchain <code>0.3.10</code> <code>GCCcore/11.3.0</code> <p>(quick links: (all) - a - b - c - d - e - f - g - h - i - j - l - m - n - o - p - q - r - s - t - u - v - w - x - y - z)</p>","boost":0.5},{"location":"docs/software/catalog/p/python-isal/","title":"python-isal","text":"<p>Faster zlib and gzip compatible compression and decompression  by providing python bindings for the isa-l library.</p> <p>homepage: https://github.com/pycompression/python-isal</p> version toolchain <code>1.1.0</code> <code>GCCcore/11.3.0</code> <p>(quick links: (all) - a - b - c - d - e - f - g - h - i - j - l - m - n - o - p - q - r - s - t - u - v - w - x - y - z)</p>","boost":0.5},{"location":"docs/software/catalog/q/","title":"List of supported software (q)","text":"<p>(quick links: (all) - a - b - c - d - e - f - g - h - i - j - l - m - n - o - p - q - r - s - t - u - v - w - x - y - z)</p> <ul> <li>Qhull</li> <li>qrupdate</li> <li>Qt5</li> <li>Quarto</li> </ul> <p>(quick links: (all) - a - b - c - d - e - f - g - h - i - j - l - m - n - o - p - q - r - s - t - u - v - w - x - y - z)</p>","boost":0.5},{"location":"docs/software/catalog/q/Qhull/","title":"Qhull","text":"<p>Qhull computes the convex hull, Delaunay triangulation, Voronoi diagram,  halfspace intersection about a point, furthest-site Delaunay triangulation,  and furthest-site Voronoi diagram. The source code runs in 2-d, 3-d, 4-d, and  higher dimensions. Qhull implements the Quickhull algorithm for computing the  convex hull.</p> <p>homepage: http://www.qhull.org</p> version toolchain <code>2020.2</code> <code>GCCcore/10.2.0</code> <code>2020.2</code> <code>GCCcore/11.3.0</code> <code>2020.2</code> <code>GCCcore/12.3.0</code> <p>(quick links: (all) - a - b - c - d - e - f - g - h - i - j - l - m - n - o - p - q - r - s - t - u - v - w - x - y - z)</p>","boost":0.5},{"location":"docs/software/catalog/q/Qt5/","title":"Qt5","text":"<p>Qt is a comprehensive cross-platform C++ application framework.</p> <p>homepage: https://qt.io/</p> version toolchain <code>5.15.5</code> <code>GCCcore/11.3.0</code> <p>(quick links: (all) - a - b - c - d - e - f - g - h - i - j - l - m - n - o - p - q - r - s - t - u - v - w - x - y - z)</p>","boost":0.5},{"location":"docs/software/catalog/q/Quarto/","title":"Quarto","text":"<p>An open-source scientific and technical publishing system</p> <p>homepage: http://quarto.com</p> version toolchain <code>1.5.57</code> <code>system</code> <p>(quick links: (all) - a - b - c - d - e - f - g - h - i - j - l - m - n - o - p - q - r - s - t - u - v - w - x - y - z)</p>","boost":0.5},{"location":"docs/software/catalog/q/qrupdate/","title":"qrupdate","text":"<p>qrupdate is a Fortran library for fast updates of QR and Cholesky decompositions.</p> <p>homepage: https://sourceforge.net/projects/qrupdate/</p> version toolchain <code>1.1.2</code> <code>GCCcore/10.2.0</code> <code>1.1.2</code> <code>GCCcore/11.3.0</code> <p>(quick links: (all) - a - b - c - d - e - f - g - h - i - j - l - m - n - o - p - q - r - s - t - u - v - w - x - y - z)</p>","boost":0.5},{"location":"docs/software/catalog/r/","title":"List of supported software (r)","text":"<p>(quick links: (all) - a - b - c - d - e - f - g - h - i - j - l - m - n - o - p - q - r - s - t - u - v - w - x - y - z)</p> <ul> <li>R</li> <li>R-bundle-Bioconductor</li> <li>R-bundle-CRAN</li> <li>R-bundle-Davidson</li> <li>RapidJSON</li> <li>rclone</li> <li>RE2</li> <li>re2c</li> <li>RStudio-Server</li> <li>Ruby</li> <li>Rust</li> </ul> <p>(quick links: (all) - a - b - c - d - e - f - g - h - i - j - l - m - n - o - p - q - r - s - t - u - v - w - x - y - z)</p>","boost":0.5},{"location":"docs/software/catalog/r/R-bundle-Bioconductor/","title":"R-bundle-Bioconductor","text":"<p>Bioconductor provides tools for the analysis and coprehension  of high-throughput genomic data.</p> <p>homepage: https://bioconductor.org</p> version versionsuffix toolchain <code>3.15</code> <code>-R-4.2.1</code> <code>foss/2022a</code> <code>3.18</code> <code>-R-4.3.2</code> <code>foss/2023a</code> <p>(quick links: (all) - a - b - c - d - e - f - g - h - i - j - l - m - n - o - p - q - r - s - t - u - v - w - x - y - z)</p>","boost":0.5},{"location":"docs/software/catalog/r/R-bundle-CRAN/","title":"R-bundle-CRAN","text":"<p>Bundle of R packages from CRAN</p> <p>homepage: https://www.r-project.org/</p> version toolchain <code>2023.12</code> <code>foss/2023a</code> <p>(quick links: (all) - a - b - c - d - e - f - g - h - i - j - l - m - n - o - p - q - r - s - t - u - v - w - x - y - z)</p>","boost":0.5},{"location":"docs/software/catalog/r/R-bundle-Davidson/","title":"R-bundle-Davidson","text":"<p>Bundle of R packages used at Davidson College.</p> <p>homepage: https://rc.davidson.edu/</p> version toolchain <code>2024</code> <code>foss/2023a</code> <p>(quick links: (all) - a - b - c - d - e - f - g - h - i - j - l - m - n - o - p - q - r - s - t - u - v - w - x - y - z)</p>","boost":0.5},{"location":"docs/software/catalog/r/R/","title":"R","text":"<p>R is a free software environment for statistical computing  and graphics.</p> <p>homepage: https://www.r-project.org/</p> version toolchain <code>4.2.1</code> <code>foss/2022a</code> <code>4.3.2</code> <code>foss/2022a</code> <code>4.3.2</code> <code>gfbf/2023a</code> <code>4.4.1</code> <code>gfbf/2023a</code> <p>(quick links: (all) - a - b - c - d - e - f - g - h - i - j - l - m - n - o - p - q - r - s - t - u - v - w - x - y - z)</p>","boost":0.5},{"location":"docs/software/catalog/r/RE2/","title":"RE2","text":"<p>RE2 is a fast, safe, thread-friendly alternative to backtracking regular expression engines like those used in PCRE, Perl, and Python. It is a C++ library.</p> <p>homepage: https://github.com/google/re2</p> version toolchain <code>2022-06-01</code> <code>GCCcore/11.3.0</code> <code>2023-08-01</code> <code>GCCcore/12.3.0</code> <code>2024-03-01</code> <code>GCCcore/12.3.0</code> <p>(quick links: (all) - a - b - c - d - e - f - g - h - i - j - l - m - n - o - p - q - r - s - t - u - v - w - x - y - z)</p>","boost":0.5},{"location":"docs/software/catalog/r/RStudio-Server/","title":"RStudio-Server","text":"<p>This is the RStudio Server version. RStudio is a set of integrated tools designed to help you be more productive with R.  The server can be started with:   rserver --server-daemonize=0 --www-port=8787  If you need a database config one can be created with:   MYTMP=<code>mktemp -d</code> &amp;&amp; echo -e \"provider=sqlite\\ndirectory=${MYTMP}/sqlite\" &gt; \"${MYTMP}/db.conf\" and then used with:   rserver ... --database-config-file=\"${MYTMP}/db.conf\"</p> <p>homepage: https://www.rstudio.com/</p> version versionsuffix toolchain <code>2022.07.2+576</code> <code>-Java-11-R-4.2.1</code> <code>foss/2022a</code> <code>2023.09.1+494</code> <code>-Java-11-R-4.3.2</code> <code>foss/2023a</code> <p>(quick links: (all) - a - b - c - d - e - f - g - h - i - j - l - m - n - o - p - q - r - s - t - u - v - w - x - y - z)</p>","boost":0.5},{"location":"docs/software/catalog/r/RapidJSON/","title":"RapidJSON","text":"<p>A fast JSON parser/generator for C++ with both SAX/DOM style API</p> <p>homepage: https://rapidjson.org</p> version toolchain <code>1.1.0-20230928</code> <code>GCCcore/12.3.0</code> <code>1.1.0-20240409</code> <code>GCCcore/12.3.0</code> <code>1.1.0</code> <code>GCCcore/11.3.0</code> <p>(quick links: (all) - a - b - c - d - e - f - g - h - i - j - l - m - n - o - p - q - r - s - t - u - v - w - x - y - z)</p>","boost":0.5},{"location":"docs/software/catalog/r/Ruby/","title":"Ruby","text":"<p>Ruby is a dynamic, open source programming language with  a focus on simplicity and productivity. It has an elegant syntax that is  natural to read and easy to write.</p> <p>homepage: https://www.ruby-lang.org</p> version toolchain <code>3.0.5</code> <code>GCCcore/11.3.0</code> <p>(quick links: (all) - a - b - c - d - e - f - g - h - i - j - l - m - n - o - p - q - r - s - t - u - v - w - x - y - z)</p>","boost":0.5},{"location":"docs/software/catalog/r/Rust/","title":"Rust","text":"<p>Rust is a systems programming language that runs blazingly fast, prevents segfaults,  and guarantees thread safety.</p> <p>homepage: https://www.rust-lang.org</p> version toolchain <code>1.60.0</code> <code>GCCcore/10.3.0</code> <code>1.60.0</code> <code>GCCcore/11.3.0</code> <code>1.70.0</code> <code>GCCcore/11.3.0</code> <code>1.70.0</code> <code>GCCcore/12.3.0</code> <code>1.73.0</code> <code>GCCcore/12.3.0</code> <p>(quick links: (all) - a - b - c - d - e - f - g - h - i - j - l - m - n - o - p - q - r - s - t - u - v - w - x - y - z)</p>","boost":0.5},{"location":"docs/software/catalog/r/rclone/","title":"rclone","text":"<p>Rclone is a command line program to sync files and directories to and from  a variety of online storage services</p> <p>homepage: https://rclone.org</p> version toolchain <code>1.57.0</code> <code>system</code> <code>1.66.0</code> <code>system</code> <p>(quick links: (all) - a - b - c - d - e - f - g - h - i - j - l - m - n - o - p - q - r - s - t - u - v - w - x - y - z)</p>","boost":0.5},{"location":"docs/software/catalog/r/re2c/","title":"re2c","text":"<p>re2c is a free and open-source lexer generator for C and C++. Its main goal is generating fast lexers: at least as fast as their reasonably optimized hand-coded counterparts. Instead of using traditional table-driven approach, re2c encodes the generated finite state automata directly in the form of conditional jumps and comparisons.</p> <p>homepage: https://re2c.org/</p> version toolchain <code>2.0.3</code> <code>GCCcore/10.2.0</code> <code>2.2</code> <code>GCCcore/11.3.0</code> <code>3.1</code> <code>GCCcore/12.3.0</code> <p>(quick links: (all) - a - b - c - d - e - f - g - h - i - j - l - m - n - o - p - q - r - s - t - u - v - w - x - y - z)</p>","boost":0.5},{"location":"docs/software/catalog/s/","title":"List of supported software (s)","text":"<p>(quick links: (all) - a - b - c - d - e - f - g - h - i - j - l - m - n - o - p - q - r - s - t - u - v - w - x - y - z)</p> <ul> <li>SAMtools</li> <li>ScaLAPACK</li> <li>scikit-bio</li> <li>scikit-build</li> <li>scikit-image</li> <li>scikit-learn</li> <li>SCIP</li> <li>SCIP-Suite</li> <li>SciPy-bundle</li> <li>SentencePiece</li> <li>setuptools-rust</li> <li>snappy</li> <li>SOCI</li> <li>SoPlex</li> <li>Spack</li> <li>SQLite</li> <li>Stata</li> <li>SuiteSparse</li> <li>SUNDIALS</li> <li>SVG</li> <li>SWIG</li> <li>Szip</li> </ul> <p>(quick links: (all) - a - b - c - d - e - f - g - h - i - j - l - m - n - o - p - q - r - s - t - u - v - w - x - y - z)</p>","boost":0.5},{"location":"docs/software/catalog/s/SAMtools/","title":"SAMtools","text":"<p>SAM Tools provide various utilities for manipulating alignments in the SAM format,   including sorting, merging, indexing and generating alignments in a per-position format.</p> <p>homepage: https://www.htslib.org/</p> version toolchain <code>1.12</code> <code>GCC/10.2.0</code> <code>1.16.1</code> <code>GCC/11.3.0</code> <p>(quick links: (all) - a - b - c - d - e - f - g - h - i - j - l - m - n - o - p - q - r - s - t - u - v - w - x - y - z)</p>","boost":0.5},{"location":"docs/software/catalog/s/SCIP-Suite/","title":"SCIP-Suite","text":"<p>SCIP is currently one of the fastest non-commercial solvers for mixed integer programming (MIP) and mixed integer nonlinear programming (MINLP). It is also a framework for constraint integer programming and  branch-cut-and-price. It allows for total control of the solution process and the access of detailed information down to the guts of the solver.</p> <p>homepage: https://www.scipopt.org</p> version toolchain <code>8.0.4</code> <code>GCC/11.3.0</code> <p>(quick links: (all) - a - b - c - d - e - f - g - h - i - j - l - m - n - o - p - q - r - s - t - u - v - w - x - y - z)</p>","boost":0.5},{"location":"docs/software/catalog/s/SCIP/","title":"SCIP","text":"<p>SCIP is currently one of the fastest non-commercial solvers for mixed integer programming (MIP) and mixed integer nonlinear programming (MINLP). It is also a framework for constraint integer programming and branch-cut-and-price. It allows for total control of the solution process and the access of detailed information down to the guts of the solver.</p> <p>homepage: https://www.scipopt.org/</p> version toolchain <code>3.2.1</code> <code>GCC/11.3.0</code> <p>(quick links: (all) - a - b - c - d - e - f - g - h - i - j - l - m - n - o - p - q - r - s - t - u - v - w - x - y - z)</p>","boost":0.5},{"location":"docs/software/catalog/s/SOCI/","title":"SOCI","text":"<p>SOCI is a database access library for C++ that makes the illusion of embedding SQL queries in the  regular C++ code, staying entirely within the Standard C++.</p> <p>homepage: http://soci.sourceforge.net/</p> version toolchain <code>4.0.3</code> <code>GCC/11.3.0</code> <code>4.0.3</code> <code>GCC/12.3.0</code> <p>(quick links: (all) - a - b - c - d - e - f - g - h - i - j - l - m - n - o - p - q - r - s - t - u - v - w - x - y - z)</p>","boost":0.5},{"location":"docs/software/catalog/s/SQLite/","title":"SQLite","text":"<p>SQLite: SQL Database Engine in a C Library</p> <p>homepage: https://www.sqlite.org/</p> version toolchain <code>3.33.0</code> <code>GCCcore/10.2.0</code> <code>3.35.4</code> <code>GCCcore/10.3.0</code> <code>3.38.3</code> <code>GCCcore/10.2.0</code> <code>3.38.3</code> <code>GCCcore/11.3.0</code> <code>3.42.0</code> <code>GCCcore/12.3.0</code> <p>(quick links: (all) - a - b - c - d - e - f - g - h - i - j - l - m - n - o - p - q - r - s - t - u - v - w - x - y - z)</p>","boost":0.5},{"location":"docs/software/catalog/s/SUNDIALS/","title":"SUNDIALS","text":"<p>SUNDIALS: SUite of Nonlinear and DIfferential/ALgebraic Equation Solvers</p> <p>homepage: https://computing.llnl.gov/projects/sundials</p> version toolchain <code>6.3.0</code> <code>foss/2022a</code> <p>(quick links: (all) - a - b - c - d - e - f - g - h - i - j - l - m - n - o - p - q - r - s - t - u - v - w - x - y - z)</p>","boost":0.5},{"location":"docs/software/catalog/s/SVG/","title":"SVG","text":"<p>Perl binding for SVG</p> <p>homepage: https://metacpan.org/pod/SVG</p> version versionsuffix toolchain <code>2.84</code> <code>-Perl-5.32.0</code> <code>foss/2020b</code> <p>(quick links: (all) - a - b - c - d - e - f - g - h - i - j - l - m - n - o - p - q - r - s - t - u - v - w - x - y - z)</p>","boost":0.5},{"location":"docs/software/catalog/s/SWIG/","title":"SWIG","text":"<p>SWIG is a software development tool that connects programs written in C and C++ with  a variety of high-level programming languages.</p> <p>homepage: http://www.swig.org/</p> version toolchain <code>4.0.2</code> <code>GCCcore/10.2.0</code> <code>4.0.2</code> <code>GCCcore/11.3.0</code> <code>4.1.1</code> <code>GCCcore/12.3.0</code> <p>(quick links: (all) - a - b - c - d - e - f - g - h - i - j - l - m - n - o - p - q - r - s - t - u - v - w - x - y - z)</p>","boost":0.5},{"location":"docs/software/catalog/s/ScaLAPACK/","title":"ScaLAPACK","text":"<p>The ScaLAPACK (or Scalable LAPACK) library includes a subset of LAPACK routines  redesigned for distributed memory MIMD parallel computers.</p> <p>homepage: https://www.netlib.org/scalapack/</p> version versionsuffix toolchain <code>2.1.0</code> <code>gompi/2020b</code> <code>2.1.0</code> <code>-fb</code> <code>gompi/2021a</code> <code>2.2.0</code> <code>-fb</code> <code>gompi/2022a</code> <code>2.2.0</code> <code>-fb</code> <code>gompi/2023a</code> <p>(quick links: (all) - a - b - c - d - e - f - g - h - i - j - l - m - n - o - p - q - r - s - t - u - v - w - x - y - z)</p>","boost":0.5},{"location":"docs/software/catalog/s/SciPy-bundle/","title":"SciPy-bundle","text":"<p>Bundle of Python packages for scientific software</p> <p>homepage: https://python.org/</p> version toolchain <code>2022.05</code> <code>foss/2022a</code> <code>2022.05</code> <code>intel/2022a</code> <code>2023.07</code> <code>foss/2022a</code> <code>2023.07</code> <code>gfbf/2023a</code> <code>2023.11</code> <code>gfbf/2023a</code> <p>(quick links: (all) - a - b - c - d - e - f - g - h - i - j - l - m - n - o - p - q - r - s - t - u - v - w - x - y - z)</p>","boost":0.5},{"location":"docs/software/catalog/s/SentencePiece/","title":"SentencePiece","text":"<p>Unsupervised text tokenizer for Neural Network-based text generation.</p> <p>homepage: https://github.com/google/sentencepiece</p> version toolchain <code>0.1.97</code> <code>GCC/11.3.0</code> <p>(quick links: (all) - a - b - c - d - e - f - g - h - i - j - l - m - n - o - p - q - r - s - t - u - v - w - x - y - z)</p>","boost":0.5},{"location":"docs/software/catalog/s/SoPlex/","title":"SoPlex","text":"<p>SoPlex is an optimization package for solving linear programming problems (LPs) based on an advanced implementation of the primal and dual revised simplex algorithm. It provides special support for the exact solution of LPs with rational input data. It can be used as a standalone solver reading MPS or LP format files via a command line interface as well as embedded into other programs via a C++ class library.</p> <p>homepage: https://soplex.zib.de/</p> version toolchain <code>2.2.1</code> <code>GCC/11.3.0</code> <p>(quick links: (all) - a - b - c - d - e - f - g - h - i - j - l - m - n - o - p - q - r - s - t - u - v - w - x - y - z)</p>","boost":0.5},{"location":"docs/software/catalog/s/Spack/","title":"Spack","text":"<p>Spack is a package manager for supercomputers, Linux, and macOS. It makes installing scientific  software easy. With Spack, you can build a package with multiple versions, configurations, platforms, and compilers,  and all of these builds can coexist on the same machine.</p> <p>homepage: https://spack.io/</p> version toolchain <code>0.17.0</code> <code>system</code> <code>0.20.2</code> <code>system</code> <code>0.22.0</code> <code>system</code> <p>(quick links: (all) - a - b - c - d - e - f - g - h - i - j - l - m - n - o - p - q - r - s - t - u - v - w - x - y - z)</p>","boost":0.5},{"location":"docs/software/catalog/s/Stata/","title":"Stata","text":"<p>Stata is a complete, integrated statistical software package that provides everything you need  for data analysis, data management, and graphics.</p> <p>homepage: https://www.stata.com/</p> version toolchain <code>16</code> <code>system</code> <code>18</code> <code>system</code> <p>(quick links: (all) - a - b - c - d - e - f - g - h - i - j - l - m - n - o - p - q - r - s - t - u - v - w - x - y - z)</p>","boost":0.5},{"location":"docs/software/catalog/s/SuiteSparse/","title":"SuiteSparse","text":"<p>SuiteSparse is a collection of libraries manipulate sparse matrices.</p> <p>homepage: https://faculty.cse.tamu.edu/davis/suitesparse.html</p> version versionsuffix toolchain <code>5.13.0</code> <code>-METIS-5.1.0</code> <code>foss/2022a</code> <p>(quick links: (all) - a - b - c - d - e - f - g - h - i - j - l - m - n - o - p - q - r - s - t - u - v - w - x - y - z)</p>","boost":0.5},{"location":"docs/software/catalog/s/Szip/","title":"Szip","text":"<p>Szip compression software, providing lossless compression of scientific data</p> <p>homepage: https://www.hdfgroup.org/doc_resource/SZIP/</p> version toolchain <code>2.1.1</code> <code>GCCcore/10.2.0</code> <code>2.1.1</code> <code>GCCcore/11.3.0</code> <code>2.1.1</code> <code>GCCcore/12.3.0</code> <p>(quick links: (all) - a - b - c - d - e - f - g - h - i - j - l - m - n - o - p - q - r - s - t - u - v - w - x - y - z)</p>","boost":0.5},{"location":"docs/software/catalog/s/scikit-bio/","title":"scikit-bio","text":"<p>scikit-bio is an open-source, BSD-licensed Python 3 package providing data structures, algorithms and educational resources for bioinformatics.</p> <p>homepage: http://scikit-bio.org</p> version toolchain <code>0.5.7</code> <code>foss/2022a</code> <p>(quick links: (all) - a - b - c - d - e - f - g - h - i - j - l - m - n - o - p - q - r - s - t - u - v - w - x - y - z)</p>","boost":0.5},{"location":"docs/software/catalog/s/scikit-build/","title":"scikit-build","text":"<p>Scikit-Build, or skbuild, is an improved build system generator for CPython C/C++/Fortran/Cython extensions.</p> <p>homepage: https://scikit-build.readthedocs.io/en/latest</p> version toolchain <code>0.17.6</code> <code>GCCcore/11.3.0</code> <code>0.17.6</code> <code>GCCcore/12.3.0</code> <p>(quick links: (all) - a - b - c - d - e - f - g - h - i - j - l - m - n - o - p - q - r - s - t - u - v - w - x - y - z)</p>","boost":0.5},{"location":"docs/software/catalog/s/scikit-image/","title":"scikit-image","text":"<p>scikit-image is a collection of algorithms for image processing.</p> <p>homepage: https://scikit-image.org/</p> version toolchain <code>0.19.3</code> <code>foss/2022a</code> <p>(quick links: (all) - a - b - c - d - e - f - g - h - i - j - l - m - n - o - p - q - r - s - t - u - v - w - x - y - z)</p>","boost":0.5},{"location":"docs/software/catalog/s/scikit-learn/","title":"scikit-learn","text":"<p>Scikit-learn integrates machine learning algorithms in the tightly-knit scientific Python world, building upon numpy, scipy, and matplotlib. As a machine-learning module, it provides versatile tools for data mining and analysis in any field of science and engineering. It strives to be simple and efficient, accessible to everybody, and reusable in various contexts.</p> <p>homepage: https://scikit-learn.org/stable/index.html</p> version toolchain <code>1.1.2</code> <code>foss/2022a</code> <code>1.1.2</code> <code>intel/2022a</code> <p>(quick links: (all) - a - b - c - d - e - f - g - h - i - j - l - m - n - o - p - q - r - s - t - u - v - w - x - y - z)</p>","boost":0.5},{"location":"docs/software/catalog/s/setuptools-rust/","title":"setuptools-rust","text":"<p>setuptools-rust is a plugin for setuptools to build Rust Python extensions implemented with PyO3 or rust-cpython.</p> <p>homepage: https://github.com/PyO3/setuptools-rust</p> version toolchain <code>1.6.0</code> <code>GCCcore/11.3.0</code> <code>1.6.0</code> <code>GCCcore/12.3.0</code> <code>1.8.0</code> <code>GCCcore/12.3.0</code> <p>(quick links: (all) - a - b - c - d - e - f - g - h - i - j - l - m - n - o - p - q - r - s - t - u - v - w - x - y - z)</p>","boost":0.5},{"location":"docs/software/catalog/s/snappy/","title":"snappy","text":"<p>Snappy is a compression/decompression library. It does not aim for maximum compression, or compatibility with any other compression library; instead, it aims for very high speeds and reasonable compression.</p> <p>homepage: https://github.com/google/snappy</p> version toolchain <code>1.1.10</code> <code>GCCcore/12.3.0</code> <code>1.1.9</code> <code>GCCcore/11.3.0</code> <p>(quick links: (all) - a - b - c - d - e - f - g - h - i - j - l - m - n - o - p - q - r - s - t - u - v - w - x - y - z)</p>","boost":0.5},{"location":"docs/software/catalog/t/","title":"List of supported software (t)","text":"<p>(quick links: (all) - a - b - c - d - e - f - g - h - i - j - l - m - n - o - p - q - r - s - t - u - v - w - x - y - z)</p> <ul> <li>tbb</li> <li>tensorboard</li> <li>TensorFlow</li> <li>tesseract</li> <li>texlive</li> <li>Tk</li> <li>Tkinter</li> <li>tornado</li> <li>tqdm</li> <li>TurboVNC</li> </ul> <p>(quick links: (all) - a - b - c - d - e - f - g - h - i - j - l - m - n - o - p - q - r - s - t - u - v - w - x - y - z)</p>","boost":0.5},{"location":"docs/software/catalog/t/TensorFlow/","title":"TensorFlow","text":"<p>An open-source software library for Machine Intelligence</p> <p>homepage: https://www.tensorflow.org/</p> version versionsuffix toolchain <code>2.11.0</code> <code>-CUDA-11.7.0</code> <code>foss/2022a</code> <code>2.11.0</code> <code>-CUDA-11.8.0</code> <code>foss/2022a</code> <code>2.11.0</code> <code>foss/2022a</code> <p>(quick links: (all) - a - b - c - d - e - f - g - h - i - j - l - m - n - o - p - q - r - s - t - u - v - w - x - y - z)</p>","boost":0.5},{"location":"docs/software/catalog/t/Tk/","title":"Tk","text":"<p>Tk is an open source, cross-platform widget toolchain that provides a library of basic elements for  building a graphical user interface (GUI) in many different programming languages.</p> <p>homepage: https://www.tcl.tk/</p> version toolchain <code>8.6.12</code> <code>GCCcore/11.3.0</code> <code>8.6.13</code> <code>GCCcore/12.3.0</code> <p>(quick links: (all) - a - b - c - d - e - f - g - h - i - j - l - m - n - o - p - q - r - s - t - u - v - w - x - y - z)</p>","boost":0.5},{"location":"docs/software/catalog/t/Tkinter/","title":"Tkinter","text":"<p>Tkinter module, built with the Python buildsystem</p> <p>homepage: https://python.org/</p> version toolchain <code>3.10.4</code> <code>GCCcore/11.3.0</code> <p>(quick links: (all) - a - b - c - d - e - f - g - h - i - j - l - m - n - o - p - q - r - s - t - u - v - w - x - y - z)</p>","boost":0.5},{"location":"docs/software/catalog/t/TurboVNC/","title":"TurboVNC","text":"<p>TurboVNC is a derivative of VNC (Virtual Network Computing) that is tuned to provide  peak performance for 3D and video workloads.</p> <p>homepage: https://www.turbovnc.org</p> version toolchain <code>3.0.1</code> <code>GCCcore/11.3.0</code> <p>(quick links: (all) - a - b - c - d - e - f - g - h - i - j - l - m - n - o - p - q - r - s - t - u - v - w - x - y - z)</p>","boost":0.5},{"location":"docs/software/catalog/t/tbb/","title":"tbb","text":"<p>Intel(R) Threading Building Blocks (Intel(R) TBB) lets you easily write parallel C++ programs that  take full advantage of multicore performance, that are portable, composable and have future-proof scalability.</p> <p>homepage: https://github.com/oneapi-src/oneTBB</p> version toolchain <code>2021.5.0</code> <code>GCCcore/11.3.0</code> <p>(quick links: (all) - a - b - c - d - e - f - g - h - i - j - l - m - n - o - p - q - r - s - t - u - v - w - x - y - z)</p>","boost":0.5},{"location":"docs/software/catalog/t/tensorboard/","title":"tensorboard","text":"<p>TensorBoard is a suite of web applications for inspecting and understanding your TensorFlow runs and graphs.</p> <p>homepage: https://github.com/tensorflow/tensorboard</p> version toolchain <code>2.10.0</code> <code>foss/2022a</code> <p>(quick links: (all) - a - b - c - d - e - f - g - h - i - j - l - m - n - o - p - q - r - s - t - u - v - w - x - y - z)</p>","boost":0.5},{"location":"docs/software/catalog/t/tesseract/","title":"tesseract","text":"<p>Tesseract is an optical character recognition engine</p> <p>homepage: https://github.com/tesseract-ocr/tesseract</p> version toolchain <code>5.3.0</code> <code>GCCcore/11.3.0</code> <p>(quick links: (all) - a - b - c - d - e - f - g - h - i - j - l - m - n - o - p - q - r - s - t - u - v - w - x - y - z)</p>","boost":0.5},{"location":"docs/software/catalog/t/texlive/","title":"texlive","text":"<p>TeX is a typesetting language. Instead of visually formatting your text, you enter your manuscript  text intertwined with TeX commands in a plain text file. You then run TeX to produce formatted output, such as a  PDF file. Thus, in contrast to standard word processors, your document is a separate file that does not pretend to  be a representation of the final typeset output, and so can be easily edited and manipulated.</p> <p>homepage: https://tug.org</p> version toolchain <code>20220321</code> <code>GCC/11.3.0</code> <code>20230313</code> <code>GCC/12.3.0</code> <p>(quick links: (all) - a - b - c - d - e - f - g - h - i - j - l - m - n - o - p - q - r - s - t - u - v - w - x - y - z)</p>","boost":0.5},{"location":"docs/software/catalog/t/tornado/","title":"tornado","text":"<p>Tornado is a Python web framework and asynchronous networking library.</p> <p>homepage: https://github.com/tornadoweb/tornado</p> version toolchain <code>6.3.2</code> <code>GCCcore/11.3.0</code> <p>(quick links: (all) - a - b - c - d - e - f - g - h - i - j - l - m - n - o - p - q - r - s - t - u - v - w - x - y - z)</p>","boost":0.5},{"location":"docs/software/catalog/t/tqdm/","title":"tqdm","text":"<p>A fast, extensible progress bar for Python and CLI</p> <p>homepage: https://github.com/tqdm/tqdm</p> version toolchain <code>4.64.0</code> <code>GCCcore/11.3.0</code> <p>(quick links: (all) - a - b - c - d - e - f - g - h - i - j - l - m - n - o - p - q - r - s - t - u - v - w - x - y - z)</p>","boost":0.5},{"location":"docs/software/catalog/u/","title":"List of supported software (u)","text":"<p>(quick links: (all) - a - b - c - d - e - f - g - h - i - j - l - m - n - o - p - q - r - s - t - u - v - w - x - y - z)</p> <ul> <li>UCC</li> <li>UCX</li> <li>UCX-CUDA</li> <li>UDUNITS</li> <li>utf8proc</li> </ul> <p>(quick links: (all) - a - b - c - d - e - f - g - h - i - j - l - m - n - o - p - q - r - s - t - u - v - w - x - y - z)</p>","boost":0.5},{"location":"docs/software/catalog/u/UCC/","title":"UCC","text":"<p>UCC (Unified Collective Communication) is a collective communication operations API and library that is flexible, complete, and  feature-rich for current and emerging programming models and runtimes.</p> <p>homepage: https://www.openucx.org/</p> version toolchain <code>1.0.0</code> <code>GCCcore/11.3.0</code> <code>1.2.0</code> <code>GCCcore/12.3.0</code> <p>(quick links: (all) - a - b - c - d - e - f - g - h - i - j - l - m - n - o - p - q - r - s - t - u - v - w - x - y - z)</p>","boost":0.5},{"location":"docs/software/catalog/u/UCX-CUDA/","title":"UCX-CUDA","text":"<p>Unified Communication X An open-source production grade communication framework for data centric and high-performance applications  This module adds the UCX CUDA support.</p> <p>homepage: http://www.openucx.org/</p> version versionsuffix toolchain <code>1.10.0</code> <code>-CUDA-11.3.1</code> <code>GCCcore/10.3.0</code> <code>1.12.1</code> <code>-CUDA-11.7.0</code> <code>GCCcore/11.3.0</code> <code>1.12.1</code> <code>-CUDA-11.8.0</code> <code>GCCcore/11.3.0</code> <p>(quick links: (all) - a - b - c - d - e - f - g - h - i - j - l - m - n - o - p - q - r - s - t - u - v - w - x - y - z)</p>","boost":0.5},{"location":"docs/software/catalog/u/UCX/","title":"UCX","text":"<p>Unified Communication X An open-source production grade communication framework for data centric and high-performance applications</p> <p>homepage: https://www.openucx.org/</p> version versionsuffix toolchain <code>1.10.0</code> <code>GCCcore/10.3.0</code> <code>1.12.1</code> <code>GCCcore/11.3.0</code> <code>1.14.1</code> <code>GCCcore/12.3.0</code> <code>1.9.0</code> <code>-CUDA-11.1.1</code> <code>GCCcore/10.2.0</code> <code>1.9.0</code> <code>GCCcore/10.2.0</code> <p>(quick links: (all) - a - b - c - d - e - f - g - h - i - j - l - m - n - o - p - q - r - s - t - u - v - w - x - y - z)</p>","boost":0.5},{"location":"docs/software/catalog/u/UDUNITS/","title":"UDUNITS","text":"<p>UDUNITS supports conversion of unit specifications between formatted and binary forms,  arithmetic manipulation of units, and conversion of values between compatible scales of measurement.</p> <p>homepage: https://www.unidata.ucar.edu/software/udunits/</p> version toolchain <code>2.2.26</code> <code>GCCcore/10.2.0</code> <code>2.2.28</code> <code>GCCcore/11.3.0</code> <code>2.2.28</code> <code>GCCcore/12.3.0</code> <p>(quick links: (all) - a - b - c - d - e - f - g - h - i - j - l - m - n - o - p - q - r - s - t - u - v - w - x - y - z)</p>","boost":0.5},{"location":"docs/software/catalog/u/utf8proc/","title":"utf8proc","text":"<p>utf8proc is a small, clean C library that provides Unicode normalization, case-folding,  and other operations for data in the UTF-8 encoding.</p> <p>homepage: https://github.com/JuliaStrings/utf8proc</p> version toolchain <code>2.7.0</code> <code>GCCcore/11.3.0</code> <code>2.8.0</code> <code>GCCcore/12.3.0</code> <code>2.9.0</code> <code>GCCcore/12.3.0</code> <p>(quick links: (all) - a - b - c - d - e - f - g - h - i - j - l - m - n - o - p - q - r - s - t - u - v - w - x - y - z)</p>","boost":0.5},{"location":"docs/software/catalog/v/","title":"List of supported software (v)","text":"<p>(quick links: (all) - a - b - c - d - e - f - g - h - i - j - l - m - n - o - p - q - r - s - t - u - v - w - x - y - z)</p> <ul> <li>virtualenv</li> <li>VirtualGL</li> </ul> <p>(quick links: (all) - a - b - c - d - e - f - g - h - i - j - l - m - n - o - p - q - r - s - t - u - v - w - x - y - z)</p>","boost":0.5},{"location":"docs/software/catalog/v/VirtualGL/","title":"VirtualGL","text":"<p>VirtualGL is an open source toolkit that gives any Linux or  Unix remote display software the ability to run OpenGL applications with full  hardware acceleration.</p> <p>homepage: https://virtualgl.org/</p> version toolchain <code>3.1</code> <code>GCC/11.3.0</code> <p>(quick links: (all) - a - b - c - d - e - f - g - h - i - j - l - m - n - o - p - q - r - s - t - u - v - w - x - y - z)</p>","boost":0.5},{"location":"docs/software/catalog/v/virtualenv/","title":"virtualenv","text":"<p>A tool for creating isolated virtual python environments.</p> <p>homepage: https://github.com/pypa/virtualenv</p> version toolchain <code>20.23.1</code> <code>GCCcore/11.3.0</code> <code>20.23.1</code> <code>GCCcore/12.3.0</code> <code>20.24.6</code> <code>GCCcore/12.3.0</code> <p>(quick links: (all) - a - b - c - d - e - f - g - h - i - j - l - m - n - o - p - q - r - s - t - u - v - w - x - y - z)</p>","boost":0.5},{"location":"docs/software/catalog/w/","title":"List of supported software (w)","text":"<p>(quick links: (all) - a - b - c - d - e - f - g - h - i - j - l - m - n - o - p - q - r - s - t - u - v - w - x - y - z)</p> <ul> <li>Wayland</li> </ul> <p>(quick links: (all) - a - b - c - d - e - f - g - h - i - j - l - m - n - o - p - q - r - s - t - u - v - w - x - y - z)</p>","boost":0.5},{"location":"docs/software/catalog/w/Wayland/","title":"Wayland","text":"<p>Wayland is a project to define a protocol for a compositor to talk to  its clients as well as a library implementation of the protocol.  The  compositor can be a standalone display server running on Linux kernel  modesetting and evdev input devices, an X application, or a wayland  client itself.  The clients can be traditional applications, X servers  (rootless or fullscreen) or other display servers.</p> <p>homepage: https://wayland.freedesktop.org/</p> version toolchain <code>1.20.0</code> <code>GCCcore/11.3.0</code> <code>1.22.0</code> <code>GCCcore/12.3.0</code> <p>(quick links: (all) - a - b - c - d - e - f - g - h - i - j - l - m - n - o - p - q - r - s - t - u - v - w - x - y - z)</p>","boost":0.5},{"location":"docs/software/catalog/x/","title":"List of supported software (x)","text":"<p>(quick links: (all) - a - b - c - d - e - f - g - h - i - j - l - m - n - o - p - q - r - s - t - u - v - w - x - y - z)</p> <ul> <li>X11</li> <li>x264</li> <li>x265</li> <li>Xerces-C++</li> <li>xorg-macros</li> <li>xprop</li> </ul> <p>(quick links: (all) - a - b - c - d - e - f - g - h - i - j - l - m - n - o - p - q - r - s - t - u - v - w - x - y - z)</p>","boost":0.5},{"location":"docs/software/catalog/x/X11/","title":"X11","text":"<p>The X Window System (X11) is a windowing system for bitmap displays</p> <p>homepage: https://www.x.org</p> version toolchain <code>20220504</code> <code>GCCcore/11.3.0</code> <code>20230603</code> <code>GCCcore/12.3.0</code> <p>(quick links: (all) - a - b - c - d - e - f - g - h - i - j - l - m - n - o - p - q - r - s - t - u - v - w - x - y - z)</p>","boost":0.5},{"location":"docs/software/catalog/x/Xerces-C%2B%2B/","title":"Xerces-C++","text":"<p>Xerces-C++ is a validating XML parser written in a portable subset of C++. Xerces-C++ makes it easy to give your application the ability to read and write XML data. A shared library is provided for parsing, generating, manipulating, and validating XML documents using the DOM, SAX, and SAX2 APIs.</p> <p>homepage: https://xerces.apache.org/xerces-c/</p> version toolchain <code>3.2.4</code> <code>GCCcore/11.3.0</code> <code>3.2.4</code> <code>GCCcore/12.3.0</code> <code>3.2.5</code> <code>GCCcore/12.3.0</code> <p>(quick links: (all) - a - b - c - d - e - f - g - h - i - j - l - m - n - o - p - q - r - s - t - u - v - w - x - y - z)</p>","boost":0.5},{"location":"docs/software/catalog/x/x264/","title":"x264","text":"<p>x264 is a free software library and application for encoding video streams  into the H.264/MPEG-4 AVC compression format, and is released under the  terms of the GNU GPL.</p> <p>homepage: https://www.videolan.org/developers/x264.html</p> version toolchain <code>20201026</code> <code>GCCcore/10.2.0</code> <code>20220620</code> <code>GCCcore/11.3.0</code> <p>(quick links: (all) - a - b - c - d - e - f - g - h - i - j - l - m - n - o - p - q - r - s - t - u - v - w - x - y - z)</p>","boost":0.5},{"location":"docs/software/catalog/x/x265/","title":"x265","text":"<p>x265 is a free software library and application for encoding video streams  into the H.265 AVC compression format, and is released under the terms of  the GNU GPL.</p> <p>homepage: https://x265.org/</p> version toolchain <code>3.3</code> <code>GCCcore/10.2.0</code> <code>3.5</code> <code>GCCcore/11.3.0</code> <p>(quick links: (all) - a - b - c - d - e - f - g - h - i - j - l - m - n - o - p - q - r - s - t - u - v - w - x - y - z)</p>","boost":0.5},{"location":"docs/software/catalog/x/xorg-macros/","title":"xorg-macros","text":"<p>X.org macros utilities.</p> <p>homepage: https://cgit.freedesktop.org/xorg/util/macros</p> version toolchain <code>1.19.3</code> <code>GCCcore/11.3.0</code> <code>1.20.0</code> <code>GCCcore/12.3.0</code> <p>(quick links: (all) - a - b - c - d - e - f - g - h - i - j - l - m - n - o - p - q - r - s - t - u - v - w - x - y - z)</p>","boost":0.5},{"location":"docs/software/catalog/x/xprop/","title":"xprop","text":"<p>The xprop utility is for displaying window and font properties in an X server.  One window or font is selected using the command line arguments or possibly  in the case of a window, by clicking on the desired window. A list of  properties is then given, possibly with formatting information.</p> <p>homepage: https://www.x.org/wiki/</p> version toolchain <code>1.2.5</code> <code>GCCcore/11.3.0</code> <p>(quick links: (all) - a - b - c - d - e - f - g - h - i - j - l - m - n - o - p - q - r - s - t - u - v - w - x - y - z)</p>","boost":0.5},{"location":"docs/software/catalog/y/","title":"List of supported software (y)","text":"<p>(quick links: (all) - a - b - c - d - e - f - g - h - i - j - l - m - n - o - p - q - r - s - t - u - v - w - x - y - z)</p> <ul> <li>yaml-cpp</li> <li>Yasm</li> </ul> <p>(quick links: (all) - a - b - c - d - e - f - g - h - i - j - l - m - n - o - p - q - r - s - t - u - v - w - x - y - z)</p>","boost":0.5},{"location":"docs/software/catalog/y/Yasm/","title":"Yasm","text":"<p>Yasm: Complete rewrite of the NASM assembler with BSD license</p> <p>homepage: https://www.tortall.net/projects/yasm/</p> version toolchain <code>1.3.0</code> <code>GCCcore/10.2.0</code> <code>1.3.0</code> <code>GCCcore/11.3.0</code> <p>(quick links: (all) - a - b - c - d - e - f - g - h - i - j - l - m - n - o - p - q - r - s - t - u - v - w - x - y - z)</p>","boost":0.5},{"location":"docs/software/catalog/y/yaml-cpp/","title":"yaml-cpp","text":"<p>yaml-cpp is a YAML parser and emitter in C++ matching the YAML 1.2 spec</p> <p>homepage: https://github.com/jbeder/yaml-cpp</p> version toolchain <code>0.7.0</code> <code>GCCcore/11.3.0</code> <code>0.7.0</code> <code>GCCcore/12.3.0</code> <p>(quick links: (all) - a - b - c - d - e - f - g - h - i - j - l - m - n - o - p - q - r - s - t - u - v - w - x - y - z)</p>","boost":0.5},{"location":"docs/software/catalog/z/","title":"List of supported software (z)","text":"<p>(quick links: (all) - a - b - c - d - e - f - g - h - i - j - l - m - n - o - p - q - r - s - t - u - v - w - x - y - z)</p> <ul> <li>Z3</li> <li>ZeroMQ</li> <li>ZIMPL</li> </ul> <p>(quick links: (all) - a - b - c - d - e - f - g - h - i - j - l - m - n - o - p - q - r - s - t - u - v - w - x - y - z)</p>","boost":0.5},{"location":"docs/software/catalog/z/Z3/","title":"Z3","text":"<p>Z3 is a theorem prover from Microsoft Research.</p> <p>homepage: https://github.com/Z3Prover/z3</p> version toolchain <code>4.10.2</code> <code>GCCcore/11.3.0</code> <p>(quick links: (all) - a - b - c - d - e - f - g - h - i - j - l - m - n - o - p - q - r - s - t - u - v - w - x - y - z)</p>","boost":0.5},{"location":"docs/software/catalog/z/ZIMPL/","title":"ZIMPL","text":"<p>ZIMPL is a little language to translate the mathematical model of a problem into a linear or nonlinear (mixed-) integer mathematical program expressed in .lp or .mps file format which can be read and (hopefully) solved by a LP or MIP solver.</p> <p>homepage: https://zimpl.zib.de/</p> version toolchain <code>3.3.4</code> <code>GCCcore/11.3.0</code> <p>(quick links: (all) - a - b - c - d - e - f - g - h - i - j - l - m - n - o - p - q - r - s - t - u - v - w - x - y - z)</p>","boost":0.5},{"location":"docs/software/catalog/z/ZeroMQ/","title":"ZeroMQ","text":"<p>ZeroMQ looks like an embeddable networking library but acts like a concurrency framework.  It gives you sockets that carry atomic messages across various transports like in-process,  inter-process, TCP, and multicast. You can connect sockets N-to-N with patterns like fanout,  pub-sub, task distribution, and request-reply. It's fast enough to be the fabric for clustered  products. Its asynchronous I/O model gives you scalable multicore applications, built as asynchronous  message-processing tasks. It has a score of language APIs and runs on most operating systems.</p> <p>homepage: https://www.zeromq.org/</p> version toolchain <code>4.3.4</code> <code>GCCcore/11.3.0</code> <p>(quick links: (all) - a - b - c - d - e - f - g - h - i - j - l - m - n - o - p - q - r - s - t - u - v - w - x - y - z)</p>","boost":0.5},{"location":"guides/ResourceLimits/","title":"CPU Limits &amp; Usage","text":"In\u00a0[\u00a0]: Copied! <pre>ii=0\nwhile ii &lt;= 2*10**8:\n    ii=ii+1\n    \n</pre>  ii=0 while ii &lt;= 2*10**8:     ii=ii+1      <p>Because you have been alloted 2 CPU cores, you should have seen the graph only go up to approximately 50%.  Moreover, because of the constraints placed on this running instance, you will never be able to use more than the alloted 2 CPU cores.</p> In\u00a0[\u00a0]: Copied! <pre># this consumes an exponentially increasing amount of memory.\nbig='small'\nwhile True:\n    big=big+big\n    \n</pre>  # this consumes an exponentially increasing amount of memory. big='small' while True:     big=big+big      <p>You should have seen the Memory usage indicator become red and approach almost 100% before the kernel for this notebook was selected for death by the system's \"Out of Memory Killer.\"</p>"},{"location":"guides/ResourceLimits/#cpu-limits-usage","title":"CPU Limits &amp; Usage\u00b6","text":"<p>The default JupyterLab interface provides a CPU &amp; Memory usage indicator in the upper right-hand corner of the application. To see the CPU indicator in action, run the follow cell.</p>"},{"location":"guides/ResourceLimits/#memory-limits-usage","title":"Memory Limits &amp; Usage\u00b6","text":"<p>Unlike CPU cycles, memory cannot be oversubscribed (e.g. two people cannot share 1 byte without pre-conditions.) Because of this, memory limits are enforced as hard limits; that is, the system will select and kill one of your processes to keep you from violating the limit.</p> <p>For an example of what that looks like, run the following cell.</p>"},{"location":"guides/conda/","title":"Using Conda","text":"<p>Conda is the package and environment manager we make available and advocate for the use of on our research clusters. It enables cluster users to install software in a safe, easy, and robust way by creating environments that isolate installed software from system level dependencies (that are subject to change).</p>"},{"location":"guides/conda/#loading-the-miniconda3-module","title":"Loading the Miniconda3 Module","text":"<p>Most of the infrastructure we provide should have <code>Miniconda3</code> (the <code>conda</code> distribution we support) available by default.   However, before you can use the <code>conda</code> command this distribution provides, you'll need to load <code>Miniconda3</code> into your environment.  To acomplish this, you need only execute <code>module load Miniconda3</code> in a terminal.</p> <p>If you are unsure if <code>Miniconda3</code> is properly loaded, you can verify it's absense (or presence) by inspecting the output of <code>module list</code>.</p> <p>Note</p> <p>If you wish to load a different version of Miniconda3, use <code>module avail Miniconda3</code> to see a list every available version at your disposal. To load a specific version you use <code>module load Miniconda3/[version]</code>. </p> <p>Once loaded, the command <code>conda</code> will become available, and you should see <code>(base)</code> at the beginning of your terminal prompt. </p>"},{"location":"guides/conda/#creating-and-using-environments","title":"Creating and Using Environments","text":"<p>A conda environment can be created by using the <code>conda create -n [env-name]</code> command.</p> <pre><code>conda create -n test-env\n</code></pre> <p>These environments are saved in the \"/home/DAVIDSON/[username]/.conda/envs\" directory, and they are accessible only to you. Make sure to follow good naming practices and be consistent while naming your environments.</p> <p>Once an environment is created, you can activate it buy running <code>conda activate [env-name]</code>. </p> <pre><code>conda activate test-env\n</code></pre> <p>Note</p> <p>You can use <code>conda deactivate</code> to stop using the current environment at any point.</p> <p>With an environment created the next order of business will be installing &amp; managing required packages. When installing pacakges, it's extremely important to specify the version you want installed (otherwise you will eventually run into issues). Thankfully, <code>conda</code> provides the <code>search</code> sub-command which will output a list of versions a package has available to install.</p> <pre><code>conda search pytorch\n</code></pre> <p>Output</p> <pre><code># Name                       Version           Build  Channel \npytorch                        2.4.0 cuda118_py310h6f85f1b_300  conda-forge         \npytorch                        2.4.0 cuda118_py310h954aa82_301  conda-forge         \npytorch                        2.4.0 cuda118_py311h4ee7bbc_301  conda-forge         \npytorch                        2.4.0 cuda118_py311h6c9cb27_300  conda-forge         \npytorch                        2.4.0 cpu_generic_py310ha4c588e_0  conda-forge         \npytorch                        2.4.0 cpu_generic_py311h7a8ff39_1  conda-forge         \npytorch                        2.4.0 cpu_generic_py311h8ca351a_0  conda-forge        \npytorch                        2.4.0 cpu_mkl_py310h75865b9_100  conda-forge         \npytorch                        2.4.0 cpu_mkl_py311h02aef37_101  conda-forge         \npytorch                        2.4.0 cpu_mkl_py311hcb16b95_100  conda-forge\n</code></pre> <p>As evidenced by the output above, <code>conda</code> packages are not uniquely determined by their version alone. However, combining the version with a build-tag (the <code>Build</code> column above) will uniquely specify the package to install. </p> <p>In addition, the build-tag can provide important information about the specific package variants which are available; in the case of <code>pytorch</code> above, there are distinct types of build-tag, and each provides information about the package. </p> <ul> <li>Build-tags starting with <code>cuda118</code>: specifiy a variant of <code>pytorch</code> which expects <code>CUDA</code> version <code>11.8</code> to be available, and is configured to use any available NVIDIA GPUs.</li> <li>Build-tags starting with <code>cpu_generic</code>: specifiy variants configured to only use a generic <code>CPU</code>, with no additional optimization.</li> <li>Build-tags starting with <code>cpu_mkl</code>: specifiy that the variant is configured to only use a <code>CPU</code>, and can make use of the Intel Math Kernel Library (<code>mkl</code>) to accelerate computations.</li> </ul> <p>Note</p> <p>The different suffixes starting with <code>py</code> indicate with version of python the package intends to use: <code>py310</code> for Python 3.10, <code>py311</code> for Python 3.11, ...</p> <p>When you've selected the desired version &amp; build of a package you want to install, you'll use <code>conda install</code> with the following slightly awkward syntax <code>conda install -n [env-name] [package][version=VER,build=TAG]</code>. </p> <p>For example, to install a GPU enabled version of <code>pytorch</code> which uses <code>CUDA-11.8</code> and <code>Python 3.10</code>, we run</p> <pre><code>conda install -n test-env pytorch[version=2.4.0,build=cuda118_py310*]\n</code></pre> <p>Tip</p> <p>In most cases, you won't need to worry about the build-tag when installing a package. In those cases, we can use <code>conda install -n [env-name] [package]=VER</code> instead. </p> <p>Before moving on, here is some additional information which might be helpful.</p> <ol> <li>Multiple packages can be installed using one command</li> <li>Not specifying a package's version will retrieve the latest version available with the only constraints on the build-tag being that it must be compatible with other installed packages. </li> </ol> <p>Once you've installed any packages you require, you can verify everything is installed as expected using the <code>conda list</code> command, which provides a relatively detailed list of packages that are installed.</p> <pre><code>conda list --name test-env\n</code></pre> <p>Output</p> <pre><code># packages in environment at /home/DAVIDSON/xmiblackmon/.conda/envs/test-env:                                     \n#                                                                                                             \n# Name                    Version                   Build  Channel\n_libgcc_mutex             0.1                 conda_forge    conda-forge\n_openmp_mutex             4.5                  2_kmp_llvm    conda-forge\n_sysroot_linux-64_curr_repodata_hack 3                   haa98f57_10  \nblas                      2.128                  openblas    conda-forge\nblas-devel                3.9.0           28_h1ea3ea9_openblas    conda-forge\nbzip2                     1.0.8                h5eee18b_6  \nca-certificates           2024.12.31           h06a4308_0  \ncuda-version              11.8                 hcce14f8_3  \ncudatoolkit               11.8.0               h6a678d5_0  \ncudnn                     8.9.7.29             hbc23b4c_3    conda-forge\nfilelock                  3.13.1          py310h06a4308_0  \nfsspec                    2024.12.0       py310h06a4308_0  \ngmp                       6.3.0                h6a678d5_0  \ngmpy2                     2.2.1           py310h5eee18b_0  \njinja2                    3.1.5           py310h06a4308_0  \nkernel-headers_linux-64   3.10.0              h57e8cba_10  \nld_impl_linux-64          2.40                 h12ee557_0  \nlibabseil                 20240116.2      cxx17_h6a678d5_0  \nlibblas                   3.9.0           28_h59b9bed_openblas    conda-forge\nlibcblas                  3.9.0           28_he106b2a_openblas    conda-forge\nlibffi                    3.4.4                h6a678d5_1  \nlibgcc                    14.2.0               h77fa898_1    conda-forge\n...\n</code></pre>"},{"location":"guides/conda/#importing-and-sharing-environments","title":"Importing and Sharing Environments","text":"<p>In order to share your environment to others, you may need to export and create environments using <code>conda env export --no-builds --name [env-name] | grep -v prefix &gt; [env-name-export].yaml</code> command. This will create a yaml file in your current directory, including the name of every package installed in the environment.</p> <p>Example</p> <p><code>conda env export --no-builds --name test-env | grep -v prefix &gt; test-env-export.yaml</code></p> <p>Example</p> <p>Contents of the test-env-export.yaml may look like this: </p> <pre><code>name: test-env  \nchannels:  \n- defaults  \ndependencies:  \n- sqlite=3.33.0\n</code></pre> <p>Using the newly created yaml file, you may create an environment with the <code>conda env create --file [path/to/[env-name-export]].yaml</code>command.</p>"},{"location":"guides/conda/#installing-a-custom-jupyter-kernel","title":"Installing a Custom Jupyter Kernel","text":"<p>Similar to installing a package, creating a python notebook kernel for your instance can be accomplished by <code>conda install ipykernel</code> command. </p>"},{"location":"guides/conda/#best-practices","title":"Best practices","text":"<ul> <li>Load the conda module each time you ssh into a research cluster node with <code>module load Miniconda3</code></li> <li>Do not forget to activate your environment before running any jobs</li> <li>For troubleshooting, Conda Docs is a great place to start.</li> </ul>"},{"location":"guides/git/","title":"Git/Github Tutorial","text":"<p>Version control is a way to track and manage changes to your work. Your work can include any form of document (LaTeX/txt/md) or code you may write. A version controller oversees your project: tags the files in the project and create a copy each time you want to save your project. Once a project is saved, you may revert back to the previously saved state at any time in case something breaks. This allows you to safely make any changes to your current project without worrying about losing progress.</p> <p>Most commonly used version controller is Git and GitHub is the online service built to run Git in the cloud. By storing your projects (which Git calls repositories) in the cloud, you can share them with anyone and access anywhere. You can access Git through your terminal, while you can use your web-browser to access to GitHub to interact with your Git.</p>"},{"location":"guides/git/#creating-a-github-account","title":"Creating a GitHub Account","text":"<p>You can create a GitHub account using your e-mail address and a password of your choosing. If you are using your Davidson e-mail, try to choose a password different than your e-mail password. You will also enter a username of your choosing, which can be used by others to find your profile on GitHub.</p>"},{"location":"guides/git/#setting-up-git-config","title":"Setting Up Git Config","text":"<p>If it is your first time connecting to a research cluster node, it is best to set up your git credentials for your user. Whenever you run a git command, your system will associate your GitHub account with the git commands.</p> <pre><code>git config --global user.name \"[GitHub username]\"  \ngit config --global user.email [GitHub e-mail address]\n</code></pre> <p>Note</p> <p>You can check your Git configuration file using the <code>cat ~/.gitconfig</code> command.</p> <p>Example</p> <p>Once you entered your information, your config file may look like this:  </p> <pre><code>[user]  \nname = AndrewScott  \nemail = anscott@davidson.edu\n</code></pre>"},{"location":"guides/git/#connecting-to-github","title":"Connecting to GitHub","text":"<p>SSH (Secure Shell) keys allow you to securely connect to GitHub without needing to enter your username and password every time. First, check if you have created a pair of SSH keys before by running the <code>ls -al ~/.ssh</code> command. If you receive \"No such file or directory\" message, then you can move on to Generating SHH Keys section. If you already have files named \"id_ed25519\" and \"id_ed25519.pub\", then check the contents of these files to see if you have an ssh-key generated associated with your GitHub e-mail address (refer to Entering SSH Keys to GitHub section for an example).</p>"},{"location":"guides/git/#generating-ssh-keys","title":"Generating SSH Keys","text":"<p>You can generate a new SSH Key by using <code>ssh-keygen -t ed25519 -C \"[GitHub e-mail address]\"</code> command.</p> <p>Example</p> <p><code>ssh-keygen -t ed25519 -C \"anscott@davidson.edu\"</code></p> <p>Once you entered the command, you will be prompted with the following questions:</p> <p>Example</p> <pre><code>Enter file in which to save the key (/home/DAVIDSON/anscott/.ssh/id_ed25519):  \nCreated directory '/home/DAVIDSON/anscott/.ssh'.  \nEnter passphrase (empty for no passphrase):  \nEnter same passphrase again:\n</code></pre> <p>You may press \"Enter\" for each of the prompts. Once the last prompt is answered, you may see an output similar to the following:</p> <p>Example</p> <pre><code>Your identification has been saved in /home/DAVIDSON/anscott/.ssh/id_ed25519.  \nYour public key has been saved in /home/DAVIDSON/anscott/.ssh/id_ed25519.pub.  \nThe key fingerprint is:  \nSHA256:TIYH9XHaEtmfWWZ6K/9JZZdCnjd8gTPAFuYTmsMeVik anscott@davidson.edu  \nThe key's randomart image is:  \n+--[ED25519 256]--+  \n|      ... +O+    |  \n|       o.EB=+ . +|  \n|      . +B*o.* O |  \n|       =o o=+ X +|  \n|        S.   - **|  \n|             .oo=|  \n|              o. |  \n|              ...|  \n|               .o|  \n+----[SHA256]-----+\n</code></pre>"},{"location":"guides/git/#entering-ssh-keys-to-github","title":"Entering SSH Keys to GitHub","text":"<p>To associate the SSH Keys with the GitHub account, open up a browser log in to your GitHub account and navigate to Settings. In the left sidebar, click on SSH and GPG keys, and then click the New SSH key button. First, give your key a descriptive title (e.g., \"compute0 access\"). Into the \"Key\" field, paste the output of the <code>cat ~/.ssh/id_ed25519.pub</code> command. Then, click Add SSH key to complete the process.</p> <p>Example</p> <p>The output of <code>cat ~/.ssh/id_ed25519.pub</code> command may look like this: <code>ssh-ed25519 AAAAC3NzaC1lZDI1NTE5AFFAINEUXKjXifc2rFMIwl54TUcokiOaPpowft7m42b9ccUY anscott@davidson.edu</code></p> <p>Make sure the e-mail in the .pub file is the same as your GitHub account. You may have more ssh-keys listed in this file, you only need to copy one of them to add a SSH key to your GitHub account. </p>"},{"location":"guides/git/#creating-a-github-repository","title":"Creating a GitHub Repository","text":"<p>Projects in GitHub are called repositories, and you can create a GitHub repository from the main page of GitHub. Once you are logged in, in the left sidebar, you can click on the new green button to create a new repository. This will direct you to Create a new repository page.</p> <p>On this page, you have to choose the repository owner from a dropdown menu, and a repository name. After that, you may provide a brief description on what this repository entails in the Description section, and opt in to create a README.md file to describe your project. You can edit this file after you create the repository. Lastly, you need to choose if you want this repository to be public or private. A public repository can be seen by everyone, and private repository can only be seen by you by default. In both private and public repositories, you can add other users to make edits to the project later.  </p> <p>Example</p> <p>Owner: AndrewScott Repository Name: Psychedelic Drugs Testing Description: A list of resources on how to process the contents of the drugs Private Repository  </p> <p>Note</p> <p>Most of the time a README.md file includes how to run the code in a repository and more detailed information regarding the content of the repository. </p>"},{"location":"guides/git/#cloning-a-github-repository","title":"Cloning a GitHub Repository","text":"<p>In order to access to a GitHub repository from your research cluster node, you can clone your repository. This will copy everything you have on a repository to a folder in your current directory.</p> <p>Cloning a repository requires retrieval of the repository link. This can be found in the GitHub repository page by clicking on the green Code button. This will display a modal with three methods to clone the repository. The default one is HTTPS, and you need to select the SSH option. Then, you can copy the repository link.</p> <p>Example</p> <p>The HTTPS and SSH repository links will look something like this: HTTPS: https://github.com/[username]/[repository name].git SSH: git@github.com:[username]/[repository name].git</p> <p>With the repository link, you can use the <code>git clone [repository link]</code> command to create a copy of the repository in your current directory.</p> <p>Note</p> <p>If you used the HTTPS link to clone a repository, you can remove the repository folder completely from your directory and then clone with SSH link again.</p> <p>You can read about how to clone repositories with HTTPS and SSH if you want to try a different method. </p>"},{"location":"guides/git/#git-add-commit-push-flow","title":"Git Add-Commit-Push Flow","text":"<p>Once you are in the cloned repository folder, you can make changes to any file or folder inside it. When you are done with your changes and would like to save them, you can use the Add-Commit-Push flow. This flow includes using <code>git add</code>, <code>git commit</code>, and <code>git push</code> commands.</p> <p>Before we go over each of these commands, it is always a good idea to retrieve and check for the current status of the repository using the <code>git remove update</code> and  <code>git status</code> command. The first command will retrieve all of the changes made by others, and the second command can show you whether your current state of your repository is the most updated.</p> <p>Example</p> <p>After running <code>git status</code>, you may see an output like this if your repository is up to date with latest changes.</p> <p><code>On branch main Your branch is up to date with 'origin/main'. (...)</code></p> <p>If there was a change, the output may look like the following: <code>Your branch is behind 'origin/main' by 1 commit, and can be fast-forwarded. (use \"git pull\" to update your local branch)</code> </p> <p>If your repository is not up to date with the latest changes (this may be because someone else made changes to the repository), you may have to resolve merge conflicts.</p> <p>Once you know it is safe to move on with the Add-Commit-Push workflow, change your current directory to the top directory of your repository. </p> <p><code>git add .</code> This command will record every change you made in the repository folder since the last time you completed the Add-Commit-Push flow.</p> <p><code>git commit -m \"[commit message]\"</code> Once you recorded every change, you must give a log message describing the changes for the new changes. Make sure your commit message is meaningful and gives an idea on what was changed/added/removed from the project (while respecting to the 72 character limit).</p> <p>Example</p> <p><code>git commit -m \"Added comments to training.py\"</code> <code>git commit -m \"Removed bug #12 - refer to meeting notes\"</code> </p> <p><code>git push</code> The last leg of the flow is synchronizing the changes with the repository to allow changes to be seen by everyone else. </p>"},{"location":"guides/git/#best-practices","title":"Best Practices","text":"<ul> <li>You can change the a repository from private to public, or public to private anytime.</li> <li>If you have confidential or large sized files, you can create a .gitignore file in your repository's top folder to ignore these files from being uploaded.</li> <li>When you are working with multiple people, it is best to be on different branches. This will help you avoid merge conflicts.</li> </ul>"},{"location":"guides/jupyterlab/","title":"JupyterLab Tutorial","text":"<p>Research Computing Department provides JupyterLab, a web-based development platform. It allows you to run various applications utilizing the Research Computing Department's computing resources.</p>"},{"location":"guides/jupyterlab/#installing-extensions","title":"Installing Extensions","text":"<p>JupyterLab allows users to install extensions to customize the existing functionalities or add new ones. Depending on the extension's installation method, you can either use the Extension Manager or the Terminal to install your own extensions. </p>"},{"location":"guides/jupyterlab/#installing-through-the-extension-manager-tab","title":"Installing Through the Extension Manager Tab","text":"<p>The Extension Manager tab displays two different tabs to the user: Installed and Discover.</p> <p>The Installed tab lists the extensions that you already have installed on your JupyterLab, and you can delete the extensions if you wish to do so.</p> <p>The Discover tab lists the extensions you can install on your JupyterLab. You can browse extensions using the search bar provided at the top of the panel. In order to learn more about an extension, you can click on the extension name for further description on what is the extension and how to install it. Once you selected an extension, you can click on the \"Install\" button to install the extension. </p>"},{"location":"guides/jupyterlab/#installing-through-the-terminal","title":"Installing Through the Terminal","text":"<p>From the main menu of JupyterLab, open a new window and start the Terminal application. Before starting on how to install extensions on JupyterLab, start your conda environment by running the <code>conda activate</code> command.</p> <p>Note</p> <p>If the <code>conda activate</code> command suggests you to run <code>conda init</code> first, you should do as so and then start a new Terminal application.</p> <p>Once you have activated your environment, you can install your extensions using <code>conda install</code> command.</p> <p>Example</p> <p>You can install the jupyter-resource-usage extension to monitor the CPU usage on your JupyterLab. It can be installed using the following command: <code>conda install -c conda-forge jupyter-resource-usage</code></p> <p>Warning</p> <p>While installing JupyterLab extensions, don't forget to check its version requirements. For instance, jupyter-resource-usage package requires JupyterLab version 3.x or 4.x, while some of its features only works with <code>ipykernel &gt;= 6.11.0</code>. You can check the versions of these core packages by using the <code>jupyter --version</code> command. </p>"},{"location":"guides/jupyterlab/#using-git","title":"Using Git","text":"<p>You can access Git using the left panel of JupyterLab, and it is installed by default. This panel allows you to use Git with a simplified interface.</p> <p>Depending on your current directory in the file browser, the Git panel will show different options. If you are in a directory with Git initialized, the panel will have a basic graphical user interface for using Git. If you are not in a directory with Git initialized, then the panel will display the option to you to initialize a repository.</p>"},{"location":"guides/jupyterlab/#initializing-and-cloning-a-repository","title":"Initializing and Cloning a Repository","text":"<p>The Git panel allows you to initialize a Git repository in your current directory. Before you initialize a Git repository, make sure to be in the correct directory in the File Browser as the Git panel will automatically initialize the repositry in the current directory of the File Browser. </p> <p>You can also clone a repository by selecting the Clone a Repository option. This will create a copy of the repository using the URL you provided in your current directory. </p> <p>Once you have initialized your repository, the Git panel will provide you some basic functionalities of Git. There are two main tabs to consider on this panel: Changes and History.</p>"},{"location":"guides/jupyterlab/#changes-tab","title":"Changes Tab","text":"<p>Changes tab includes three sub-tabs named Staged, Changed, and Untracked. Whenever a file in this repository is created/modified/deleted, it will be listed under one of these tabs. </p>"},{"location":"guides/jupyterlab/#tracking-a-file","title":"Tracking a File","text":"<p>Once a new file is added to the repository or has never been tracked, it will be listed under the Untracked tab. Git tags every file that needs to be tracked, and if it is not tagged then Git will not watch for changes and get the file uploaded to the repository. If you wish to tag the file, then highlight the file under the Untracked tab and click on the \"+\" symbol to \"track this file\".</p> <p>Example</p> <p>If you initialize a repository, you can create a test.txt file in your current directory to see it getting listed under \"Untracked\" tab of the Git panel. Highlight the file and click on the \"+\" symbol to move the file under the Staged tab. </p>"},{"location":"guides/jupyterlab/#commiting-a-file","title":"Commiting a File","text":"<p>Once you have Staged changes (listed under the Staged tab), you can write a Summary Message and a brief description of the changes to save the changes to the repository.</p> <p>Example</p> <p>Once test.txt file is staged, then you must write a commit message in the  Summary text-box to briefly summarize your changes. Additionally you can also add a description if you need more space for your summary. Then, click on Commit button to save the staged changes.</p> <p>Warning</p> <p>Commit button only saves the staged changes (files listed under Staged tab). Files under the Changed and Untracked tabs are not saved. </p> <p>First time commiting a file will ask for a name and e-mail address to associate the commit to the repository. Make sure to use the correct e-mail address you want to associate your repository with. </p> <p>Once changes are commited, you can find the commit details in the History tab which we will discuss later. This tab will allow you to rollback to previous versions of your repository easily.</p>"},{"location":"guides/jupyterlab/#modifying-a-file","title":"Modifying a File","text":"<p>Modified files are listed under the Changed tab. When a file is modified, it will automatically be moved to this tab. In order to save the changes, you can click on the \"+\" symbol to \"stage the changes\".  </p> <p>Example</p> <p>Select your test.txt file in your repository from the File Browser and then type a random text in it. Then, save the file using the upper menu: \"File-&gt;Save Text\". From the Git panel, you can see this file now listed under the Changed tab. You can stage the changes and commit to save the changes to the repository.</p> <p>Warning</p> <p>If you make further changes to a staged file, then it will move back under the Changed tab because the file is no longer has the same contents. In order to save the latest state of the file, you have to stage the file again. </p> <p>If you want to revert a file back to the previous staged version, you can highlight the file and click on the \"\u21ba\" symbol to revert changes. This will immediately revert the changes and you may no longer have access to your edits. </p>"},{"location":"guides/jupyterlab/#history-tab","title":"History Tab","text":"<p>Whenever you commit to the repository, each of the commits are listed under this tab. It will display various tags depending on which branch this commit belongs to, but also the name of the commit. You can uncollapse the commit to list the changes that were made in that commit, and revert back to those changes. </p>"},{"location":"guides/jupyterlab/#configuration-files","title":"Configuration Files","text":"<p>When you are running your own JupyterLab, there may be some settings you wish to configure. These can be changing default new file name, the day format, or the file content hashing algorithm. All of these and more can be changed through the Jupyter configuration file.</p> <p>You can create your own configuration file by first changing your current directory into the ~/.jupyter folder in your home directory using the <code>cd ~/.jupyter</code> command/ Then, you can use the <code>jupyter server --generate-config</code> command to create the default configuration file. It will create a file named \"jupyter_server_config.py\" in \"~/.jupyter\" folder. This file consists of a long list of options you can change. Refer to the official configuration documentation for details.</p> <p>Warning</p> <p>If you create multiple configuration files, keep in mind that JupyterLab checks configuration files in a hierarchy that can be found by using the <code>jupyter --paths</code> command. If you have multiple configuration files, you should check for possible conflicts.</p> <p>Alongside the configuration file, you can also use the \"Settings Editor\" that can be found under the Help tab of the top menu bar. </p>"},{"location":"guides/jupyterlab/#installing-and-managing-kernels","title":"Installing and Managing Kernels","text":"<p>Kernels in JupyterLab are programing language specific programs. Default JupyterLab configurations of the Research Computing Department provides kernels such as R, Octave, and Python. Alonside these ones, you can also install your own kernels.</p> <p>Each kernel requires its own way of installation, so refer to the list of JupyterLab kernels and their corresponding installation pages for further instructions.</p> <p>You can list the kernels installed in your JupyterLab by using the <code>jupyter kernelspec list</code> command.</p> <p>Example</p> <p>You can install the Rust kernel by running the following commands:</p> <pre><code>curl --proto '=https' --tlsv1.2 -sSf https://sh.rustup.rs | sh  \nrustup update  \ncargo install --locked evcxr_jupyter  \nevcxr_jupyter --install  \nrustup component add rust-src\n</code></pre> <p>Once installed, Rust will be an option under the notebooks. </p>"},{"location":"guides/jupyterlab/#further-reading","title":"Further Reading","text":"<ul> <li>For troubleshooting installing extensions refer to JupyterLab Extension Documentation.</li> <li>An unofficial list of JupyterLab extensions</li> </ul>"},{"location":"guides/slurm/advanced-batch-scripting/","title":"Advanced Batch Scripting","text":"<p>SLURM is a powerful tool and, in addition to having a cool name, is used by 70%+ of the systems found on the TOP500 list of most powerful supercomputers.</p> In\u00a0[\u00a0]: Copied! <pre># IDEA:\n#.  start with a batch-script example attempting to access \n#. a restricted partition; have the student modify the \n#. script so that it requests resources somewhere else, then run.\n# \n#. NOTE: should request access to a GPU.\n#. \n</pre> # IDEA: #.  start with a batch-script example attempting to access  #. a restricted partition; have the student modify the  #. script so that it requests resources somewhere else, then run. #  #. NOTE: should request access to a GPU. #.  In\u00a0[\u00a0]: Copied! <pre># IDEA:\n#.  A 1 ntask batch-script which uses `srun` to \n#. launch job-steps, passing different `--output` and\n#. `--job-name` values with each call.\n#. \n</pre> # IDEA: #.  A 1 ntask batch-script which uses `srun` to  #. launch job-steps, passing different `--output` and #. `--job-name` values with each call. #.  In\u00a0[\u00a0]: Copied! <pre># IDEA:\n#.   batch-script that requests one-node, 3 tasks, and 1 cpu per task.\n#. moreover, it should launch more than one job-step and which \n#. passed different values of `-n` &amp;`--job-name` \n#. \n#. NOTE: might use PushShift API  https://pushshift.io/api-parameters/ t\n#.    or their archive of reddit comments https://files.pushshift.io/reddit/comments/\n#.    to search for, or download different things\n#. \n</pre> # IDEA: #.   batch-script that requests one-node, 3 tasks, and 1 cpu per task. #. moreover, it should launch more than one job-step and which  #. passed different values of `-n` &amp;`--job-name`  #.  #. NOTE: might use PushShift API  https://pushshift.io/api-parameters/ t #.    or their archive of reddit comments https://files.pushshift.io/reddit/comments/ #.    to search for, or download different things #.  In\u00a0[\u00a0]: Copied! <pre># IDEA:\n#.    batch-script requests 2 nodes, 1 task-per-node, with \n#.  2 cpus-per-task. akes one call to `srun`. Calls \n#.  a multi-threaded python script (which will be provided).\n#\n</pre> # IDEA: #.    batch-script requests 2 nodes, 1 task-per-node, with  #.  2 cpus-per-task. akes one call to `srun`. Calls  #.  a multi-threaded python script (which will be provided). # In\u00a0[\u00a0]: Copied! <pre># VAUGE THOUGHT: Something using Julia.\n</pre> # VAUGE THOUGHT: Something using Julia. In\u00a0[\u00a0]: Copied! <pre>%%file \"example-four-stage1.sh\"\n#!/bin/bash\n### Job Parameters:\n#SBATCH --job-name \"Stage 1\"             # job name\n#SBATCH --output   \"logs/stage1.%j.log\"  # output file pattern\n\n### Script To Execute:\n# create virtual environment\npython3 -m venv \"env\"\n\n# activate environment\nsource \"env/bin/activate\"\n\n# install packages into environment\npython3 -m pip install numpy\n\n# With python environment setup,\n#    ...  we request \"stage 2\" be scheduled\nsbatch \"example-four-stage2.sh\"\n</pre> %%file \"example-four-stage1.sh\" #!/bin/bash ### Job Parameters: #SBATCH --job-name \"Stage 1\"             # job name #SBATCH --output   \"logs/stage1.%j.log\"  # output file pattern  ### Script To Execute: # create virtual environment python3 -m venv \"env\"  # activate environment source \"env/bin/activate\"  # install packages into environment python3 -m pip install numpy  # With python environment setup, #    ...  we request \"stage 2\" be scheduled sbatch \"example-four-stage2.sh\" In\u00a0[\u00a0]: Copied! <pre>%%file \"example-four-stage2.sh\"\n#!/bin/bash\n### Job Parameters:\n# Request Job-Array\n#SBATCH --array 1-20%10 # the array has 100 sub-jobs (labeled 1 to 100) \n                        # .. with at most 10 sub-jobs running at \n                        # .. any given point.\n# Generic Info for \"sub-job\"\n#SBATCH --job-name \"Stage 2\"               # sub-job name\n#SBATCH --output   \"logs/stage2.%A.%a.log\" # output file pattern\n                                           # .. %A -&gt; array-job-id\n                                           # .. %a -&gt; array-task-id \n# Resources To Request For Each \"sub-job\"\n#SBATCH --ntasks 1\n#SBATCH --cpus-per-task 1\n#SBATCH --mem-per-cpu 500\n#SBATCH --time 00:45:00  \n\n### Script To Execute:\nsource \"env/bin/activate\"         # activate environment from \"stage 1\"\npython3 \"scripts/example-four.py\" # execute python script\n</pre> %%file \"example-four-stage2.sh\" #!/bin/bash ### Job Parameters: # Request Job-Array #SBATCH --array 1-20%10 # the array has 100 sub-jobs (labeled 1 to 100)                          # .. with at most 10 sub-jobs running at                          # .. any given point. # Generic Info for \"sub-job\" #SBATCH --job-name \"Stage 2\"               # sub-job name #SBATCH --output   \"logs/stage2.%A.%a.log\" # output file pattern                                            # .. %A -&gt; array-job-id                                            # .. %a -&gt; array-task-id  # Resources To Request For Each \"sub-job\" #SBATCH --ntasks 1 #SBATCH --cpus-per-task 1 #SBATCH --mem-per-cpu 500 #SBATCH --time 00:45:00    ### Script To Execute: source \"env/bin/activate\"         # activate environment from \"stage 1\" python3 \"scripts/example-four.py\" # execute python script In\u00a0[\u00a0]: Copied! <pre>%%file \"example-four.py\"\n\"\"\"\n File: `example-four.py`\n Synopsis:\n    estimate condition number and print results for \n  a single random perturbation of the nxn identity matrix \n  (where n is fixed).\n\"\"\"\nfrom numpy import eye\nfrom numpy.random import uniform\nfrom numpy.linalg import cond\n\nn = 1000\neps = 0.01\n\nI = eye(n) # nxn identity matix\nX = uniform(size=[n,n])\n\n# generate perturbation `Z`\nZ = I + eps*uniform()*X \n\n# estimate condition number of `Z`\nc = cond(Z)\n\n# print results\nprint(f'{c}', flush=True)\n</pre> %%file \"example-four.py\" \"\"\"  File: `example-four.py`  Synopsis:     estimate condition number and print results for    a single random perturbation of the nxn identity matrix    (where n is fixed). \"\"\" from numpy import eye from numpy.random import uniform from numpy.linalg import cond  n = 1000 eps = 0.01  I = eye(n) # nxn identity matix X = uniform(size=[n,n])  # generate perturbation `Z` Z = I + eps*uniform()*X   # estimate condition number of `Z` c = cond(Z)  # print results print(f'{c}', flush=True) <p>To see what's happening we'll need to switch to a terminal and use the following script.</p> In\u00a0[\u00a0]: Copied! <pre>%%file \"watch-queue.sh\"\n#!/bin/bash\n\n# submit seed job (stage1)\nsbatch \"example-four-stage1.sh\"\n\n# watch queue\nii=0 \nwhile [ $ii -lt 1000 ]; do\n    squeue --user $USER --name \"Stage 1: Example 4\",\"Stage 2: Example 4\"\n    sleep 0.7 &amp;&amp; clear\n    ii=$((ii+1))\ndone\n</pre> %%file \"watch-queue.sh\" #!/bin/bash  # submit seed job (stage1) sbatch \"example-four-stage1.sh\"  # watch queue ii=0  while [ $ii -lt 1000 ]; do     squeue --user $USER --name \"Stage 1: Example 4\",\"Stage 2: Example 4\"     sleep 0.7 &amp;&amp; clear     ii=$((ii+1)) done In\u00a0[\u00a0]: Copied! <pre># IDEA:\n#.  request a two-part job, one portion is the server\n#. the other portion is a client. Start both of them\n#. using one `srun` call. \n#.    SEE EXAMPLES HERE: https://slurm.schedmd.com/heterogeneous_jobs.html \n#. \n</pre> # IDEA: #.  request a two-part job, one portion is the server #. the other portion is a client. Start both of them #. using one `srun` call.  #.    SEE EXAMPLES HERE: https://slurm.schedmd.com/heterogeneous_jobs.html  #."},{"location":"guides/slurm/advanced-batch-scripting/#advanced-batch-scripting","title":"Advanced Batch Scripting\u00b6","text":""},{"location":"guides/slurm/advanced-batch-scripting/#example-accounts-partitions-and-qos","title":"Example: Accounts, Partitions, and QOS.\u00b6","text":""},{"location":"guides/slurm/advanced-batch-scripting/#example-job-steps","title":"Example: Job Steps\u00b6","text":""},{"location":"guides/slurm/advanced-batch-scripting/#example-parallel-tasks-serial","title":"Example: Parallel Tasks (Serial)\u00b6","text":""},{"location":"guides/slurm/advanced-batch-scripting/#example-parallel-tasks-threaded","title":"Example: Parallel Tasks (Threaded)\u00b6","text":""},{"location":"guides/slurm/advanced-batch-scripting/#example-job-arrays","title":"Example: Job Arrays\u00b6","text":""},{"location":"guides/slurm/advanced-batch-scripting/#example-multiple-stages","title":"Example: Multiple Stages\u00b6","text":""},{"location":"guides/slurm/advanced-batch-scripting/#stage-1-example-four-stage-1sh","title":"Stage 1:  <code>example-four-stage-1.sh</code>\u00b6","text":""},{"location":"guides/slurm/advanced-batch-scripting/#stage-2-example-four-stage-2sh","title":"Stage 2: <code>example-four-stage-2.sh</code>\u00b6","text":""},{"location":"guides/slurm/advanced-batch-scripting/#python-script-example-fourpy","title":"Python Script: <code>example-four.py</code>\u00b6","text":""},{"location":"guides/slurm/advanced-batch-scripting/#submiting-results","title":"Submiting &amp; Results\u00b6","text":""},{"location":"guides/slurm/advanced-batch-scripting/#example-5-heterogenous-job","title":"Example 5: Heterogenous Job\u00b6","text":""},{"location":"guides/slurm/basic-usage/","title":"Jobs &amp; Batch Scripts","text":"<p>Fundamentally, a job, consists of two things: an allotment of resources &amp; snippets of code to execute using that allotment.\u00a0</p> <p>This means that when we request that SLURM perform some task (say, executing a snippet of code) we are also requesting a resource allotment which will be reserved for the execution of that task.</p> <p>There are a couple of ways we can request a resource allotment and perform tasks.\u00a0</p> <p>We might use the command <code>salloc</code> to request an allotment (by providing arguments on the command-line) and then interactively run code using the the resources once they become available.\u00a0Alternatively, if we want for the task to be performed without needing to interact with it, we can use the command <code>sbatch</code>.</p> <p>Learning the basics of the <code>sbatch</code> command is the purpose of this notebook.</p> <p>When provided the path of a shell-script, the <code>sbatch</code> command searches the script for lines beginning with <code>#SBATCH</code>.  Any line starting with <code>#SBATCH</code> occuring during the preamble (before any commands) is treated as meta-data specifying some parameters for a job we're requesting be created.</p> <p>If these parameters describe a feasible job, that job is created and queued until an appropriate resource allotment (matching the provided parameters) can be made.  Once an appropriate allotment becomes available, the provided shell-script is executed using the alloted resources.</p> <p>Any shell-script containing meta-data that <code>sbatch</code> can understand (say, describing a resource request or providing other ambient details) is called a batch-script (or job-script).</p> <p>Select the cell below and use <code>SHIFT</code>+<code>ENTER</code> to create the batch-script <code>example-one.sh</code>,</p> In\u00a0[\u00a0]: Copied! <pre>%%file example-one.sh\n#!/bin/bash\n### Job Parameters:  \n#SBATCH --job-name \"My Letter\"     # job's name\n#SBATCH --output   \"letter.%j.log\" # output log (%j gets replaced with job's id)\n#SBATCH --comment  \"A humble job.\" # comment about job\n\n### Script To Execute:\namount=$((30 + RANDOM % 60)) # number between 30 and 90\nmemory=$((SLURM_MEM_PER_CPU * SLURM_CPUS_PER_TASK * 1024 * 1024))\ndraft=(\" Dear ${USER},\\n\\n\"\n       \"  I hope this letter finds you well; it is a glorious $(date +%A)\\n\"\n       \"in $(date +%B) and I find myself executing on \"$(hostname -s)\" with\\n\"\n       \"access to ${memory} bytes of memory and $(nproc) cpu(s). Knowing that\\n\"\n       \"these resources are shared, I have chosen to surrender ${amount}\\n\"\n       \"seconds of my alloted time to processes less fortunate than I.\\n\\n\"\n       \"Cheers,\\n\" \"  Job ${SLURM_JOB_ID}\\n\")\n\n# send letter &amp; take a nap.\necho -e \"${draft[@]}\" &amp;&amp; sleep ${amount}\n    \n</pre> %%file example-one.sh #!/bin/bash ### Job Parameters:   #SBATCH --job-name \"My Letter\"     # job's name #SBATCH --output   \"letter.%j.log\" # output log (%j gets replaced with job's id) #SBATCH --comment  \"A humble job.\" # comment about job  ### Script To Execute: amount=$((30 + RANDOM % 60)) # number between 30 and 90 memory=$((SLURM_MEM_PER_CPU * SLURM_CPUS_PER_TASK * 1024 * 1024)) draft=(\" Dear ${USER},\\n\\n\"        \"  I hope this letter finds you well; it is a glorious $(date +%A)\\n\"        \"in $(date +%B) and I find myself executing on \"$(hostname -s)\" with\\n\"        \"access to ${memory} bytes of memory and $(nproc) cpu(s). Knowing that\\n\"        \"these resources are shared, I have chosen to surrender ${amount}\\n\"        \"seconds of my alloted time to processes less fortunate than I.\\n\\n\"        \"Cheers,\\n\" \"  Job ${SLURM_JOB_ID}\\n\")  # send letter &amp; take a nap. echo -e \"${draft[@]}\" &amp;&amp; sleep ${amount}      <p>To submit the batch-script to SLURM, we use the <code>sbatch</code> command. If <code>sbatch</code> successfully creates the job associated with the provided script, it will output the job's id.</p> <p>Select the following cell and use <code>SHIFT</code>+<code>ENTER</code> to evaluate it and submit the example batch-script we created,</p> In\u00a0[\u00a0]: Copied! <pre>sbatch example-one.sh \n</pre> sbatch example-one.sh  <p>Once a job has been successfully submitted, it will appear in the SLURM scheduling queue until it completes. To view jobs currently in the queue, use the command <code>squeue</code>.</p> <p>To view the queue, execute the following cell using <code>SHIFT</code>+<code>ENTER</code> (see if you can locate your job using the JOBID column)</p> In\u00a0[\u00a0]: Copied! <pre>squeue\n</pre> squeue <p>As fun as submitting a job and viewing the queue might be, what happenes once the job executes is fundamentally more important. Complete the task described in the following cell to view the output of your batch-script,</p> In\u00a0[\u00a0]: Copied! <pre># TASK: Identify the line containing `--output` in the batch-script\n#    and use the information provided there to determine the full filename\n#    of the file containing the output from your job.\n#      Place this filename in the quotes below and execute the\n#    cell using SHIFT+ENTER.\n\ncat \"\"\n</pre> # TASK: Identify the line containing `--output` in the batch-script #    and use the information provided there to determine the full filename #    of the file containing the output from your job. #      Place this filename in the quotes below and execute the #    cell using SHIFT+ENTER.  cat \"\" <p>Use <code>SHIFT</code>+<code>ENTER</code> to create the file <code>example-two.sh</code> containing the code from the next cell,</p> In\u00a0[\u00a0]: Copied! <pre>%%file \"example-two.sh\"\n#!/bin/bash\n### Job Parameters:\n#SBATCH --job-name  \"Arguments\" # display name\n#SBATCH --output    \"out.log\"   # where to log terminal output \n#SBATCH --error     \"err.log\"   #  .. and error messages\n#SBATCH --open-mode truncate    # always overwrite log files \n\n# Resources required\n#SBATCH --ntasks 1          # number of tasks we'll perform\n#SBATCH --cpus-per-task 1   # num. cpus each task will require\n#SBATCH --mem-per-cpu 128   # memory required per cpu (in megabytes)\n\n### Script To Execute:\nfor item in \"$@\"; do # loop provided arguments.\n    # print the length of the argument (as a string)\n    echo -n \"The argument '${item}' is ${#item} characters long. \"\n    # and then do something random...\n    amount=$((RANDOM % 6))   # choose `amount` to sleep\n    sleep 0.${amount}        # sleep for `amount/10` seconds\n    echo \"Slept for 0.${amount} seconds.\"\ndone\n</pre> %%file \"example-two.sh\" #!/bin/bash ### Job Parameters: #SBATCH --job-name  \"Arguments\" # display name #SBATCH --output    \"out.log\"   # where to log terminal output  #SBATCH --error     \"err.log\"   #  .. and error messages #SBATCH --open-mode truncate    # always overwrite log files   # Resources required #SBATCH --ntasks 1          # number of tasks we'll perform #SBATCH --cpus-per-task 1   # num. cpus each task will require #SBATCH --mem-per-cpu 128   # memory required per cpu (in megabytes)  ### Script To Execute: for item in \"$@\"; do # loop provided arguments.     # print the length of the argument (as a string)     echo -n \"The argument '${item}' is ${#item} characters long. \"     # and then do something random...     amount=$((RANDOM % 6))   # choose `amount` to sleep     sleep 0.${amount}        # sleep for `amount/10` seconds     echo \"Slept for 0.${amount} seconds.\" done <p>The awesome thing about batch-scripts is they are also shell-scripts. This means we can execute them without needing to go through SLURM, and that the normal testing &amp; development workflow is available.</p> <p>Use <code>SHIFT</code>+<code>ENTER</code> to evaluate the following cell and verify the batch-script works properly,</p> In\u00a0[\u00a0]: Copied! <pre>bash example-two.sh \"first\" second{0..2} \n</pre> bash example-two.sh \"first\" second{0..2}  <p>Optional: In the cell with batch-script's code, locate the line containing --cpus-per-task and change the number of requested CPUs to 2. Save these changes to <code>example-two.sh</code> by evaluating that cell, then verify the script still works appropriately.</p> <p>When you submit a batch-script to SLURM, it's possible to provide a sequence of arguments which will be passed to the script when it executes.</p> <p>Use <code>SHIFT</code>+<code>ENTER</code> to evaluate the following cell and submit the batch-script along with arguments to be used when it executes.</p> In\u00a0[\u00a0]: Copied! <pre>sbatch example-two.sh \"lion\" \"tigers\" argument{1..500}  \"bear\" \n</pre> sbatch example-two.sh \"lion\" \"tigers\" argument{1..500}  \"bear\"  <p>To verify the  submitted job is running, we'll use <code>squeue</code> again.  However, this time, instead of seeing all jobs in the queue, we'll restrict to only jobs associated with our user. To do this we need to use the <code>--user</code> argument for <code>squeue</code>.</p> In\u00a0[\u00a0]: Copied! <pre># excute this cell using SHIFT+ENTER\nsqueue --user $USER\n</pre> # excute this cell using SHIFT+ENTER squeue --user $USER <p>How did we know about the <code>--user</code> argument?</p> <p>We used <code>man</code>. The system command <code>man</code> is an important resource when using UNIX/Linux based systems.  The command provides detailed documentation (or manuals) for various topics, among those topics you'll find \"usage and runtime behavior\" information for a most commands available at a terminal.</p> <p>In the case of <code>squeue</code>, we can learn a lot about what sort of arguments it accepts by skimming the documentation presented by running <code>man squeue</code>. For example, a passage detailing how to use the argument <code>--user</code> is contained within.</p> <p>Use <code>SHIFT</code>+<code>ENTER</code> to evaluate the following cell and display the manual for the <code>squeue</code> command. Then, either by, going to the <code>Edit</code> menu and selecting <code>Find</code>, or using scroll-bar to the right, locate the documentation for the --user option,</p> In\u00a0[\u00a0]: Copied! <pre>man squeue\n</pre> man squeue <p>To finish this example, determine the name of the file containing the job's standard output, then use the <code>cat</code> command to display it's contents.</p> In\u00a0[\u00a0]: Copied! <pre># TASK: display output\n</pre> # TASK: display output <p>Use <code>SHIFT</code>+<code>ENTER</code> to create the file <code>example-three.sh</code> containing the code from the next cell,</p> In\u00a0[\u00a0]: Copied! <pre>%%file \"example-three.sh\"\n#!/bin/bash\n### Job Parameters:\n#SBATCH --job-name \"Recursive\"     # job name\n#SBATCH --output   \"recursive.log\" # place to log output\n#SBATCH --open-mode append         # always append to logs\n#SBATCH --begin     now+10         # specify when the job should start\n                                   # .. (waits 10 seconds after submission)\n### Script To Execute:\n# print job detials\necho \"Running job $SLURM_JOB_ID\"\necho \"Batch script file: $0\"\n\n# submit new job using *this* script (recursion)\nsbatch \"$0\"\n</pre> %%file \"example-three.sh\" #!/bin/bash ### Job Parameters: #SBATCH --job-name \"Recursive\"     # job name #SBATCH --output   \"recursive.log\" # place to log output #SBATCH --open-mode append         # always append to logs #SBATCH --begin     now+10         # specify when the job should start                                    # .. (waits 10 seconds after submission) ### Script To Execute: # print job detials echo \"Running job $SLURM_JOB_ID\" echo \"Batch script file: $0\"  # submit new job using *this* script (recursion) sbatch \"$0\" <p>We'll submit the job to SLURM as normal, however this time we will request that it be considered for execution immediately.</p> In\u00a0[\u00a0]: Copied! <pre># execute this cell using SHIFT+ENTER\nsbatch --begin now example-three.sh\n</pre> # execute this cell using SHIFT+ENTER sbatch --begin now example-three.sh <p>As it turns out, any piece of information which can be provided by an <code>#SBATCH</code> line in a batch-script, can be directly passed to <code>sbatch</code> as a command-line argument (and vice versa).</p> <p>As an example, let's submit a job using the same script, but have the initial job request 1G of memory per cpu, and not start running until after tomorrow at mid-night.</p> In\u00a0[\u00a0]: Copied! <pre># execute this cell using SHIFT+ENTER\nsbatch --mem-per-cpu 1024 --begin tomorrow example-three.sh \n</pre> # execute this cell using SHIFT+ENTER sbatch --mem-per-cpu 1024 --begin tomorrow example-three.sh  <p>Let's check the status of the jobs we've submitted. This time, we'll only request information about jobs with the name \"Recursive\" associated with our user.</p> In\u00a0[\u00a0]: Copied! <pre># execute this cell using SHIFT+ENTER\nsqueue --user $USER --name \"Recursive\" \n</pre> # execute this cell using SHIFT+ENTER squeue --user $USER --name \"Recursive\"  <p>Since these jobs are recursive, they will keep resubmitting themselves forever.</p> <p>As a result, it's important for us to stop (or cancel) any instances which appear in the queue.  To accomplish this, we'll use the command <code>scancel</code>.</p> <p>This command can handle some of the same arguments as <code>squeue</code>. In particular, to cancel all jobs with the name \"Recursive\" associated with our user, we just run,</p> In\u00a0[\u00a0]: Copied! <pre># execute this cell using SHIFT+ENTER\nscancel --user $USER --name \"Recursive\"\n</pre> # execute this cell using SHIFT+ENTER scancel --user $USER --name \"Recursive\" <p>Finally, if you want historical information about the jobs you've submitted, you use the <code>sacct</code> command. Moreover, it has argments which are similar to those of <code>squeue</code>.</p> <p>For example, to see a list of jobs (past and present) associated with your user, we can use the following,</p> In\u00a0[\u00a0]: Copied! <pre># execute this cell using SHIFT+ENTER\nsacct --user $USER\n</pre> # execute this cell using SHIFT+ENTER sacct --user $USER"},{"location":"guides/slurm/basic-usage/#jobs-batch-scripts","title":"Jobs &amp; Batch Scripts\u00b6","text":""},{"location":"guides/slurm/basic-usage/#what-is-a-job","title":"What Is A Job?\u00b6","text":""},{"location":"guides/slurm/basic-usage/#how-do-we-request-resources-perform-tasks","title":"How Do We Request Resources &amp; Perform Tasks?\u00b6","text":""},{"location":"guides/slurm/basic-usage/#the-command-sbatch","title":"The command <code>sbatch</code>\u00b6","text":""},{"location":"guides/slurm/basic-usage/#example-1","title":"Example 1\u00b6","text":""},{"location":"guides/slurm/basic-usage/#submiting-the-script-getting-results","title":"Submiting The Script &amp; Getting Results\u00b6","text":""},{"location":"guides/slurm/basic-usage/#example-2","title":"Example 2\u00b6","text":""},{"location":"guides/slurm/basic-usage/#submiting-the-script-getting-results","title":"Submiting The Script &amp; Getting Results\u00b6","text":""},{"location":"guides/slurm/basic-usage/#example-3","title":"Example 3\u00b6","text":""},{"location":"guides/slurm/basic-usage/#submiting-the-script-getting-results","title":"Submiting The Script &amp; Getting Results\u00b6","text":""},{"location":"guides/slurm/containers/","title":"Using Containers","text":"<p><code>TODO: Outline document</code></p> <p>Some interesting links until then:</p> <ol> <li>https://singularity-hub.org/</li> <li>https://github.com/singularityhub/</li> <li>https://github.com/singularityhub/singularity-compose-examples</li> </ol>"},{"location":"guides/slurm/containers/#using-containers","title":"Using Containers\u00b6","text":""},{"location":"guides/slurm/overview/","title":"SLURM","text":"<p>SLURM is a job scheduling and resource management system used at Davidson College to facilitate usage of Research Computing resources. SLURM organizes computational work into bundles of resources and code to be executed using those resources. These bundles are called jobs and you can create a job for your work which utilizes available nodes to run your program.</p>"},{"location":"guides/slurm/overview/#basic-usage","title":"Basic Usage","text":""},{"location":"guides/slurm/overview/#submitting-jobs-with-sbatch","title":"Submitting Jobs with sbatch","text":"<p>In order to run your programs through SLURM, first you have to create a job-request (this is done by writing a simple script) and then submitting it to SLURM. Once your job request is received by SLURM, it will allocate the necessary resources to execute your job.</p> <p>You can create your job-request as a bash script and then submit the request using the <code>sbatch [script name]</code> command.</p> <p>Example</p> <p>Create a new file named \"test_script.sh\" and \"python_script.py\" in your current directory. \"test_script.sh\" should have the following content:</p> <pre><code>#!/bin/bash\n\n### The following are the job-request specifications:\n\n#SBATCH --job-name \"Test Job\"   ## Name of the job  \n#SBATCH --ntasks 1              ## Number of tasks for MPI workers\n#SBATCH --cpus-per-task 1       ## Number of CPUs to be used for each task\n#SBATCH --partition basic       ## The partition the job will run on\n#SBATCH --account public        ## The group name the job will be associated with\n\n### The following are the command(s) you wish to run:\n\npython3 python_script.py\n</code></pre> <p>\"python_script.py\" should have the following content:</p> <pre><code>print(\"running a python script\")\n</code></pre> <p>Once the file is saved, you can submit a job request running the script using the <code>sbatch test_script.sh</code> command. After you submit a job successfully, you will receive a response including the job-id of the submitted job: <code>Submitted batch job [job-id]</code>.</p> <p>Note</p> <p>Here are some of the most commonly used commands:</p> <ul> <li><code>squeue --me</code> lists all the jobs you submitted  </li> <li><code>scancel [job-id]</code> cancels the job you submitted  </li> <li><code>sacct</code> displays all the job information and their current state  </li> <li><code>sstat [job-id]</code> displays the status information (memory/CPU usage, amount of steps, etc.) of a running job  </li> <li><code>scrontab</code> for submitting reccuring jobs  </li> </ul> <p>Warning</p> <p>Be mindful of others while running heavy computations, it may impact the workflow of other users computations.</p> <p>Once a job is completed, a text file with the output of the commands you ran will be created in your home directory. </p>"},{"location":"guides/slurm/overview/#submitting-jobs-with-salloc","title":"Submitting Jobs with salloc","text":"<p>Batch jobs submitted with the <code>sbatch</code> command does not allow user interaction. You can use the <code>salloc</code> command for interactive job-requests instead. This commands requires you to specify desired resources as options such as <code>--nodes</code>, <code>--mem</code>, and <code>--ntasks</code>. Once resources are allocated, a shell will be provided to you. You can run desired scripts inside this shell and debug/test them immediately.</p> <p>Example</p> <p>In order to allocate 1 node, 4G of memory, you can use the <code>salloc --nodes=1 --mem=4G --sntasks=1</code> command. SLURM will allocate the resources, and provide you the shell afterwards. The output will look something like this:</p> <pre><code> anscott:compute0:~$ salloc --nodes=1 --mem=4G --ntasks=1\n salloc: Granted job allocation 102176\n salloc: Waiting for resource configuration\n salloc: Nodes gpu0 are ready for job\n bash-4.4$\n</code></pre> <p>Warning</p> <p>Once you are done using the <code>salloc</code> command, do not forget to release the resources by exiting the bash using the <code>exit</code> command. </p> <p>Warning</p> <p>If your terminal session dies, the job submitted with <code>sbatch</code> will keep running unlike a job submitted within <code>salloc</code>. It is recommended that you submit the jobs using <code>sbatch</code> command. </p>"},{"location":"guides/slurm/overview/#job-specifications","title":"Job Specifications","text":"<p>SLURM provides various ways to customize your job-request file. You can give a job-request a total time limit or a custom name among many other options. In order to make these customizations, edit your job-request file by adding options. </p> <p>Example</p> <p>You can add a total run time to the job request, which will stop the job execution after a given time. For this purpose, <code>--time [HH:MM:SS]</code> option can be used. Add <code>#SBATCH --time 05:00</code> option below the other options in the \"test_script.sh\" to limit the job's execution to 5 minutes.</p> <pre><code>#!/bin/bash\n\n#SBATCH --job-name \"Test Job\"  \n#SBATCH --ntasks=1  \n#SBATCH --cpus-per-task=1  \n#SBATCH --partition basic  \n#SBATCH --account public  \n#SBATCH --time 05:00\n\n./python_script.py\n</code></pre> <p>The complete list of options are available on the official SLURM sbatch docs page</p> <p>Warning</p> <p>There are limitations on the amount of resources you can use with your job-requests. If you are trying to add a job-specification such as <code>--mem 100G</code>, which requests 100G memory per node, the limitations may override the specification.  </p>"},{"location":"guides/slurm/overview/#further-information","title":"Further Information","text":"<ul> <li>You can display which clusters available to submit job-requests using the <code>sinfo</code> command. The default cluster is named as \"basic\". If you wish to use other clusters, you can reach out to ti@davidson.edu with a request.</li> <li>To have access to the GPUs, you must have a faculty member to support your request. </li> <li>For troubleshooting, official SLURM documentation is a good place to start. </li> </ul>"},{"location":"guides/slurm/overview/#advanced-usage","title":"Advanced Usage","text":"<p>SLURM allows execution of programs using the Davidson College Research Computing Nodes, and there are various ways to utilize the resources provided by the Compute Nodes. Depending on the program you are running, you can allocate the necessary resources to improve the execution time of your program. </p>"},{"location":"guides/slurm/overview/#jobs-and-tasks","title":"Jobs and Tasks","text":"<p>Fundamentally, a job, consists of two things: an allotment of resources and snippets of code to execute using that allotment. On the other hand, a task is a subset of a job, that will be assigned to a single compute node to be executed.</p>"},{"location":"guides/slurm/overview/#advanced-scheduling","title":"Advanced Scheduling","text":"<p>Talk about important options. Each of these options changes the resources allocated. We will run through some examples.</p> <p>This means that when you are submitting a job-request to SLURM, you should consider the number of tasks you want to run in parallel and specific resources that should be assigned for each task.</p>"},{"location":"guides/slurm/overview/#single-threaded-jobs","title":"Single Threaded Jobs","text":"<p>By default, when a job is submitted to SLURM with <code>sbatch</code>, SLURM allocates the requested resources and runs the script using</p> <p>Example</p> <p>In your current directory, create two files. One is named as bash_script.sh and the other is python_task.py. bash_script.sh file will serve as your job-request file, which contains the job specifications. This contains options such as:  </p> <ul> <li>The job name associated with the job-request (--job-name),  </li> <li>Which accounts and partition it is using (--partition and --account),  </li> <li>How many tasks it will run in total (--ntasks),  </li> <li>How many nodes it will run on (--nodes),  </li> <li>How much memory is allocated per CPU (--mem-per-cpu), and  </li> <li>How many CPUs will be allocated per task (--cpus-per-task).</li> </ul> <p>Copy the following into your bash_script.sh file:</p> <pre><code>#!/bin/bash\n\n### Job Specifications\n\n#SBATCH --job-name=\"Single Threaded, Single Task Job\"  # job name\n#SBATCH --ntasks=1                                     # number of tasks in the script\n#SBATCH --nodes=1                                      # number of nodes the job will allocate\n#SBATCH --mem-per-cpu=4G                               # memory allocated per CPU\n#SBATCH --cpus-per-task=1                              # number of CPUs allocated per task\n#SBATCH --partition=basic                              # name of the partition this job will run on\n#SBATCH --account=public                               # name of the account using resources for the job\n\n### The following are the command(s) you wish to run:\n\npython3 python_task.py\n</code></pre> <p>Copy the following into your python_task.py file:</p> <pre><code> print(\"Executing a single threaded job.\")\n</code></pre> <p>You can submit the job-request using the <code>sbatch bash_script.sh</code> command. </p>"},{"location":"guides/slurm/overview/#multi-task-jobs","title":"Multi-Task Jobs","text":"<p>Each program you run in SLURM can be considered as a task. If you have multiple programs, you can list all of them using individual srun command in your job-submission file. You can scale the resource allocations using the ntasks command, which makes sure that each task that got allocated gets the same amount of resources. In addition to this, you can run each program in parallel by running them in the background.  </p> <p>Example</p> <p>Change the contents of bash_script.sh with the following:</p> <pre><code>#!/bin/bash\n\n#SBATCH --job-name=\"Single Threaded, Multi-Task Job\"  \n#SBATCH --ntasks=2  \n#SBATCH --nodes=1  \n#SBATCH --mem-per-cpu=4G  \n#SBATCH --cpus-per-task=1  \n#SBATCH --partition=basic  \n#SBATCH --account=public\n\n### The following are the tasks that will be launched\n\nsrun python3 ./python_task.py &amp;     ## Task 1\nsrun python3 ./python_task.py &amp;     ## Task 2\n                                    ## The \"&amp;\" sign runs the program in the background. \nwait                                ## \"wait\" pauses the script execution until \n                                       ## previously submitted tasks are completed\n</code></pre> <p>In this job-request file, we are running two tasks, python_task.py, that allocates: one node (--nodes=1), 4 GB of memory per CPU (--mem-per-cpu=4G), and one CPU (--cpu-per-task=1) for each of the tasks. If you had another task, it would be appopriate to  change the number of tasks (--ntasks) to 3.</p> <p>Each submitted task in this job-request file runs in the background, and this was done by the \"&amp;\" at the end of the command. It means that both of the tasks will be running in the background in parallel, and the job will be completed only after task executions are completed. </p>"},{"location":"guides/slurm/overview/#customized-multi-task-jobs","title":"Customized Multi-Task Jobs","text":"<p>When a task is being executed using sbatch, it inherits the specifications made in the job-request file. You can change the job specifications by adding the options to the srun command specificed in the job-request file. </p> <p>Example</p> <pre><code>#!/bin/bash\n\n#SBATCH --job-name=\"Single Threaded, Multi-Task Job\"  \n#SBATCH --ntasks=2  \n#SBATCH --nodes=1  \n#SBATCH --mem-per-cpu=4G  \n#SBATCH --cpus-per-task=1  \n#SBATCH --partition=basic  \n#SBATCH --account=public\n\nsrun python3 ./long_python_task.py --mem-per-cpu=8G &amp;  ## Task 1\nsrun python3 ./short_python_task.py &amp;                  ## Task 2\nwait\n</code></pre> <p>In this job-request, there are two tasks with different execution times. Assume Task 1 takes a long time to complete while Task 2 takes a shorter time. You can increase the memory allocated for Task 1 to shorten the execution time. In this case, Task 1 will inherit every option other than memory per CPU (--mem-per-cpu) and will allocate 8 GB of memory, while Task 2 will only allocate 4 GB of memory. </p>"},{"location":"guides/slurm/overview/#multithreaded-jobs","title":"Multithreaded Jobs","text":"<p>If your program happens to support multithreading, you can also improve the execution time of the tasks by assigning additional cores to the tasks. This allows running parts of the tasks concurrently. </p> <p>Example</p> <p>Replace the contents of the bash_script.sh with the following:</p> <pre><code>#!/bin/bash\n\n#SBATCH --job-name=\"Single Multithreaded-Task Job\"\n#SBATCH --ntasks=1\n#SBATCH --nodes=1\n#SBATCH --mem-per-cpu=4G\n#SBATCH --cpus-per-task=2\n#SBATCH --partition=basic\n#SBATCH --account=public\n\nsrun python3 python_script.py\n</code></pre> <p>Replace the contents of the python_script.py with the following:</p> <pre><code>import threading\n\n# Define the function threads will execute\ndef test_func():\n    print(\"Current thread is:\", threading.get_ident())\n\n# Create two threads, t1 and t2\nt1 = threading.Thread(target=test_func)\nt2 = threading.Thread(target=test_func)\n\n# Start the threads to execute the function\nt1.start()\nt2.start()\n\n# Wait for threads to complete their execution\nt1.join()\nt2.join()\n\nprint(\"Completed the execution of script\")\n</code></pre> <p>In this example, python_script.py script spawns two threads that executes the same function. In the job-request script, you can specify how many CPUs will be allocated (--cpus-per-task=2) for each task. This will make sure that 2 CPUs are available in total throughout the execution of the task.   </p> <p>Warning</p> <p>The correlation between time of completion and number of cores is not directly linear. As you increase the number of cores, the you may not observe a significant increase in the completion time.</p>"},{"location":"guides/slurm/overview/#gpus","title":"GPUs","text":"<p>The Davidson College Research Computing Nodes also have access to several GPUs (Graphical Processing Units) to accelarate computations of certain programs. Currently, the available GPUs to use are <code>quadro_rtx_5000</code> and <code>rtx_a6000</code>.</p> <p>Warning</p> <p>In order to have access to use the GPUs, you must have faculty sponsorship. Contact T&amp;I to submit a request to have access to GPUs.  </p> <p>You can specify the GPU you want to in your job-request file using the <code>-gres=[gpu-name]</code> option. </p> <p>Example</p> <p>One of the libraries that can make use of the GPUs is the PyTorch library in Python.  </p> <p>Replace the contents of the bash_script.sh with the following:</p> <pre><code>#!/bin/bash\n#SBATCH --job-name=\"GPU Task\"\n#SBATCH --account=public\n#SBATCH --partition=basic\n#SBATCH --nodes=1\n#SBATCH --ntasks=1\n#SBATCH --cpus-per-task=1\n#SBATCH --mem-per-cpu=4G\n#SBATCH --gres=gpu:quadro_rtx_5000                  # GPU allocated for the job\n\nmodule purge\nmodule load foss PyTorch/1.12.1-CUDA-11.7.0         # Load the required modules \npython3 gpu_pytorch.py                              # Run the Python script\n</code></pre> <p>Replace the contents of the python_script.py file with the following:</p> <pre><code>## Import the time and pytorch libraries\nfrom time import perf_counter\nimport torch\n\nN = 500\nquadro = torch.device('cuda')\nexample_tensor = torch.randn(N, N, dtype=torch.float64, device=quadro) ## Create a tensor with mean and variance 500\nt0 = perf_counter()                                                    ## Create a timer\nu, s, v = torch.svd(x)                                                 ## Compute the SVD (singular value decomposition) of a matrix\nelapsed_time = perf_counter() - t0\n\nprint(\"Execution time: \", elapsed_time)\nprint(\"Result: \", torch.sum(s).cpu().numpy())\n</code></pre> <p>This script will run a basic PyTorch program that utilizes the GPU selected in the bash_script.sh file.  </p> <p>Note</p> <p>You can only utilize the GPU if your program is specifically designed to request GPU resources. In order to check if your program is actually using the GPU allocated for your job, use <code>nvidia-smi</code> command. </p> <p>There are two ways to allocate of the GPUs through SLURM. You can either allocate the whole GPU by using the <code>--gres=gpu:[gpu-name]</code> option, or the <code>--gres=shard:[gpu-name]:[sharding-number]</code> to allocate part of the GPU. </p>"},{"location":"guides/slurm/job-arrays/job-arrays/","title":"Job Arrays","text":"In\u00a0[2]: Copied! <pre>%matplotlib widget\nimport matplotlib.pyplot as plt\nimport numpy as np\n\n# pull in ODE def &amp; solver\nfrom three_body import three_body_ode, solve\n</pre> %matplotlib widget import matplotlib.pyplot as plt import numpy as np  # pull in ODE def &amp; solver from three_body import three_body_ode, solve In\u00a0[3]: Copied! <pre>R0 = np.array([\n    [-1.2, -0.80],\n    [ 1.0, -0.83],\n    [ 1.1,  0.80]\n])\n\nsol = solve(R0)\nsol\n</pre>  R0 = np.array([     [-1.2, -0.80],     [ 1.0, -0.83],     [ 1.1,  0.80] ])  sol = solve(R0) sol  Out[3]: <pre>array([[[-1.2       , -0.8       ],\n        [ 1.        , -0.83      ],\n        [ 1.1       ,  0.8       ]],\n\n       [[-1.19999979, -0.79999996],\n        [ 0.99999994, -0.82999983],\n        [ 1.09999995,  0.79999977]],\n\n       [[-1.19999917, -0.79999983],\n        [ 0.99999974, -0.82999932],\n        [ 1.09999978,  0.79999906]],\n\n       ...,\n\n       [[ 0.01779596, -3.96171236],\n        [ 0.01973524, -3.96095831],\n        [ 1.50673095,  6.61195546]],\n\n       [[ 0.01804623, -3.96136095],\n        [ 0.01956476, -3.9614291 ],\n        [ 1.50677705,  6.61230022]],\n\n       [[ 0.01848101, -3.96153585],\n        [ 0.01929669, -3.9616215 ],\n        [ 1.50682315,  6.61264496]]])</pre> <p>We'll now plot the computed trajectories, indicating the initial positions of each body with a red cross symbol.</p> In\u00a0[4]: Copied! <pre>plt.title(f'$R_0 = [{\" ,\".join(map(str,R0.flatten()))}]$')\nfor ii in range(3):\n    plt.plot(sol[:,ii,0],sol[:,ii,1])\n    \nplt.scatter(\n    sol[0,:,0], sol[0,:,1],\n    c='r', marker='+', s=30\n)\n</pre>  plt.title(f'$R_0 = [{\" ,\".join(map(str,R0.flatten()))}]$') for ii in range(3):     plt.plot(sol[:,ii,0],sol[:,ii,1])      plt.scatter(     sol[0,:,0], sol[0,:,1],     c='r', marker='+', s=30 )  Out[4]: <pre>&lt;matplotlib.collections.PathCollection at 0x15211ab18af0&gt;</pre> <p>Translating this to something tangible, it can be understood as requiring that we only compute solutions with initial values chosen randomly using a function like:</p> In\u00a0[5]: Copied! <pre>random_position = lambda : np.array([\n      [np.random.normal(-1, 0.25), np.random.normal(-1, 0.25)],\n      [np.random.normal( 1, 0.25), np.random.normal(-1, 0.25)],\n      [np.random.normal( 1, 0.25), np.random.normal( 1, 0.25)]\n  ])\n</pre>  random_position = lambda : np.array([       [np.random.normal(-1, 0.25), np.random.normal(-1, 0.25)],       [np.random.normal( 1, 0.25), np.random.normal(-1, 0.25)],       [np.random.normal( 1, 0.25), np.random.normal( 1, 0.25)]   ])  <p>However, because of the way pseudo-random numbers are generated by <code>numpy</code>; we can't simply put the code from the above cell in <code>three_body.py</code> then run it a bunch of times, since this would result in extremely poor sampling/parameter-selection</p> In\u00a0[6]: Copied! <pre># sample-size/number of parameters\nN = 5000\n\n# generating and sorting the sample/parameters\nwith open('parameters.txt', 'w') as params_file:\n    for _ in range(N):\n        # observe a random positiion \n        initial_pos = random_position().flatten()\n        # store in `params_file` for use later\n        print(' '.join(['{:0.5f}']*6).format(*initial_pos), file=params_file)\n</pre> # sample-size/number of parameters N = 5000  # generating and sorting the sample/parameters with open('parameters.txt', 'w') as params_file:     for _ in range(N):         # observe a random positiion          initial_pos = random_position().flatten()         # store in `params_file` for use later         print(' '.join(['{:0.5f}']*6).format(*initial_pos), file=params_file)  In\u00a0[1]: Copied! <pre>!sed -n 2134p \"parameters.txt\"\n</pre> !sed -n 2134p \"parameters.txt\" <pre>-0.74574 -1.21814 0.83396 -1.07720 0.81459 0.85784\n</pre> <p>What's important about this is that SLURM Job Arrays provide us a sane mechanism we can use to index a collection of jobs.</p> <p>It does this by making available the <code>SLURM_ARRAY_TASK_ID</code> environment variable inside of each executing job for the array.</p> In\u00a0[\u00a0]: Copied! <pre>#SBATCH --array 1-1000%25\n</pre>  #SBATCH --array 1-1000%25"},{"location":"guides/slurm/job-arrays/job-arrays/#job-arrays","title":"Job Arrays\u00b6","text":""},{"location":"guides/slurm/job-arrays/job-arrays/#example-three-body-computation","title":"Example Three Body Computation\u00b6","text":"<p>We'll find an approximate the solution using the value of $R_0$ below</p>"},{"location":"guides/slurm/job-arrays/job-arrays/#specializing-on-a-familty-of-initial-values","title":"Specializing On A Familty of Initial Values\u00b6","text":"<p>For the purposes of this example, we're interested in collecting information about the behavior of solutions to the three body problem (in 2D) when the initial positions ($r_1$, $r_2$ and $r_3$) are chosen so as to satisfy: $$ \\begin{align}  r_1 &amp; \\sim \\mathcal{N}_2\\left([-1,-1],\\ 0.25\\cdot I_2\\right) \\\\  r_2 &amp; \\sim \\mathcal{N}_2\\left([\\ \\ \\ 1,-1],\\ 0.25 \\cdot I_2\\right) \\\\  r_3 &amp; \\sim \\mathcal{N}_2\\left([\\ \\ \\ 1, \\ \\ \\ 1],\\ 0.25\\cdot I_2\\right) \\\\ \\end{align} $$</p>"},{"location":"guides/slurm/job-arrays/job-arrays/#workaround","title":"Workaround\u00b6","text":"<p>We have to be deliberate with how we choose and distribute the initial positions. There are several ways we can accomplish this vague task, however in this example we'll only concern ourselves with one.</p> <p>In this case, what we are going to do is create one very large sample/parameter-list which satisfies the conditions we are looking for, and then use <code>SLURM</code> to schedule the computations.</p>"},{"location":"guides/slurm/job-arrays/job-arrays/#where-job-arrays-come-in","title":"Where Job Arrays Come In\u00b6","text":"<p>We can index the <code>parameters.txt</code> using line numbers, and this is fairly standard to do:</p>"},{"location":"guides/slurm/job-arrays/three_body/","title":"Three body","text":"In\u00a0[\u00a0]: Copied! <pre>import sys, hashlib, os\nimport numpy as np\nfrom scipy.integrate import solve_ivp\nimport matplotlib.pyplot as plt\n</pre> import sys, hashlib, os import numpy as np from scipy.integrate import solve_ivp import matplotlib.pyplot as plt In\u00a0[\u00a0]: Copied! <pre># initial mass for each of the three bodies\nM0 = np.array([\n    0.8,\n    1.1,\n    1.0\n])\n</pre> # initial mass for each of the three bodies M0 = np.array([     0.8,     1.1,     1.0 ]) In\u00a0[\u00a0]: Copied! <pre># initial momenta ...\nP0 = np.array([\n   [0.0, 0.0],\n   [0.0, 0.0],\n   [0.0, 0.0]\n])\n</pre> # initial momenta ... P0 = np.array([    [0.0, 0.0],    [0.0, 0.0],    [0.0, 0.0] ]) In\u00a0[\u00a0]: Copied! <pre># initial positions ...\nR0 = None\n</pre> # initial positions ... R0 = None In\u00a0[\u00a0]: Copied! <pre># rhs of autonomous ODE system\ndef three_body_ode(t, s):\n    \"\"\"\n    Name: threebody_ode_sys\n    Synop:\n        calculates the instantaneous values of the time-derivative\n      of state variables for a system of three bodies only\n      under the influence of non-rel gravity in 2D.\n    Assumption:\n       s[0:6] code the position of the bodies\n       s[6:12] code the momenta ...\n       s[12:15] code the masses ...\n    \"\"\"\n    r12=np.sqrt((s[0]-s[2])**2 + (s[1]-s[3])**2)**3\n    r13=np.sqrt((s[0]-s[4])**2 + (s[1]-s[5])**2)**3\n    r23=np.sqrt((s[2]-s[4])**2 + (s[3]-s[5])**2)**3\n    return [\n        s[6+0]/s[12+0],\n        s[6+1]/s[12+0],\n        s[6+2]/s[12+1],\n        s[6+3]/s[12+1],\n        s[6+4]/s[12+2],\n        s[6+5]/s[12+2],\n        - s[12+1]*(s[0]-s[2])/r12 - s[12+2]*(s[0]-s[4])/r13,\n        - s[12+1]*(s[1]-s[3])/r12 - s[12+2]*(s[1]-s[5])/r13,\n        - s[12+0]*(s[2]-s[0])/r12 - s[12+2]*(s[2]-s[4])/r23,\n        - s[12+0]*(s[3]-s[1])/r12 - s[12+2]*(s[3]-s[5])/r23,\n        - s[12+0]*(s[4]-s[0])/r13 - s[12+1]*(s[4]-s[2])/r23,\n        - s[12+0]*(s[5]-s[1])/r13 - s[12+1]*(s[5]-s[3])/r23,\n        0.0,\n        0.0,\n        0.0\n    ]\n</pre> # rhs of autonomous ODE system def three_body_ode(t, s):     \"\"\"     Name: threebody_ode_sys     Synop:         calculates the instantaneous values of the time-derivative       of state variables for a system of three bodies only       under the influence of non-rel gravity in 2D.     Assumption:        s[0:6] code the position of the bodies        s[6:12] code the momenta ...        s[12:15] code the masses ...     \"\"\"     r12=np.sqrt((s[0]-s[2])**2 + (s[1]-s[3])**2)**3     r13=np.sqrt((s[0]-s[4])**2 + (s[1]-s[5])**2)**3     r23=np.sqrt((s[2]-s[4])**2 + (s[3]-s[5])**2)**3     return [         s[6+0]/s[12+0],         s[6+1]/s[12+0],         s[6+2]/s[12+1],         s[6+3]/s[12+1],         s[6+4]/s[12+2],         s[6+5]/s[12+2],         - s[12+1]*(s[0]-s[2])/r12 - s[12+2]*(s[0]-s[4])/r13,         - s[12+1]*(s[1]-s[3])/r12 - s[12+2]*(s[1]-s[5])/r13,         - s[12+0]*(s[2]-s[0])/r12 - s[12+2]*(s[2]-s[4])/r23,         - s[12+0]*(s[3]-s[1])/r12 - s[12+2]*(s[3]-s[5])/r23,         - s[12+0]*(s[4]-s[0])/r13 - s[12+1]*(s[4]-s[2])/r23,         - s[12+0]*(s[5]-s[1])/r13 - s[12+1]*(s[5]-s[3])/r23,         0.0,         0.0,         0.0     ] In\u00a0[\u00a0]: Copied! <pre>def solve(r0=R0, p0=P0, m0=M0, t_max=50.0, t_delta=0.001):\n    \"\"\"\n    Name: solve\n    Synop:\n      assemble initial conditions and return approximate\n     solution to ODE system.\n    \"\"\"\n    # holds initial ODE-system state\n    s0 = np.zeros(15)\n\n    # assign initial masses\n    s0[12:15] = m0\n    # initial momenta ...\n    s0[6:12] = p0.flatten()\n    # initial positions ...\n    s0[0:6] = r0.flatten()\n\n    # assemble simple t-mesh\n    t_eval = np.arange(0, t_max+t_delta, t_delta)\n\n    # compute &amp; return apporximate solution to ODE sys on `t`-mesh\n    sol = solve_ivp(\n        three_body_ode, [0, t_max], s0,\n        t_eval=t_eval\n    )\n\n    return np.reshape(\n        sol.y.T[:,:6],\n        (sol.y.shape[-1], 3, 2)\n    )\n</pre> def solve(r0=R0, p0=P0, m0=M0, t_max=50.0, t_delta=0.001):     \"\"\"     Name: solve     Synop:       assemble initial conditions and return approximate      solution to ODE system.     \"\"\"     # holds initial ODE-system state     s0 = np.zeros(15)      # assign initial masses     s0[12:15] = m0     # initial momenta ...     s0[6:12] = p0.flatten()     # initial positions ...     s0[0:6] = r0.flatten()      # assemble simple t-mesh     t_eval = np.arange(0, t_max+t_delta, t_delta)      # compute &amp; return apporximate solution to ODE sys on `t`-mesh     sol = solve_ivp(         three_body_ode, [0, t_max], s0,         t_eval=t_eval     )      return np.reshape(         sol.y.T[:,:6],         (sol.y.shape[-1], 3, 2)     ) In\u00a0[\u00a0]: Copied! <pre>def main():\n    # parse commandline arguments\n    try:\n        R0 = np.array(list(map(float, sys.argv[1:])))\n    except:\n        print(\"ERROR: must provide exactly six floating point values\"\n              \" as commandline arguments\")\n        return 1\n\n    # solve three-body problem for given ICs\n    sol = solve(R0)\n\n    # generate plot showing evoluation of bodies\n    plt.figure(figsize = (12, 8))\n    plt.title(f'$R_0 = [{\", \".join(sys.argv[1:])}]$')\n    # trajectories\n    for ii in range(3):\n        plt.plot(sol[:, ii, 0], sol[:, ii, 1])\n\n    # starting position\n    plt.scatter(\n        sol[0,:,0], sol[0,:,1], c='r', marker='+', s=30)\n\n    plt.xlim([-2.5,2.5])\n    plt.ylim([-2.5,2.5])\n    plt.xlabel('x')\n    plt.ylabel('y')\n\n    # generate unique filename\n    imgfile = hashlib.sha256(\n        ','.join(sys.argv[1:]).encode('utf-8')\n    ).hexdigest() + '.png'\n\n    # save plot\n    plt.savefig(os.path.join('imgs', imgfile))\n    return 0\n</pre> def main():     # parse commandline arguments     try:         R0 = np.array(list(map(float, sys.argv[1:])))     except:         print(\"ERROR: must provide exactly six floating point values\"               \" as commandline arguments\")         return 1      # solve three-body problem for given ICs     sol = solve(R0)      # generate plot showing evoluation of bodies     plt.figure(figsize = (12, 8))     plt.title(f'$R_0 = [{\", \".join(sys.argv[1:])}]$')     # trajectories     for ii in range(3):         plt.plot(sol[:, ii, 0], sol[:, ii, 1])      # starting position     plt.scatter(         sol[0,:,0], sol[0,:,1], c='r', marker='+', s=30)      plt.xlim([-2.5,2.5])     plt.ylim([-2.5,2.5])     plt.xlabel('x')     plt.ylabel('y')      # generate unique filename     imgfile = hashlib.sha256(         ','.join(sys.argv[1:]).encode('utf-8')     ).hexdigest() + '.png'      # save plot     plt.savefig(os.path.join('imgs', imgfile))     return 0 In\u00a0[\u00a0]: Copied! <pre>if __name__ == \"__main__\":\n    sys.exit(main())\n    pass\n</pre> if __name__ == \"__main__\":     sys.exit(main())     pass"}]}